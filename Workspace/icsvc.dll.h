/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'icsvc.dll'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct _RTL_CRITICAL_SECTION_DEBUG;
struct ICMsgTransaction;
struct std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *>;
struct IC;
struct ICTransport;
struct ICTransport_vtbl;
struct ICEventMonitor;
struct ICEndpoint;
struct _IC_VERSION;

/* 392 */
enum IC_TRANSPORT_ROLE : __int32
{
  ICTransportRoleClient = 0x0,
  ICTransportRoleServer = 0x1,
  ICTransportRoleCount = 0x2,
};

/* 393 */
enum IC_FEATURE_IDX : __int32
{
  ICFeatureVersionNegotiation = 0x0,
  ICFeatureIdxHeartbeat = 0x1,
  ICFeatureIdxKvpExchange = 0x2,
  ICFeatureIdxShutdown = 0x3,
  ICFeatureIdxTimeSync = 0x4,
  ICFeatureIdxVss = 0x5,
  ICFeatureIdxRdv = 0x6,
  ICFeatureIdxGuestInterface = 0x7,
  ICFeatureIdxVMSession = 0x8,
  ICFeatureCount = 0x9,
};

/* 394 */
enum IC_TRANSPORT_PROTO : __int32
{
  ICTransportProtoVMBus = 0x0,
  ICTransportProtoNamed = 0x1,
  ICTransportProtoCount = 0x2,
};

/* 398 */
enum IC_GUESTSVC_OPERATION : __int32
{
  ICGuestSvcOperationStartFileCopy = 0x0,
  ICGuestSvcOperationWriteToFile = 0x1,
  ICGuestSvcOperationCompleteFileCopy = 0x2,
  ICGuestSvcOperationCancelFileCopy = 0x3,
};

/* 399 */
enum IC_GUESTSVC_FLAGS : __int32
{
  ICGuestSvcStartFileCopyFlagsOverwrite = 0x1,
  ICGuestSvcStartFileCopyFlagsCreateFullPath = 0x2,
};

/* 435 */
enum IC_KVP_EXCHANGE_OPERATION : __int32
{
  ICKvpExchangeOperationGet = 0x0,
  ICKvpExchangeOperationSet = 0x1,
  ICKvpExchangeOperationDelete = 0x2,
  ICKvpExchangeOperationEnumerate = 0x3,
  ICKvpExchangeOperationGetIpAddressInfo = 0x4,
  ICKvpExchangeOperationSetIpAddressInfo = 0x5,
  ICKvpExchangeOperationCount = 0x6,
};

/* 930 */
struct /*VFT*/ IC_vtbl
{
  void (__thiscall *~IC)(IC *this);
  void (__thiscall *Finalize)(IC *this);
  bool (__thiscall *Initialize)(IC *this);
  bool (__thiscall *Run)(IC *this);
  bool (__thiscall *Start)(IC *this);
  bool (__thiscall *Stop)(IC *this);
  void (__thiscall *Pause)(IC *this);
  void (__thiscall *Resume)(IC *this);
};

/* 929 */
struct __cppobj IC
{
  IC_vtbl *__vftable /*VFT*/;
  unsigned int m_FeatureIdx;
  ICTransport *m_Transport;
  ICEndpoint *m_Endpoint;
  bool m_Initialized;
  bool m_Terminate;
  void *m_PauseResumeEvent;
  unsigned __int16 m_SupportedVersionCount;
  _IC_VERSION *m_SupportedVersions;
};

/* 618 */
struct _RTL_CRITICAL_SECTION
{
  _RTL_CRITICAL_SECTION_DEBUG *DebugInfo;
  int LockCount;
  int RecursionCount;
  void *OwningThread;
  void *LockSemaphore;
  unsigned int SpinCount;
};

/* 931 */
struct __cppobj ICTransport
{
  ICTransport_vtbl *__vftable /*VFT*/;
  void *m_StateInfoBuffer;
  unsigned int m_StateInfoBufferSize;
  void *m_DataHandle;
  ICEventMonitor *m_EventMonitor;
  volatile unsigned int m_IoCountOutstanding;
  void *m_IoCountOutstandingEvent;
  unsigned __int8 m_Flags;
  _RTL_CRITICAL_SECTION m_CriticalSection;
};

/* 871 */
struct __cppobj std::less<unsigned char>
{
};

/* 872 */
struct __cppobj std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> >
{
};

/* 873 */
struct __cppobj std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> > > : std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> >
{
};

/* 874 */
struct __cppobj std::_Container_base0
{
};

/* 877 */
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char const ,ICMsgTransaction *> > > : std::_Container_base0
{
  std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> *_Myhead;
  unsigned int _Mysize;
};

/* 878 */
struct __cppobj std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char const ,ICMsgTransaction *> > >,1> : std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> > >
{
  std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char const ,ICMsgTransaction *> > > _Myval2;
};

/* 879 */
struct __cppobj std::_Compressed_pair<std::less<unsigned char>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char const ,ICMsgTransaction *> > >,1>,1> : std::less<unsigned char>
{
  std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char const ,ICMsgTransaction *> > >,1> _Myval2;
};

/* 880 */
struct __cppobj std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char,ICMsgTransaction *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ICMsgTransaction *> >,0> >
{
  std::_Compressed_pair<std::less<unsigned char>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char const ,ICMsgTransaction *> > >,1>,1> _Mypair;
};

/* 881 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned char,ICMsgTransaction *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ICMsgTransaction *> >,0> > : std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char,ICMsgTransaction *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ICMsgTransaction *> >,0> >
{
};

/* 882 */
struct __cppobj std::map<unsigned char,ICMsgTransaction *> : std::_Tree<std::_Tmap_traits<unsigned char,ICMsgTransaction *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ICMsgTransaction *> >,0> >
{
};

/* 883 */
struct __cppobj ICMsgTransactionTbl
{
  unsigned __int8 m_NextTransactionId;
  _RTL_CRITICAL_SECTION m_TransTableLock;
  std::map<unsigned char,ICMsgTransaction *> m_TransTable;
};

/* 80 */
enum ICEndpointState : __int32
{
  ICEndpointStateDisconnected = 0x0,
  ICEndpointStateConnecting = 0x1,
  ICEndpointStateConnected = 0x2,
  ICEndpointStateDisconnecting = 0x3,
  ICEndpointStateOffered = 0x4,
  ICEndpointStateCount = 0x5,
};

/* 935 */
struct _IC_VERSION
{
  unsigned __int16 Major;
  unsigned __int16 Minor;
};

/* 934 */
struct __cppobj ICEndpoint
{
  ICMsgTransactionTbl m_MsgTransactionTbl;
  bool (__stdcall *m_MsgHandlerTable[8])(ICEndpoint *, const void *);
  ICTransport *m_Transport;
  void *m_DispatchThreadHandle;
  ICEndpointState m_State;
  void *m_IsDisconnected;
  _RTL_CRITICAL_SECTION m_CriticalSection;
  _RTL_CRITICAL_SECTION m_DisconnectCriticalSection;
  unsigned __int16 m_SupportedMessageVersionCount;
  _IC_VERSION *m_SupportedMessageVersions;
  _IC_VERSION m_NegotiatedFrameworkVersion;
  _IC_VERSION m_NegotiatedMessageVersion;
};

/* 5189 */
typedef int HRESULT;

/* 932 */
struct /*VFT*/ ICTransport_vtbl
{
  void (__thiscall *~ICTransport)(ICTransport *this);
  void (__thiscall *Close)(ICTransport *this, bool);
  bool (__thiscall *Initialize)(ICTransport *this);
  void (__thiscall *Finalize)(ICTransport *this);
  void (__thiscall *Pause)(ICTransport *this);
  void (__thiscall *Resume)(ICTransport *this);
  bool (__thiscall *Restore)(ICTransport *this);
  bool (__thiscall *OfferChannel)(ICTransport *this);
  bool (__thiscall *Open)(ICTransport *this, unsigned int);
  bool (__thiscall *Read)(ICTransport *this, void *, unsigned int, unsigned int *, unsigned int, unsigned int);
  HRESULT (__thiscall *StateInfoAlloc)(ICTransport *this, unsigned int);
  void (__thiscall *StateInfoFree)(ICTransport *this);
  HRESULT (__thiscall *StateInfoGet)(ICTransport *this, void **, unsigned int *);
  HRESULT (__thiscall *StateInfoSave)(ICTransport *this);
  HRESULT (__thiscall *StateInfoRestore)(ICTransport *this);
  bool (__thiscall *Write)(ICTransport *this, const void *, unsigned int, unsigned int *, unsigned int, unsigned int);
};

/* 714 */
struct _FILETIME
{
  unsigned int dwLowDateTime;
  unsigned int dwHighDateTime;
};

/* 933 */
struct __cppobj ICEventMonitor
{
  void *m_RunnableEventHandle;
  void *m_TerminateEventHandle;
  _FILETIME m_TimeOfLastPause;
};

/* 602 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/* 617 */
struct _RTL_CRITICAL_SECTION_DEBUG
{
  unsigned __int16 Type;
  unsigned __int16 CreatorBackTraceIndex;
  _RTL_CRITICAL_SECTION *CriticalSection;
  _LIST_ENTRY ProcessLocksList;
  unsigned int EntryCount;
  unsigned int ContentionCount;
  unsigned int Flags;
  unsigned __int16 CreatorBackTraceIndexHigh;
  unsigned __int16 SpareWORD;
};

/* 876 */
struct __cppobj std::pair<unsigned char const ,ICMsgTransaction *>
{
  const unsigned __int8 first;
  ICMsgTransaction *second;
};

/* 875 */
struct __cppobj std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *>
{
  std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> *_Left;
  std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> *_Parent;
  std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> *_Right;
  char _Color;
  char _Isnil;
  std::pair<unsigned char const ,ICMsgTransaction *> _Myval;
};

/* 789 */
struct __cppobj ICMsgTransaction
{
  unsigned __int8 m_TransactionId;
  void *m_MsgBodyResp;
  unsigned int m_MsgBodyRespSize;
  unsigned int m_Status;
  void *m_EventHandle;
};

/* 3678 */
struct _IC_SHUTDOWN_MSG_DATA
{
  unsigned int ReasonCode;
  unsigned int TimeoutInSeconds;
  unsigned int Flags;
  unsigned __int8 Message[2048];
};

/* 614 */
struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 3703 */
struct IC_GUESTSVC_MSG_HEADER
{
  IC_GUESTSVC_OPERATION Operation;
  _GUID ServiceID;
  _GUID SessionID;
};

/* 4902 */
typedef unsigned __int16 wchar_t;

/* 3704 */
struct IC_GUESTIFACE_START_OPERATION_MESSAGE
{
  IC_GUESTSVC_MSG_HEADER Header;
  wchar_t SourceFileName[260];
  wchar_t DestinationFilePath[260];
  unsigned int Flags;
  unsigned __int64 FileSizeInBytes;
};

/* 3705 */
struct __declspec(align(8)) IC_GUESTIFACE_COPY_OPERATION_MESSAGE
{
  IC_GUESTSVC_MSG_HEADER Header;
  __int64 Offset;
  unsigned int Size;
  unsigned __int8 Data[6144];
};

/* 427 */
enum GUEST_APPLICATION_STATE : __int32
{
  GuestApplicationStateUnknown = 0x0,
  GuestApplicationStateHealthy = 0x1,
  GuestApplicationStateCritical = 0x2,
};

/* 3907 */
struct _IC_HEARTBEAT_MSG_DATA
{
  unsigned __int64 SeqNum;
  GUEST_APPLICATION_STATE ApplicationState;
  unsigned __int8 Reserved[4];
};

/* 235 */
enum _COMPUTER_NAME_FORMAT : __int32
{
  ComputerNameNetBIOS = 0x0,
  ComputerNameDnsHostname = 0x1,
  ComputerNameDnsDomain = 0x2,
  ComputerNameDnsFullyQualified = 0x3,
  ComputerNamePhysicalNetBIOS = 0x4,
  ComputerNamePhysicalDnsHostname = 0x5,
  ComputerNamePhysicalDnsDomain = 0x6,
  ComputerNamePhysicalDnsFullyQualified = 0x7,
  ComputerNameMax = 0x8,
};

/* 4003 */
struct IC_KVP_PARENT_PARTITION_NAME_ENTRY
{
  const wchar_t *Key;
  _COMPUTER_NAME_FORMAT NameFormat;
};

/* 4004 */
struct _IC_KVP_EXCHANGE_MSG_HDR
{
  unsigned __int8 Operation;
  unsigned __int8 Pool;
};

/* 4006 */
struct _IC_KVP_EXCHANGE_IP_ADDRESS_VALUE
{
  wchar_t AdapterId[128];
  unsigned __int8 AddressFamily;
  unsigned __int8 DHCPEnabled;
  wchar_t IPAddress[1024];
  wchar_t Subnet[1024];
  wchar_t Gateway[512];
  wchar_t DNSServerAddresses[1024];
};

/* 4007 */
struct _IC_KVP_EXCHANGE_MSG_IP_ADDRESS_INFO
{
  _IC_KVP_EXCHANGE_MSG_HDR Header;
  _IC_KVP_EXCHANGE_IP_ADDRESS_VALUE Value;
};

/* 4008 */
struct _IC_KVP_EXCHANGE_MSG_VALUE
{
  unsigned int ValueType;
  unsigned int KeySize;
  unsigned int ValueSize;
  unsigned __int8 Key[512];
  unsigned __int8 Value[2048];
};

/* 4009 */
struct _IC_KVP_EXCHANGE_MSG_SET
{
  _IC_KVP_EXCHANGE_MSG_VALUE Value;
};

/* 4010 */
struct _IC_KVP_EXCHANGE_MSG_GET
{
  _IC_KVP_EXCHANGE_MSG_VALUE Value;
};

/* 4011 */
struct _IC_KVP_EXCHANGE_MSG_DELETE
{
  unsigned int KeySize;
  unsigned __int8 Key[512];
};

/* 4012 */
struct _IC_KVP_EXCHANGE_MSG_ENUMERATE
{
  unsigned int Index;
  _IC_KVP_EXCHANGE_MSG_VALUE Value;
};

/* 4013 */
union _IC_KVP_EXCHANGE_MSG::<unnamed_type_Body>
{
  _IC_KVP_EXCHANGE_MSG_GET Get;
  _IC_KVP_EXCHANGE_MSG_SET Set;
  _IC_KVP_EXCHANGE_MSG_DELETE Delete;
  _IC_KVP_EXCHANGE_MSG_ENUMERATE Enumerate;
};

/* 4014 */
struct _IC_KVP_EXCHANGE_MSG
{
  _IC_KVP_EXCHANGE_MSG_HDR Header;
  _IC_KVP_EXCHANGE_MSG::<unnamed_type_Body> Body;
};

/* 4015 */
struct _IC_KVP_EXCHANGE_IP_ADDRESS_BINARY_HEADER
{
  unsigned int IPv4AddressCount;
  unsigned int IPv6AddressCount;
  unsigned int IPv4GatewayCount;
  unsigned int IPv6GatewayCount;
  unsigned int IPv4DNSServerCount;
  unsigned int IPv6DNSServerCount;
};

/* 2395 */
struct in_addr::<unnamed_type_S_un>::<unnamed_type_S_un_b>
{
  unsigned __int8 s_b1;
  unsigned __int8 s_b2;
  unsigned __int8 s_b3;
  unsigned __int8 s_b4;
};

/* 2396 */
struct in_addr::<unnamed_type_S_un>::<unnamed_type_S_un_w>
{
  unsigned __int16 s_w1;
  unsigned __int16 s_w2;
};

/* 2397 */
union in_addr::<unnamed_type_S_un>
{
  in_addr::<unnamed_type_S_un>::<unnamed_type_S_un_b> S_un_b;
  in_addr::<unnamed_type_S_un>::<unnamed_type_S_un_w> S_un_w;
  unsigned int S_addr;
};

/* 2398 */
struct in_addr
{
  in_addr::<unnamed_type_S_un> S_un;
};

/* 4016 */
union in6_addr::<unnamed_type_u>
{
  unsigned __int8 Byte[16];
  unsigned __int16 Word[8];
};

/* 4017 */
struct in6_addr
{
  in6_addr::<unnamed_type_u> u;
};

/* 4018 */
struct _IC_KVP_EXCHANGE_IP_ADDRESS_VALUE_BINARY
{
  _IC_KVP_EXCHANGE_IP_ADDRESS_BINARY_HEADER Header;
  wchar_t AdapterId[128];
  unsigned __int8 AddressFamily;
  unsigned __int8 DHCPEnabled;
  in_addr IPv4Addresses[64];
  in6_addr IPv6Addresses[64];
  in_addr IPv4Subnets[64];
  unsigned int IPv6Subnets[64];
  in_addr IPv4Gateways[5];
  in6_addr IPv6Gateways[5];
  in_addr IPv4DNSServers[64];
  in6_addr IPv6DNSServers[64];
  unsigned __int16 IPAddressOrigins[128];
};

/* 4061 */
struct _IC_KVP_EXCHANGE_MSG_IP_ADDRESS_INFO_BINARY
{
  _IC_KVP_EXCHANGE_MSG_HDR Header;
  _IC_KVP_EXCHANGE_IP_ADDRESS_VALUE_BINARY Value;
};

/* 4062 */
union _IC_KVP_EXCHANGE_MSG2::<unnamed_type_IpMsg>
{
  _IC_KVP_EXCHANGE_MSG_HDR Header;
  _IC_KVP_EXCHANGE_MSG_IP_ADDRESS_INFO IpAddressInfo;
  _IC_KVP_EXCHANGE_MSG_IP_ADDRESS_INFO_BINARY IpAddressInfoBinary;
};

/* 4063 */
struct _IC_KVP_EXCHANGE_MSG2
{
  _IC_KVP_EXCHANGE_MSG2::<unnamed_type_IpMsg> IpMsg;
};

/* 4491 */
struct __declspec(align(8)) _IC_TIMESYNC_PROVIDER_MSG_DATA
{
  __int64 Offset;
  unsigned __int64 Delay;
  unsigned __int64 Dispersion;
  unsigned int Flags;
  unsigned __int8 LeapFlags;
  unsigned __int8 Stratum;
  unsigned __int8 Reserved[3];
};

/* 4522 */
struct __declspec(align(4)) _IC_TIMESYNC_MSG_DATA
{
  _FILETIME ParentTime;
  _FILETIME ChildTime;
  _FILETIME RoundTripTime;
  unsigned __int8 Flags;
};

/* 4523 */
struct __declspec(align(4)) _IC_TIMESYNC_REFERENCE_MSG_DATA
{
  _FILETIME ParentTime;
  unsigned __int64 VmReferenceTime;
  unsigned __int8 Flags;
  unsigned __int8 LeapFlags;
  unsigned __int8 Stratum;
  unsigned __int8 Reserved[3];
};

/* 4548 */
struct _IC_MSG_NEGOTIATE
{
  unsigned __int16 ICFrameworkVersionCount;
  unsigned __int16 ICMessageVersionCount;
  unsigned int Reserved;
  _IC_VERSION ICVersionData[1];
};

/* 4549 */
struct _IC_MSG_HDR
{
  _IC_VERSION ICVerFramework;
  unsigned __int16 ICMsgType;
  _IC_VERSION ICVerMessage;
  unsigned __int16 ICMsgSize;
  unsigned int Status;
  unsigned __int8 ICTransactionId;
  unsigned __int8 ICFlags;
  unsigned __int8 RESERVED[2];
};

/* 5068 */
typedef unsigned __int16 IC_VERSION_FIELD;

/* 6369 */
typedef unsigned __int16 IC_MSG_TYPE;

/* 6811 */
typedef unsigned __int8 IC_MSG_TRANS_ID;

/* 6816 */
typedef unsigned __int8 IC_MSG_HDR_FLAG;

/* 6956 */
typedef unsigned __int8 IC_TRANSPORT_FLAG;

/* 7182 */
typedef bool __stdcall IC_ENDPOINT_MSG_HANDLER(ICEndpoint *, const void *);

