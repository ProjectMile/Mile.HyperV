/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'icsvcext.dll'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct _RTL_CRITICAL_SECTION_DEBUG;
struct ICMsgTransaction;
struct std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *>;
struct IC;
struct ICTransport;
struct ICTransport_vtbl;
struct ICEventMonitor;
struct ICEndpoint;
struct _IC_VERSION;

/* 122 */
enum _IC_VSS_FREEZE_FLAGS : __int32
{
  IcVssFreezeFlagNone = 0x0,
  IcVssFreezeFlagAutoRecovery = 0x1,
  IcVssFreezeFlagIncludesSharedLuns = 0x2,
};

/* 140 */
enum IC_VSS_CLIENT_STATE : __int32
{
  ICVssClientStateNone = 0x0,
  ICVssClientStateFreeze = 0x1,
  ICVssClientStateThaw = 0x2,
  ICVssClientStateAutoRecovery = 0x3,
  ICVssClientStateBackupComplete = 0x4,
  ICVssClientStateCount = 0x5,
};

/* 838 */
enum IC_TRANSPORT_ROLE : __int32
{
  ICTransportRoleClient = 0x0,
  ICTransportRoleServer = 0x1,
  ICTransportRoleCount = 0x2,
};

/* 839 */
enum IC_TRANSPORT_PROTO : __int32
{
  ICTransportProtoVMBus = 0x0,
  ICTransportProtoNamed = 0x1,
  ICTransportProtoCount = 0x2,
};

/* 840 */
enum IC_FEATURE_IDX : __int32
{
  ICFeatureVersionNegotiation = 0x0,
  ICFeatureIdxHeartbeat = 0x1,
  ICFeatureIdxKvpExchange = 0x2,
  ICFeatureIdxShutdown = 0x3,
  ICFeatureIdxTimeSync = 0x4,
  ICFeatureIdxVss = 0x5,
  ICFeatureIdxRdv = 0x6,
  ICFeatureIdxGuestInterface = 0x7,
  ICFeatureIdxVMSession = 0x8,
  ICFeatureCount = 0x9,
};

/* 848 */
enum IC_VSS_OPERATION : __int32
{
  ICVssOperationCreate = 0x0,
  ICVssOperationDelete = 0x1,
  ICVssOperationCheckHotBackup = 0x2,
  ICVssOperationGetDirectMappedDevicesInfo = 0x3,
  ICVssOperationBackupComplete = 0x4,
  ICVssOperationFreezeApplications = 0x5,
  ICVssOperationThawApplications = 0x6,
  ICVssOperationAutoRecover = 0x7,
  ICVssOperationQueryGuestClusterInformation = 0x8,
  ICVssOperationCount = 0x9,
};

/* 851 */
enum IC_VSS_LUN_INFO_BUS_TYPE : __int32
{
  IcVssLunInfoBusTypeInvalid = 0x0,
  IcVssLunInfoBusTypeSCSI = 0x1,
  IcVssLunInfoBusTypeIDE = 0x2,
};

/* 1151 */
struct _IC_VSS_DISK_SIGNATURE::<unnamed_tag>::<unnamed_type_Mbr>
{
  unsigned int Signature;
};

/* 885 */
struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 1152 */
struct _IC_VSS_DISK_SIGNATURE::<unnamed_tag>::<unnamed_type_Gpt>
{
  _GUID DiskId;
};

/* 1153 */
union $E3CF17816136F1A2C73E2CA27B406F25
{
  _IC_VSS_DISK_SIGNATURE::<unnamed_tag>::<unnamed_type_Mbr> Mbr;
  _IC_VSS_DISK_SIGNATURE::<unnamed_tag>::<unnamed_type_Gpt> Gpt;
};

/* 1154 */
struct _IC_VSS_DISK_SIGNATURE
{
  unsigned int PartitionStyle;
  $E3CF17816136F1A2C73E2CA27B406F25 ___u1;
};

/* 930 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/* 929 */
struct _LARGE_INTEGER::<unnamed_type_u>
{
  unsigned int LowPart;
  int HighPart;
};

/* 931 */
union _LARGE_INTEGER
{
  $FAF74743FBE1C8632047CFB668F7028A __s0;
  _LARGE_INTEGER::<unnamed_type_u> u;
  __int64 QuadPart;
};

/* 1565 */
struct _IC_VSS_LUN_OFFSET
{
  unsigned int DiskNumber;
  _LARGE_INTEGER StartingOffset;
};

/* 1186 */
struct __cppobj std::allocator<unsigned short>
{
};

/* 1187 */
struct __cppobj std::_Wrap_alloc<std::allocator<unsigned short> > : std::allocator<unsigned short>
{
};

/* 1158 */
struct __cppobj std::_Container_base0
{
};

/* 7878 */
typedef unsigned __int16 wchar_t;

/* 1188 */
union std::_String_val<std::_Simple_types<unsigned short> >::_Bxty
{
  wchar_t _Buf[8];
  wchar_t *_Ptr;
  char _Alias[8];
};

/* 1189 */
struct __cppobj std::_String_val<std::_Simple_types<unsigned short> > : std::_Container_base0
{
  std::_String_val<std::_Simple_types<unsigned short> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
};

/* 1190 */
struct __cppobj std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned short> >,std::_String_val<std::_Simple_types<unsigned short> >,1> : std::_Wrap_alloc<std::allocator<unsigned short> >
{
  std::_String_val<std::_Simple_types<unsigned short> > _Myval2;
};

/* 1191 */
struct __cppobj std::_String_alloc<std::_String_base_types<unsigned short> >
{
  std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned short> >,std::_String_val<std::_Simple_types<unsigned short> >,1> _Mypair;
};

/* 1192 */
struct __cppobj std::wstring : std::_String_alloc<std::_String_base_types<unsigned short> >
{
};

/* 42 */
enum _VSS_SNAPSHOT_STATE : __int32
{
  VSS_SS_UNKNOWN = 0x0,
  VSS_SS_PREPARING = 0x1,
  VSS_SS_PROCESSING_PREPARE = 0x2,
  VSS_SS_PREPARED = 0x3,
  VSS_SS_PROCESSING_PRECOMMIT = 0x4,
  VSS_SS_PRECOMMITTED = 0x5,
  VSS_SS_PROCESSING_COMMIT = 0x6,
  VSS_SS_COMMITTED = 0x7,
  VSS_SS_PROCESSING_POSTCOMMIT = 0x8,
  VSS_SS_PROCESSING_PREFINALCOMMIT = 0x9,
  VSS_SS_PREFINALCOMMITTED = 0xA,
  VSS_SS_PROCESSING_POSTFINALCOMMIT = 0xB,
  VSS_SS_CREATED = 0xC,
  VSS_SS_ABORTED = 0xD,
  VSS_SS_DELETED = 0xE,
  VSS_SS_POSTCOMMITTED = 0xF,
  VSS_SS_COUNT = 0x10,
};

/* 1582 */
struct __cppobj __declspec(align(8)) _IC_VSS_SNAPSHOT_PROP
{
  _GUID SnapshotId;
  std::wstring OriginalVolumeName;
  int SnapshotAttributes;
  __int64 CreationTimestamp;
  _VSS_SNAPSHOT_STATE Status;
};

/* 1597 */
struct /*VFT*/ IC_vtbl
{
  void (__thiscall *~IC)(IC *this);
  void (__thiscall *Finalize)(IC *this);
  bool (__thiscall *Initialize)(IC *this);
  bool (__thiscall *Run)(IC *this);
  bool (__thiscall *Start)(IC *this);
  bool (__thiscall *Stop)(IC *this);
  void (__thiscall *Pause)(IC *this);
  void (__thiscall *Resume)(IC *this);
};

/* 1596 */
struct __cppobj IC
{
  IC_vtbl *__vftable /*VFT*/;
  unsigned int m_FeatureIdx;
  ICTransport *m_Transport;
  ICEndpoint *m_Endpoint;
  bool m_Initialized;
  bool m_Terminate;
  void *m_PauseResumeEvent;
  unsigned __int16 m_SupportedVersionCount;
  _IC_VERSION *m_SupportedVersions;
};

/* 889 */
struct _RTL_CRITICAL_SECTION
{
  _RTL_CRITICAL_SECTION_DEBUG *DebugInfo;
  int LockCount;
  int RecursionCount;
  void *OwningThread;
  void *LockSemaphore;
  unsigned int SpinCount;
};

/* 1598 */
struct __cppobj ICTransport
{
  ICTransport_vtbl *__vftable /*VFT*/;
  void *m_StateInfoBuffer;
  unsigned int m_StateInfoBufferSize;
  void *m_DataHandle;
  ICEventMonitor *m_EventMonitor;
  volatile unsigned int m_IoCountOutstanding;
  void *m_IoCountOutstandingEvent;
  unsigned __int8 m_Flags;
  _RTL_CRITICAL_SECTION m_CriticalSection;
};

/* 1155 */
struct __cppobj std::less<unsigned char>
{
};

/* 1156 */
struct __cppobj std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> >
{
};

/* 1157 */
struct __cppobj std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> > > : std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> >
{
};

/* 1161 */
struct __cppobj std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char const ,ICMsgTransaction *> > > : std::_Container_base0
{
  std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> *_Myhead;
  unsigned int _Mysize;
};

/* 1162 */
struct __cppobj std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char const ,ICMsgTransaction *> > >,1> : std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> > >
{
  std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char const ,ICMsgTransaction *> > > _Myval2;
};

/* 1163 */
struct __cppobj std::_Compressed_pair<std::less<unsigned char>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char const ,ICMsgTransaction *> > >,1>,1> : std::less<unsigned char>
{
  std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char const ,ICMsgTransaction *> > >,1> _Myval2;
};

/* 1164 */
struct __cppobj std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char,ICMsgTransaction *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ICMsgTransaction *> >,0> >
{
  std::_Compressed_pair<std::less<unsigned char>,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned char const ,ICMsgTransaction *> > >,1>,1> _Mypair;
};

/* 1165 */
struct __cppobj std::_Tree<std::_Tmap_traits<unsigned char,ICMsgTransaction *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ICMsgTransaction *> >,0> > : std::_Tree_comp_alloc<std::_Tmap_traits<unsigned char,ICMsgTransaction *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ICMsgTransaction *> >,0> >
{
};

/* 1166 */
struct __cppobj std::map<unsigned char,ICMsgTransaction *> : std::_Tree<std::_Tmap_traits<unsigned char,ICMsgTransaction *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ICMsgTransaction *> >,0> >
{
};

/* 1167 */
struct __cppobj ICMsgTransactionTbl
{
  unsigned __int8 m_NextTransactionId;
  _RTL_CRITICAL_SECTION m_TransTableLock;
  std::map<unsigned char,ICMsgTransaction *> m_TransTable;
};

/* 230 */
enum ICEndpointState : __int32
{
  ICEndpointStateDisconnected = 0x0,
  ICEndpointStateConnecting = 0x1,
  ICEndpointStateConnected = 0x2,
  ICEndpointStateDisconnecting = 0x3,
  ICEndpointStateOffered = 0x4,
  ICEndpointStateCount = 0x5,
};

/* 1602 */
struct _IC_VERSION
{
  unsigned __int16 Major;
  unsigned __int16 Minor;
};

/* 1601 */
struct __cppobj ICEndpoint
{
  ICMsgTransactionTbl m_MsgTransactionTbl;
  bool (__stdcall *m_MsgHandlerTable[8])(ICEndpoint *, const void *);
  ICTransport *m_Transport;
  void *m_DispatchThreadHandle;
  ICEndpointState m_State;
  void *m_IsDisconnected;
  _RTL_CRITICAL_SECTION m_CriticalSection;
  _RTL_CRITICAL_SECTION m_DisconnectCriticalSection;
  unsigned __int16 m_SupportedMessageVersionCount;
  _IC_VERSION *m_SupportedMessageVersions;
  _IC_VERSION m_NegotiatedFrameworkVersion;
  _IC_VERSION m_NegotiatedMessageVersion;
};

/* 8295 */
typedef int HRESULT;

/* 1599 */
struct /*VFT*/ ICTransport_vtbl
{
  void (__thiscall *~ICTransport)(ICTransport *this);
  void (__thiscall *Close)(ICTransport *this, bool);
  bool (__thiscall *Initialize)(ICTransport *this);
  void (__thiscall *Finalize)(ICTransport *this);
  void (__thiscall *Pause)(ICTransport *this);
  void (__thiscall *Resume)(ICTransport *this);
  bool (__thiscall *Restore)(ICTransport *this);
  bool (__thiscall *OfferChannel)(ICTransport *this);
  bool (__thiscall *Open)(ICTransport *this, unsigned int);
  bool (__thiscall *Read)(ICTransport *this, void *, unsigned int, unsigned int *, unsigned int, unsigned int);
  HRESULT (__thiscall *StateInfoAlloc)(ICTransport *this, unsigned int);
  void (__thiscall *StateInfoFree)(ICTransport *this);
  HRESULT (__thiscall *StateInfoGet)(ICTransport *this, void **, unsigned int *);
  HRESULT (__thiscall *StateInfoSave)(ICTransport *this);
  HRESULT (__thiscall *StateInfoRestore)(ICTransport *this);
  bool (__thiscall *Write)(ICTransport *this, const void *, unsigned int, unsigned int *, unsigned int, unsigned int);
};

/* 985 */
struct _FILETIME
{
  unsigned int dwLowDateTime;
  unsigned int dwHighDateTime;
};

/* 1600 */
struct __cppobj ICEventMonitor
{
  void *m_RunnableEventHandle;
  void *m_TerminateEventHandle;
  _FILETIME m_TimeOfLastPause;
};

/* 873 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/* 888 */
struct _RTL_CRITICAL_SECTION_DEBUG
{
  unsigned __int16 Type;
  unsigned __int16 CreatorBackTraceIndex;
  _RTL_CRITICAL_SECTION *CriticalSection;
  _LIST_ENTRY ProcessLocksList;
  unsigned int EntryCount;
  unsigned int ContentionCount;
  unsigned int Flags;
  unsigned __int16 CreatorBackTraceIndexHigh;
  unsigned __int16 SpareWORD;
};

/* 1160 */
struct __cppobj std::pair<unsigned char const ,ICMsgTransaction *>
{
  const unsigned __int8 first;
  ICMsgTransaction *second;
};

/* 1159 */
struct __cppobj std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *>
{
  std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> *_Left;
  std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> *_Parent;
  std::_Tree_node<std::pair<unsigned char const ,ICMsgTransaction *>,void *> *_Right;
  char _Color;
  char _Isnil;
  std::pair<unsigned char const ,ICMsgTransaction *> _Myval;
};

/* 1146 */
struct __cppobj ICMsgTransaction
{
  unsigned __int8 m_TransactionId;
  void *m_MsgBodyResp;
  unsigned int m_MsgBodyRespSize;
  unsigned int m_Status;
  void *m_EventHandle;
};

/* 7275 */
struct _IC_MSG_NEGOTIATE
{
  unsigned __int16 ICFrameworkVersionCount;
  unsigned __int16 ICMessageVersionCount;
  unsigned int Reserved;
  _IC_VERSION ICVersionData[1];
};

/* 7280 */
struct _IC_MSG_HDR
{
  _IC_VERSION ICVerFramework;
  unsigned __int16 ICMsgType;
  _IC_VERSION ICVerMessage;
  unsigned __int16 ICMsgSize;
  unsigned int Status;
  unsigned __int8 ICTransactionId;
  unsigned __int8 ICFlags;
  unsigned __int8 RESERVED[2];
};

/* 7331 */
struct _IC_RDV_MSG_DATA
{
  unsigned int Flags;
  unsigned __int8 Message[2048];
};

/* 7372 */
struct _IC_VSS_MSG_CHECK_HOT_BACKUP
{
  unsigned int Flags;
};

/* 7373 */
struct _IC_VSS_MSG_HDR
{
  unsigned __int8 Operation;
  unsigned __int8 Reserved[4];
};

/* 7374 */
struct __declspec(align(2)) _IC_VSS_LUN_INFO
{
  unsigned __int8 BusType;
  _GUID Controller;
  unsigned __int8 Port;
  unsigned __int8 Target;
  unsigned __int8 Lun;
};

/* 7375 */
struct _IC_VSS_MSG2
{
  _IC_VSS_MSG_HDR Header;
  unsigned int BackupType;
  unsigned int Flags;
  unsigned int LunCount;
  _IC_VSS_LUN_INFO Luns[260];
};

/* 7376 */
struct _IC_VSS_MSG3
{
  _IC_VSS_MSG_HDR Header;
  _GUID ClusterId;
  unsigned int ClusterSize;
  unsigned int LunCount;
  _IC_VSS_LUN_INFO SharedLuns[260];
  unsigned int SharedLunStatus[260];
};

/* 7377 */
struct _IC_VSS_MSG_CREATE_V2
{
  _GUID SnapshotSetId;
  unsigned int BackupType;
};

/* 7378 */
struct _IC_VSS_MSG_DIRECT_MAPPED_DEVICES_INFO
{
  unsigned int Flags;
};

/* 7379 */
struct _IC_VSS_MSG_DELETE
{
  _GUID SnapshotSetId;
};

/* 7380 */
struct IC_VSS_MSG_BACKUP_COMPLETE
{
  unsigned int Flags;
};

/* 7381 */
struct IC_VSS_MSG_THAW_APPLICATIONS
{
  unsigned int Flags;
};

/* 7382 */
union _IC_VSS_MSG::<unnamed_type_Body>
{
  _IC_VSS_MSG_DELETE Delete;
  _IC_VSS_MSG_CHECK_HOT_BACKUP CheckHotBackup;
  _IC_VSS_MSG_DIRECT_MAPPED_DEVICES_INFO DirectMapInfo;
  IC_VSS_MSG_BACKUP_COMPLETE BackupComplete;
  _IC_VSS_MSG_CREATE_V2 CreateV2;
  IC_VSS_MSG_THAW_APPLICATIONS ThawApplications;
};

/* 7383 */
struct _IC_VSS_MSG
{
  _IC_VSS_MSG_HDR Header;
  _IC_VSS_MSG::<unnamed_type_Body> Body;
  unsigned __int8 Reserved[4];
};

/* 7384 */
struct _IC_VSS_MSG3_EX
{
  _IC_VSS_MSG_HDR Header;
  _GUID ClusterId;
  unsigned int ClusterSize;
  unsigned int LunCount;
  _IC_VSS_LUN_INFO SharedLuns[260];
  unsigned int SharedLunStatus[260];
  unsigned __int64 LastMoveTime;
};

/* 7385 */
struct _IC_VSS_MSG2_EX
{
  _IC_VSS_MSG_HDR Header;
  unsigned int BackupType;
  unsigned int Flags;
  unsigned int LunCount;
  _IC_VSS_LUN_INFO Luns[260];
  _IC_VSS_LUN_INFO ShadowLuns[260];
};

/* 1185 */
struct __cppobj Vml::VmGuid : _GUID
{
};

/* 7447 */
struct __cppobj _IC_VSS_FIND_DISKS
{
  IC_VSS_LUN_INFO_BUS_TYPE BusType;
  Vml::VmGuid ControllerId;
  unsigned __int8 BusNumber;
  unsigned __int8 Target;
  unsigned __int8 Lun;
  int Found;
  unsigned int DiskNumber;
};

/* 8118 */
typedef unsigned __int16 IC_VERSION_FIELD;

/* 10072 */
typedef unsigned __int16 IC_MSG_TYPE;

/* 10763 */
typedef unsigned __int8 IC_MSG_TRANS_ID;

/* 10769 */
typedef unsigned __int8 IC_MSG_HDR_FLAG;

/* 10979 */
typedef unsigned __int8 IC_TRANSPORT_FLAG;

/* 11347 */
typedef bool __stdcall IC_ENDPOINT_MSG_HANDLER(ICEndpoint *, const void *);

