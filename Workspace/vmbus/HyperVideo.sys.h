/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'HyperVideo.sys'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct _DRIVER_OBJECT;
struct _DEVICE_OBJECT;
struct _MDL;
struct _IRP;
struct _SECURITY_QUALITY_OF_SERVICE;
struct _ACCESS_STATE;
struct _IO_SECURITY_CONTEXT;
struct _NAMED_PIPE_CREATE_PARAMETERS;
struct _MAILSLOT_CREATE_PARAMETERS;
struct _VPB;
struct _SECTION_OBJECT_POINTERS;
struct _FILE_OBJECT;
struct _IO_COMPLETION_CONTEXT;
struct _INTERFACE;
struct _DEVICE_CAPABILITIES;
struct _IO_RESOURCE_REQUIREMENTS_LIST;
struct _POWER_SEQUENCE;
struct _CM_RESOURCE_LIST;
struct _IO_STACK_LOCATION;
struct _KDPC;
struct _DEVOBJ_EXTENSION;
struct _DRIVER_EXTENSION;
struct _FILE_BASIC_INFORMATION;
struct _FILE_STANDARD_INFORMATION;
struct _FILE_NETWORK_OPEN_INFORMATION;
struct _OWNER_ENTRY;
struct _ERESOURCE;
struct _COMPRESSED_DATA_INFO;
struct _FAST_IO_DISPATCH;
struct _D3DKMDT_MONITOR_DESCRIPTOR;
struct D3DKMDT_HMONITORDESCRIPTORSET__;
struct D3DKMDT_HMONITORFREQUENCYRANGESET__;
struct _D3DKMDT_MONITOR_FREQUENCY_RANGE;
struct _DXGK_MONITORDESCRIPTORSET_INTERFACE;
struct D3DKMDT_HMONITORSOURCEMODESET__;
struct _D3DKMDT_MONITOR_SOURCE_MODE;
struct _DXGK_MULTIPLANE_OVERLAY_VSYNC_INFO2;
struct D3DKMDT_HVIDPNTOPOLOGY__;
struct _D3DKMDT_VIDPN_TARGET_MODE;
struct _D3DDDI_GAMMA_RAMP_RGB256x3x16;
struct _D3DDDI_GAMMA_RAMP_DXGI_1;
struct _D3DKMDT_VIDPN_PRESENT_PATH;
struct _DXGK_CHILD_STATUS;
struct _ACPI_EVAL_INPUT_BUFFER_COMPLEX;
struct _ACPI_EVAL_OUTPUT_BUFFER;
struct _DXGK_DEVICE_INFO;
struct _PCI_DEVICE_PRESENCE_PARAMETERS;
struct _DXGKARGCB_GETHANDLEDATA;
struct _DXGKARGCB_ENUMHANDLECHILDREN;
struct _DXGK_MULTIPLANE_OVERLAY_VSYNC_INFO;
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA;
struct D3DKMDT_HVIDPN__;
struct _DXGK_VIDPNTOPOLOGY_INTERFACE;
struct D3DKMDT_HVIDPNSOURCEMODESET__;
struct _D3DKMDT_VIDPN_SOURCE_MODE;
struct _DXGK_VIDPNSOURCEMODESET_INTERFACE;
struct _D3DDDI_MULTISAMPLINGMETHOD;
struct D3DKMDT_HVIDPNTARGETMODESET__;
struct _DXGK_VIDPNTARGETMODESET_INTERFACE;
struct _DXGK_VIDPN_INTERFACE;
struct _DXGK_MONITORSOURCEMODESET_INTERFACE;
struct _DXGK_MONITORFREQUENCYRANGESET_INTERFACE;
struct _DXGK_MONITOR_INTERFACE;
struct _DXGKARGCB_GETCAPTUREADDRESS;
struct _DXGKARGCB_CREATECONTEXTALLOCATION;
struct _DXGK_DISPLAY_INFORMATION;
struct _DXGKARGCB_MAPCONTEXTALLOCATION;
struct _DXGKARGCB_UPDATECONTEXTALLOCATION;
struct _DXGKARGCB_RESERVEGPUVIRTUALADDRESSRANGE;
struct _VMBUS_CRASH_INTERFACE;

/* 634 */
struct REPORT_CURSOR_SHAPE_CHANGE
{
  SYNTHVID_POINTER_SHAPE_MESSAGE ShapeInfo;
  unsigned __int8 PixelData[36863];
};

/* 639 */
struct SYNTHVID_HANDLE__
{
  int unused;
};

/* 207 */
struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 229 */
struct _LUID
{
  unsigned int LowPart;
  int HighPart;
};

/* 532 */
struct _DXGK_START_INFO
{
  unsigned int RequiredDmaQueueEntry;
  _GUID AdapterGuid;
  _LUID AdapterLuid;
};

/* 180 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/* 181 */
union _LARGE_INTEGER
{
  $FAF74743FBE1C8632047CFB668F7028A __s0;
  $FAF74743FBE1C8632047CFB668F7028A u;
  __int64 QuadPart;
};

/* 25 */
enum _MEMORY_CACHING_TYPE : __int32
{
  MmNonCached = 0x0,
  MmCached = 0x1,
  MmWriteCombined = 0x2,
  MmHardwareCoherentCached = 0x3,
  MmNonCachedUnordered = 0x4,
  MmUSWCCached = 0x5,
  MmMaximumCacheType = 0x6,
  MmNotMapped = 0xFFFFFFFF,
};

/* 70 */
enum DXGK_SERVICES : __int32
{
  DxgkServicesAgp = 0x0,
  DxgkServicesDebugReport = 0x1,
  DxgkServicesTimedOperation = 0x2,
  DxgkServicesSPB = 0x3,
  DxgkServicesBDD = 0x4,
  DxgkServicesFirmwareTable = 0x5,
  DxgkServicesIDD = 0x6,
};

/* 52 */
enum _DXGK_VIDPN_INTERFACE_VERSION : __int32
{
  DXGK_VIDPN_INTERFACE_VERSION_UNINITIALIZED = 0x0,
  DXGK_VIDPN_INTERFACE_VERSION_V1 = 0x1,
};

/* 71 */
enum _DXGK_MONITOR_INTERFACE_VERSION : __int32
{
  DXGK_MONITOR_INTERFACE_VERSION_UNINITIALIZED = 0x0,
  DXGK_MONITOR_INTERFACE_VERSION_V1 = 0x1,
  DXGK_MONITOR_INTERFACE_VERSION_V2 = 0x2,
};

/* 91 */
enum _DXGK_HANDLE_TYPE : __int32
{
  DXGK_HANDLE_ALLOCATION = 0x1,
  DXGK_HANDLE_RESOURCE = 0x2,
};

/* 529 */
struct _DXGKARGCB_RELEASEHANDLEDATA
{
  void *ReleaseHandle;
  _DXGK_HANDLE_TYPE Type;
};

/* 530 */
struct _DXGKRNL_INTERFACE
{
  unsigned int Size;
  unsigned int Version;
  void *DeviceHandle;
  int (__stdcall *DxgkCbEvalAcpiMethod)(void *, unsigned int, _ACPI_EVAL_INPUT_BUFFER_COMPLEX *, unsigned int, _ACPI_EVAL_OUTPUT_BUFFER *, unsigned int);
  int (__stdcall *DxgkCbGetDeviceInformation)(void *, _DXGK_DEVICE_INFO *);
  int (__stdcall *DxgkCbIndicateChildStatus)(void *, _DXGK_CHILD_STATUS *);
  int (__stdcall *DxgkCbMapMemory)(void *, _LARGE_INTEGER, unsigned int, unsigned __int8, unsigned __int8, _MEMORY_CACHING_TYPE, void **);
  unsigned __int8 (__stdcall *DxgkCbQueueDpc)(void *);
  int (__stdcall *DxgkCbQueryServices)(void *, DXGK_SERVICES, _INTERFACE *);
  int (__stdcall *DxgkCbReadDeviceSpace)(void *, unsigned int, void *, unsigned int, unsigned int, unsigned int *);
  int (__stdcall *DxgkCbSynchronizeExecution)(void *, unsigned __int8 (__stdcall *)(void *), void *, unsigned int, unsigned __int8 *);
  int (__stdcall *DxgkCbUnmapMemory)(void *, void *);
  int (__stdcall *DxgkCbWriteDeviceSpace)(void *, unsigned int, void *, unsigned int, unsigned int, unsigned int *);
  int (__stdcall *DxgkCbIsDevicePresent)(void *, _PCI_DEVICE_PRESENCE_PARAMETERS *, unsigned __int8 *);
  void *(__stdcall *DxgkCbGetHandleData)(const _DXGKARGCB_GETHANDLEDATA *);
  unsigned int (__stdcall *DxgkCbGetHandleParent)(unsigned int);
  unsigned int (__stdcall *DxgkCbEnumHandleChildren)(const _DXGKARGCB_ENUMHANDLECHILDREN *);
  void (__stdcall *DxgkCbNotifyInterrupt)(void *const, _DXGKARGCB_NOTIFY_INTERRUPT_DATA *);
  void (__stdcall *DxgkCbNotifyDpc)(void *const);
  int (__stdcall *DxgkCbQueryVidPnInterface)(D3DKMDT_HVIDPN__ *const, const _DXGK_VIDPN_INTERFACE_VERSION, const _DXGK_VIDPN_INTERFACE **);
  int (__stdcall *DxgkCbQueryMonitorInterface)(void *const, const _DXGK_MONITOR_INTERFACE_VERSION, const _DXGK_MONITOR_INTERFACE **);
  int (__stdcall *DxgkCbGetCaptureAddress)(_DXGKARGCB_GETCAPTUREADDRESS *);
  void (__stdcall *DxgkCbLogEtwEvent)(const _GUID *const, unsigned __int8, unsigned __int16, void *);
  int (__stdcall *DxgkCbExcludeAdapterAccess)(void *, unsigned int, void (__stdcall *)(void *const, void *, int), void *);
  int (__stdcall *DxgkCbCreateContextAllocation)(_DXGKARGCB_CREATECONTEXTALLOCATION *);
  int (__stdcall *DxgkCbDestroyContextAllocation)(void *const, void *const);
  void (__stdcall *DxgkCbSetPowerComponentActive)(void *const, unsigned int);
  void (__stdcall *DxgkCbSetPowerComponentIdle)(void *const, unsigned int);
  int (__stdcall *DxgkCbAcquirePostDisplayOwnership)(void *, _DXGK_DISPLAY_INFORMATION *);
  int (__stdcall *DxgkCbPowerRuntimeControlRequest)(void *const, const _GUID *, void *, unsigned int, void *, unsigned int, unsigned int *);
  void (__stdcall *DxgkCbSetPowerComponentLatency)(void *const, unsigned int, unsigned __int64);
  void (__stdcall *DxgkCbSetPowerComponentResidency)(void *const, unsigned int, unsigned __int64);
  void (__stdcall *DxgkCbCompleteFStateTransition)(void *const, unsigned int);
  void (__stdcall *DxgkCbCompletePStateTransition)(void *const, unsigned int, unsigned int);
  unsigned __int64 (__stdcall *DxgkCbMapContextAllocation)(void *const, const _DXGKARGCB_MAPCONTEXTALLOCATION *);
  int (__stdcall *DxgkCbUpdateContextAllocation)(void *const, const _DXGKARGCB_UPDATECONTEXTALLOCATION *);
  int (__stdcall *DxgkCbReserveGpuVirtualAddressRange)(void *const, _DXGKARGCB_RESERVEGPUVIRTUALADDRESSRANGE *);
  void *(__stdcall *DxgkCbAcquireHandleData)(const _DXGKARGCB_GETHANDLEDATA *, void **);
  void (__stdcall *DxgkCbReleaseHandleData)(const _DXGKARGCB_RELEASEHANDLEDATA);
  void (__stdcall *DxgkCbHardwareContentProtectionTeardown)(void *const, unsigned int);
  void (__stdcall *DxgkCbMultiPlaneOverlayDisabled)(void *const, unsigned int);
  void (__stdcall *DxgkCbMitigatedRangeUpdate)(void *const, unsigned int);
};

/* 33 */
enum _D3DDDIFORMAT : __int32
{
  D3DDDIFMT_UNKNOWN = 0x0,
  D3DDDIFMT_R8G8B8 = 0x14,
  D3DDDIFMT_A8R8G8B8 = 0x15,
  D3DDDIFMT_X8R8G8B8 = 0x16,
  D3DDDIFMT_R5G6B5 = 0x17,
  D3DDDIFMT_X1R5G5B5 = 0x18,
  D3DDDIFMT_A1R5G5B5 = 0x19,
  D3DDDIFMT_A4R4G4B4 = 0x1A,
  D3DDDIFMT_R3G3B2 = 0x1B,
  D3DDDIFMT_A8 = 0x1C,
  D3DDDIFMT_A8R3G3B2 = 0x1D,
  D3DDDIFMT_X4R4G4B4 = 0x1E,
  D3DDDIFMT_A2B10G10R10 = 0x1F,
  D3DDDIFMT_A8B8G8R8 = 0x20,
  D3DDDIFMT_X8B8G8R8 = 0x21,
  D3DDDIFMT_G16R16 = 0x22,
  D3DDDIFMT_A2R10G10B10 = 0x23,
  D3DDDIFMT_A16B16G16R16 = 0x24,
  D3DDDIFMT_A8P8 = 0x28,
  D3DDDIFMT_P8 = 0x29,
  D3DDDIFMT_L8 = 0x32,
  D3DDDIFMT_A8L8 = 0x33,
  D3DDDIFMT_A4L4 = 0x34,
  D3DDDIFMT_V8U8 = 0x3C,
  D3DDDIFMT_L6V5U5 = 0x3D,
  D3DDDIFMT_X8L8V8U8 = 0x3E,
  D3DDDIFMT_Q8W8V8U8 = 0x3F,
  D3DDDIFMT_V16U16 = 0x40,
  D3DDDIFMT_W11V11U10 = 0x41,
  D3DDDIFMT_A2W10V10U10 = 0x43,
  D3DDDIFMT_UYVY = 0x59565955,
  D3DDDIFMT_R8G8_B8G8 = 0x47424752,
  D3DDDIFMT_YUY2 = 0x32595559,
  D3DDDIFMT_G8R8_G8B8 = 0x42475247,
  D3DDDIFMT_DXT1 = 0x31545844,
  D3DDDIFMT_DXT2 = 0x32545844,
  D3DDDIFMT_DXT3 = 0x33545844,
  D3DDDIFMT_DXT4 = 0x34545844,
  D3DDDIFMT_DXT5 = 0x35545844,
  D3DDDIFMT_D16_LOCKABLE = 0x46,
  D3DDDIFMT_D32 = 0x47,
  D3DDDIFMT_D15S1 = 0x49,
  D3DDDIFMT_D24S8 = 0x4B,
  D3DDDIFMT_D24X8 = 0x4D,
  D3DDDIFMT_D24X4S4 = 0x4F,
  D3DDDIFMT_D16 = 0x50,
  D3DDDIFMT_D32F_LOCKABLE = 0x52,
  D3DDDIFMT_D24FS8 = 0x53,
  D3DDDIFMT_D32_LOCKABLE = 0x54,
  D3DDDIFMT_S8_LOCKABLE = 0x55,
  D3DDDIFMT_S1D15 = 0x48,
  D3DDDIFMT_S8D24 = 0x4A,
  D3DDDIFMT_X8D24 = 0x4C,
  D3DDDIFMT_X4S4D24 = 0x4E,
  D3DDDIFMT_L16 = 0x51,
  D3DDDIFMT_G8R8 = 0x5B,
  D3DDDIFMT_R8 = 0x5C,
  D3DDDIFMT_VERTEXDATA = 0x64,
  D3DDDIFMT_INDEX16 = 0x65,
  D3DDDIFMT_INDEX32 = 0x66,
  D3DDDIFMT_Q16W16V16U16 = 0x6E,
  D3DDDIFMT_MULTI2_ARGB8 = 0x3154454D,
  D3DDDIFMT_R16F = 0x6F,
  D3DDDIFMT_G16R16F = 0x70,
  D3DDDIFMT_A16B16G16R16F = 0x71,
  D3DDDIFMT_R32F = 0x72,
  D3DDDIFMT_G32R32F = 0x73,
  D3DDDIFMT_A32B32G32R32F = 0x74,
  D3DDDIFMT_CxV8U8 = 0x75,
  D3DDDIFMT_A1 = 0x76,
  D3DDDIFMT_A2B10G10R10_XR_BIAS = 0x77,
  D3DDDIFMT_DXVACOMPBUFFER_BASE = 0x96,
  D3DDDIFMT_PICTUREPARAMSDATA = 0x96,
  D3DDDIFMT_MACROBLOCKDATA = 0x97,
  D3DDDIFMT_RESIDUALDIFFERENCEDATA = 0x98,
  D3DDDIFMT_DEBLOCKINGDATA = 0x99,
  D3DDDIFMT_INVERSEQUANTIZATIONDATA = 0x9A,
  D3DDDIFMT_SLICECONTROLDATA = 0x9B,
  D3DDDIFMT_BITSTREAMDATA = 0x9C,
  D3DDDIFMT_MOTIONVECTORBUFFER = 0x9D,
  D3DDDIFMT_FILMGRAINBUFFER = 0x9E,
  D3DDDIFMT_DXVA_RESERVED9 = 0x9F,
  D3DDDIFMT_DXVA_RESERVED10 = 0xA0,
  D3DDDIFMT_DXVA_RESERVED11 = 0xA1,
  D3DDDIFMT_DXVA_RESERVED12 = 0xA2,
  D3DDDIFMT_DXVA_RESERVED13 = 0xA3,
  D3DDDIFMT_DXVA_RESERVED14 = 0xA4,
  D3DDDIFMT_DXVA_RESERVED15 = 0xA5,
  D3DDDIFMT_DXVA_RESERVED16 = 0xA6,
  D3DDDIFMT_DXVA_RESERVED17 = 0xA7,
  D3DDDIFMT_DXVA_RESERVED18 = 0xA8,
  D3DDDIFMT_DXVA_RESERVED19 = 0xA9,
  D3DDDIFMT_DXVA_RESERVED20 = 0xAA,
  D3DDDIFMT_DXVA_RESERVED21 = 0xAB,
  D3DDDIFMT_DXVA_RESERVED22 = 0xAC,
  D3DDDIFMT_DXVA_RESERVED23 = 0xAD,
  D3DDDIFMT_DXVA_RESERVED24 = 0xAE,
  D3DDDIFMT_DXVA_RESERVED25 = 0xAF,
  D3DDDIFMT_DXVA_RESERVED26 = 0xB0,
  D3DDDIFMT_DXVA_RESERVED27 = 0xB1,
  D3DDDIFMT_DXVA_RESERVED28 = 0xB2,
  D3DDDIFMT_DXVA_RESERVED29 = 0xB3,
  D3DDDIFMT_DXVA_RESERVED30 = 0xB4,
  D3DDDIFMT_DXVA_RESERVED31 = 0xB5,
  D3DDDIFMT_DXVACOMPBUFFER_MAX = 0xB5,
  D3DDDIFMT_BINARYBUFFER = 0xC7,
  D3DDDIFMT_FORCE_UINT = 0x7FFFFFFF,
};

/* 523 */
struct _DXGK_DISPLAY_INFORMATION
{
  unsigned int Width;
  unsigned int Height;
  unsigned int Pitch;
  _D3DDDIFORMAT ColorFormat;
  _LARGE_INTEGER PhysicAddress;
  unsigned int TargetId;
  unsigned int AcpiId;
};

/* 644 */
struct _HVD_DEVICE_CONTEXT
{
  unsigned int Signature;
  _DEVICE_OBJECT *VideoPDO;
  _DXGK_START_INFO DxgkStartInfo;
  _DXGKRNL_INTERFACE DxgkInterface;
  _DXGK_DISPLAY_INFORMATION DisplayInfo;
  SYNTHVID_HANDLE__ *SynthVid;
  _LARGE_INTEGER VramAddress;
  unsigned int VramLength;
  void *HyperVideoAddress;
  unsigned int HyperVideoLength;
  VIDEO_OUTPUT_SITUATION Situation;
  unsigned __int8 BlueScreenModeIsOk;
  _VMBUS_CRASH_INTERFACE *CrashInterface;
  unsigned int VmGeneration;
};

/* 160 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/* 272 */
struct __declspec(align(4)) _KDEVICE_QUEUE_ENTRY
{
  _LIST_ENTRY DeviceListEntry;
  unsigned int SortKey;
  unsigned __int8 Inserted;
};

/* 373 */
struct $F8378B2927DF5D260CAA9C0CF2826DB2
{
  _LIST_ENTRY DmaWaitEntry;
  unsigned int NumberOfChannels;
  unsigned __int32 SyncCallback : 1;
  unsigned __int32 DmaContext : 1;
  unsigned __int32 ZeroMapRegisters : 1;
  unsigned __int32 Reserved : 29;
};

/* 374 */
union $A90B7E69FF3E3503017B901482451BE6
{
  _KDEVICE_QUEUE_ENTRY WaitQueueEntry;
  $F8378B2927DF5D260CAA9C0CF2826DB2 __s1;
};

/* 63 */
enum _IO_ALLOCATION_ACTION : __int32
{
  KeepObject = 0x1,
  DeallocateObject = 0x2,
  DeallocateObjectKeepRegisters = 0x3,
};

/* 375 */
struct _WAIT_CONTEXT_BLOCK
{
  $A90B7E69FF3E3503017B901482451BE6 ___u0;
  _IO_ALLOCATION_ACTION (__stdcall *DeviceRoutine)(_DEVICE_OBJECT *, _IRP *, void *, void *);
  void *DeviceContext;
  unsigned int NumberOfMapRegisters;
  void *DeviceObject;
  void *CurrentIrp;
  _KDPC *BufferChainingDpc;
};

/* 376 */
union $7436B97A7C866D79822A6C184761CCF3
{
  _LIST_ENTRY ListEntry;
  _WAIT_CONTEXT_BLOCK Wcb;
};

/* 377 */
struct __declspec(align(4)) _KDEVICE_QUEUE
{
  __int16 Type;
  __int16 Size;
  _LIST_ENTRY DeviceListHead;
  unsigned int Lock;
  unsigned __int8 Busy;
};

/* 371 */
struct $82623AFB470F8517B6D8F9E43441C7E1
{
  unsigned __int8 Type;
  unsigned __int8 Importance;
  volatile unsigned __int16 Number;
};

/* 372 */
union $9B2A2715C9536C3851C7DC9EC900B360
{
  unsigned int TargetInfoAsUlong;
  $82623AFB470F8517B6D8F9E43441C7E1 __s1;
};

/* 167 */
struct _SINGLE_LIST_ENTRY
{
  _SINGLE_LIST_ENTRY *Next;
};

/* 370 */
struct _KDPC
{
  $9B2A2715C9536C3851C7DC9EC900B360 ___u0;
  _SINGLE_LIST_ENTRY DpcListEntry;
  unsigned int ProcessorHistory;
  void (__stdcall *DeferredRoutine)(_KDPC *, void *, void *, void *);
  void *DeferredContext;
  void *SystemArgument1;
  void *SystemArgument2;
  void *DpcData;
};

/* 257 */
struct $08481D05807C14C022C64127DBCB0DC5
{
  unsigned __int8 Type;
  unsigned __int8 Signalling;
  unsigned __int8 Size;
  unsigned __int8 Reserved1;
};

/* 258 */
struct $BDD1DEEA9085FB2031C94E38C028AF9F
{
  unsigned __int8 TimerType;
  unsigned __int8 TimerControlFlags;
  unsigned __int8 Hand;
  unsigned __int8 TimerMiscFlags;
};

/* 259 */
struct $1A64267CB6701B751C40AA7938D55A2C
{
  unsigned __int8 Timer2Type;
  unsigned __int8 Absolute : 1;
  unsigned __int8 Wake : 1;
  unsigned __int8 EncodedTolerableDelay : 6;
  unsigned __int8 Timer2Reserved1;
  unsigned __int8 Index : 1;
  unsigned __int8 Processor : 5;
  unsigned __int8 Inserted : 1;
  unsigned __int8 Expired : 1;
};

/* 260 */
struct $DC5C26BDF4D684F12F3A5D4531D3B949
{
  unsigned __int8 QueueType;
  unsigned __int8 Timer2Flags;
  unsigned __int8 QueueSize;
  unsigned __int8 Timer2Reserved2;
};

/* 261 */
struct $82359CCE575330AAB08AF0894BC28AE0
{
  unsigned __int8 ThreadType;
  unsigned __int8 Timer2Inserted : 1;
  unsigned __int8 Timer2Expiring : 1;
  unsigned __int8 Timer2CancelPending : 1;
  unsigned __int8 Timer2SetPending : 1;
  unsigned __int8 Timer2Running : 1;
  unsigned __int8 Timer2Disabled : 1;
  unsigned __int8 Timer2ReservedFlags : 2;
  unsigned __int8 ThreadControlFlags;
  unsigned __int8 QueueReserved;
};

/* 262 */
struct $9300EC2846D44244344338BB8331DF4E
{
  unsigned __int8 MutantType;
  unsigned __int8 QueueControlFlags;
  unsigned __int8 CycleProfiling : 1;
  unsigned __int8 CounterProfiling : 1;
  unsigned __int8 GroupScheduling : 1;
  unsigned __int8 AffinitySet : 1;
  unsigned __int8 Tagged : 1;
  unsigned __int8 EnergyProfiling : 1;
  unsigned __int8 Instrumented : 1;
  unsigned __int8 ThreadReservedControlFlags : 1;
  unsigned __int8 DebugActive;
};

/* 263 */
struct $311232CAD4ECFA502922D62D223D90C0
{
  _BYTE gap0;
  unsigned __int8 Abandoned : 1;
  unsigned __int8 DisableIncrement : 1;
  unsigned __int8 QueueReservedControlFlags : 6;
  unsigned __int8 DpcActive;
  unsigned __int8 MutantReserved;
};

/* 264 */
struct $6287A180EBF0351F83293B36E60E22FF
{
  _BYTE gap0;
  unsigned __int8 ThreadReserved;
};

/* 265 */
struct $4B94A638C9572C40F7312179A2B431F6
{
  _BYTE gap0;
  unsigned __int8 MutantSize;
};

/* 266 */
union $5A883486199C735E6C850A4AC85CE04A
{
  volatile int Lock;
  int LockNV;
  $08481D05807C14C022C64127DBCB0DC5 __s2;
  $BDD1DEEA9085FB2031C94E38C028AF9F __s3;
  $1A64267CB6701B751C40AA7938D55A2C __s4;
  $DC5C26BDF4D684F12F3A5D4531D3B949 __s5;
  $82359CCE575330AAB08AF0894BC28AE0 __s6;
  $9300EC2846D44244344338BB8331DF4E __s7;
  $311232CAD4ECFA502922D62D223D90C0 __s8;
  $6287A180EBF0351F83293B36E60E22FF __s9;
  $4B94A638C9572C40F7312179A2B431F6 __s10;
};

/* 267 */
struct _DISPATCHER_HEADER
{
  $5A883486199C735E6C850A4AC85CE04A ___u0;
  int SignalState;
  _LIST_ENTRY WaitListHead;
};

/* 268 */
struct _KEVENT
{
  _DISPATCHER_HEADER Header;
};

/* 251 */
struct _DEVICE_OBJECT
{
  __int16 Type;
  unsigned __int16 Size;
  int ReferenceCount;
  _DRIVER_OBJECT *DriverObject;
  _DEVICE_OBJECT *NextDevice;
  _DEVICE_OBJECT *AttachedDevice;
  _IRP *CurrentIrp;
  struct _IO_TIMER *Timer;
  unsigned int Flags;
  unsigned int Characteristics;
  _VPB *Vpb;
  void *DeviceExtension;
  unsigned int DeviceType;
  char StackSize;
  $7436B97A7C866D79822A6C184761CCF3 Queue;
  unsigned int AlignmentRequirement;
  _KDEVICE_QUEUE DeviceQueue;
  _KDPC Dpc;
  unsigned int ActiveThreadCount;
  void *SecurityDescriptor;
  _KEVENT DeviceLock;
  unsigned __int16 SectorSize;
  unsigned __int16 Spare1;
  _DEVOBJ_EXTENSION *DeviceObjectExtension;
  void *Reserved;
};

/* 473 */
union $C79D6C550A1A9E389B2F49E35E98EA95
{
  unsigned __int8 MethodName[4];
  unsigned int MethodNameAsUlong;
};

/* 438 */
union $F0134D34D6C1E016DBA516859925C0AD
{
  unsigned int Argument;
  unsigned __int8 Data[1];
};

/* 439 */
struct _ACPI_METHOD_ARGUMENT
{
  unsigned __int16 Type;
  unsigned __int16 DataLength;
  $F0134D34D6C1E016DBA516859925C0AD ___u2;
};

/* 474 */
struct _ACPI_EVAL_INPUT_BUFFER_COMPLEX
{
  unsigned int Signature;
  $C79D6C550A1A9E389B2F49E35E98EA95 ___u1;
  unsigned int Size;
  unsigned int ArgumentCount;
  _ACPI_METHOD_ARGUMENT Argument[1];
};

/* 475 */
struct _ACPI_EVAL_OUTPUT_BUFFER
{
  unsigned int Signature;
  unsigned int Length;
  unsigned int Count;
  _ACPI_METHOD_ARGUMENT Argument[1];
};

/* 940 */
typedef unsigned __int16 wchar_t;

/* 156 */
struct _UNICODE_STRING
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  wchar_t *Buffer;
};

/* 106 */
enum DOCKING_STATE : __int32
{
  DockStateUnsupported = 0x0,
  DockStateUnDocked = 0x1,
  DockStateDocked = 0x2,
  DockStateUnknown = 0x3,
};

/* 476 */
struct _DXGK_DEVICE_INFO
{
  void *MiniportDeviceContext;
  _DEVICE_OBJECT *PhysicalDeviceObject;
  _UNICODE_STRING DeviceRegistryPath;
  _CM_RESOURCE_LIST *TranslatedResourceList;
  _LARGE_INTEGER SystemMemorySize;
  _LARGE_INTEGER HighestPhysicalAddress;
  _LARGE_INTEGER AgpApertureBase;
  unsigned int AgpApertureSize;
  DOCKING_STATE DockingState;
};

/* 45 */
enum _DXGK_CHILD_STATUS_TYPE : __int32
{
  StatusUninitialized = 0x0,
  StatusConnection = 0x1,
  StatusRotation = 0x2,
  StatusMiracastConnection = 0x3,
};

/* 468 */
struct $58EA17EDCCEEEFFAA7256D94CE1C3122
{
  unsigned __int8 Connected;
};

/* 469 */
struct $E1447EF739B831741554F519BC3A0AA3
{
  unsigned __int8 Angle;
};

/* 32 */
enum _D3DKMDT_VIDEO_OUTPUT_TECHNOLOGY : __int32
{
  D3DKMDT_VOT_UNINITIALIZED = 0xFFFFFFFE,
  D3DKMDT_VOT_OTHER = 0xFFFFFFFF,
  D3DKMDT_VOT_HD15 = 0x0,
  D3DKMDT_VOT_SVIDEO = 0x1,
  D3DKMDT_VOT_COMPOSITE_VIDEO = 0x2,
  D3DKMDT_VOT_COMPONENT_VIDEO = 0x3,
  D3DKMDT_VOT_DVI = 0x4,
  D3DKMDT_VOT_HDMI = 0x5,
  D3DKMDT_VOT_LVDS = 0x6,
  D3DKMDT_VOT_D_JPN = 0x8,
  D3DKMDT_VOT_SDI = 0x9,
  D3DKMDT_VOT_DISPLAYPORT_EXTERNAL = 0xA,
  D3DKMDT_VOT_DISPLAYPORT_EMBEDDED = 0xB,
  D3DKMDT_VOT_UDI_EXTERNAL = 0xC,
  D3DKMDT_VOT_UDI_EMBEDDED = 0xD,
  D3DKMDT_VOT_SDTVDONGLE = 0xE,
  D3DKMDT_VOT_MIRACAST = 0xF,
  D3DKMDT_VOT_INDIRECT_WIRED = 0x10,
  D3DKMDT_VOT_INTERNAL = 0x80000000,
  D3DKMDT_VOT_SVIDEO_4PIN = 0x1,
  D3DKMDT_VOT_SVIDEO_7PIN = 0x1,
  D3DKMDT_VOT_RF = 0x2,
  D3DKMDT_VOT_RCA_3COMPONENT = 0x3,
  D3DKMDT_VOT_BNC = 0x3,
};

/* 470 */
struct $D517AE236804B02CEABF8EDD705CAE5C
{
  unsigned __int8 Connected;
  _D3DKMDT_VIDEO_OUTPUT_TECHNOLOGY MiracastMonitorType;
};

/* 471 */
union $B0396730C4CF54AAE8C0F4FF59A3CF6A
{
  $58EA17EDCCEEEFFAA7256D94CE1C3122 HotPlug;
  $E1447EF739B831741554F519BC3A0AA3 Rotation;
  $D517AE236804B02CEABF8EDD705CAE5C Miracast;
};

/* 472 */
struct _DXGK_CHILD_STATUS
{
  _DXGK_CHILD_STATUS_TYPE Type;
  unsigned int ChildUid;
  $B0396730C4CF54AAE8C0F4FF59A3CF6A ___u2;
};

/* 309 */
struct _INTERFACE
{
  unsigned __int16 Size;
  unsigned __int16 Version;
  void *Context;
  void (__stdcall *InterfaceReference)(void *);
  void (__stdcall *InterfaceDereference)(void *);
};

/* 477 */
struct __declspec(align(4)) _PCI_DEVICE_PRESENCE_PARAMETERS
{
  unsigned int Size;
  unsigned int Flags;
  unsigned __int16 VendorID;
  unsigned __int16 DeviceID;
  unsigned __int8 RevisionID;
  unsigned __int16 SubVendorID;
  unsigned __int16 SubSystemID;
  unsigned __int8 BaseClass;
  unsigned __int8 SubClass;
  unsigned __int8 ProgIf;
};

/* 402 */
struct $42C27059EB34331C14506940C3DD3E8E
{
  unsigned __int32 DeviceSpecific : 1;
  unsigned __int32 Reserved : 31;
};

/* 403 */
union $07DA3B9CDD711900951CF948A30B4470
{
  $42C27059EB34331C14506940C3DD3E8E __s0;
  unsigned int Value;
};

/* 404 */
struct _DXGKCB_GETHANDLEDATAFLAGS
{
  $07DA3B9CDD711900951CF948A30B4470 ___u0;
};

/* 478 */
struct _DXGKARGCB_GETHANDLEDATA
{
  unsigned int hObject;
  _DXGK_HANDLE_TYPE Type;
  _DXGKCB_GETHANDLEDATAFLAGS Flags;
};

/* 479 */
struct _DXGKARGCB_ENUMHANDLECHILDREN
{
  unsigned int hObject;
  unsigned int Index;
};

/* 72 */
enum _DXGK_INTERRUPT_TYPE : __int32
{
  DXGK_INTERRUPT_DMA_COMPLETED = 0x1,
  DXGK_INTERRUPT_DMA_PREEMPTED = 0x2,
  DXGK_INTERRUPT_CRTC_VSYNC = 0x3,
  DXGK_INTERRUPT_DMA_FAULTED = 0x4,
  DXGK_INTERRUPT_DISPLAYONLY_VSYNC = 0x5,
  DXGK_INTERRUPT_DISPLAYONLY_PRESENT_PROGRESS = 0x6,
  DXGK_INTERRUPT_CRTC_VSYNC_WITH_MULTIPLANE_OVERLAY = 0x7,
  DXGK_INTERRUPT_MICACAST_CHUNK_PROCESSING_COMPLETE = 0x8,
  DXGK_INTERRUPT_DMA_PAGE_FAULTED = 0x9,
  DXGK_INTERRUPT_CRTC_VSYNC_WITH_MULTIPLANE_OVERLAY2 = 0xA,
};

/* 480 */
struct $E5265433964C967ACD23A064F1AB05D0
{
  unsigned int SubmissionFenceId;
  unsigned int NodeOrdinal;
  unsigned int EngineOrdinal;
};

/* 481 */
struct $D07C4C1EA93BA63C34D6534E75223B6A
{
  unsigned int PreemptionFenceId;
  unsigned int LastCompletedFenceId;
  unsigned int NodeOrdinal;
  unsigned int EngineOrdinal;
};

/* 482 */
struct $1C7CB113D1D2EBE64293B34AB3CFFF5B
{
  unsigned int FaultedFenceId;
  int Status;
  unsigned int NodeOrdinal;
  unsigned int EngineOrdinal;
};

/* 483 */
struct __declspec(align(8)) $3DEA0DADBB4E321E94EEFBDF96D42DFA
{
  unsigned int VidPnTargetId;
  _LARGE_INTEGER PhysicalAddress;
  unsigned int PhysicalAdapterMask;
};

/* 484 */
struct $B6FA5EF7E2ADEDB9519D534BAE171349
{
  unsigned int VidPnTargetId;
};

/* 486 */
struct $8EB13349EA8C7C61F049729492753B9C
{
  unsigned int VidPnTargetId;
  unsigned int PhysicalAdapterMask;
  unsigned int MultiPlaneOverlayVsyncInfoCount;
  _DXGK_MULTIPLANE_OVERLAY_VSYNC_INFO *pMultiPlaneOverlayVsyncInfo;
};

/* 92 */
enum _DXGK_PRESENT_DISPLAY_ONLY_PROGRESS_ID : __int32
{
  DXGK_PRESENT_DISPLAYONLY_PROGRESS_ID_COMPLETE = 0x0,
  DXGK_PRESENT_DISPLAYONLY_PROGRESS_ID_FAILED = 0x1,
};

/* 487 */
struct _DXGKARGCB_PRESENT_DISPLAYONLY_PROGRESS
{
  unsigned int VidPnSourceId;
  _DXGK_PRESENT_DISPLAY_ONLY_PROGRESS_ID ProgressId;
};

/* 74 */
enum _DXGK_MIRACAST_CHUNK_TYPE : __int32
{
  DXGK_MIRACAST_CHUNK_TYPE_UNKNOWN = 0x0,
  DXGK_MIRACAST_CHUNK_TYPE_COLOR_CONVERT_COMPLETE = 0x1,
  DXGK_MIRACAST_CHUNK_TYPE_ENCODE_COMPLETE = 0x2,
  DXGK_MIRACAST_CHUNK_TYPE_FRAME_START = 0x3,
  DXGK_MIRACAST_CHUNK_TYPE_FRAME_DROPPED = 0x4,
  DXGK_MIRACAST_CHUNK_TYPE_ENCODE_DRIVER_DEFINED_1 = 0x80000000,
  DXGK_MIRACAST_CHUNK_TYPE_ENCODE_DRIVER_DEFINED_2 = 0x80000001,
};

/* 488 */
struct $06D98A98E286B5A435578419880DDCCD
{
  unsigned __int64 FrameNumber : 40;
  unsigned __int64 PartNumber : 24;
};

/* 489 */
union DXGK_MIRACAST_CHUNK_ID
{
  $06D98A98E286B5A435578419880DDCCD __s0;
  unsigned __int64 Value;
};

/* 490 */
struct DXGK_MIRACAST_CHUNK_INFO
{
  _DXGK_MIRACAST_CHUNK_TYPE ChunkType;
  DXGK_MIRACAST_CHUNK_ID ChunkId;
  unsigned int ProcessingTime;
  unsigned int EncodeRate;
};

/* 491 */
struct __declspec(align(8)) $502A1D999B2EFCDA0A9FE46B1A456972
{
  unsigned int VidPnTargetId;
  DXGK_MIRACAST_CHUNK_INFO ChunkInfo;
  void *pPrivateDriverData;
  unsigned int PrivateDataDriverSize;
  int Status;
};

/* 64 */
enum _DXGK_RENDER_PIPELINE_STAGE : __int32
{
  DXGK_RENDER_PIPELINE_STAGE_UNKNOWN = 0x0,
  DXGK_RENDER_PIPELINE_STAGE_INPUT_ASSEMBLER = 0x1,
  DXGK_RENDER_PIPELINE_STAGE_VERTEX_SHADER = 0x2,
  DXGK_RENDER_PIPELINE_STAGE_GEOMETRY_SHADER = 0x3,
  DXGK_RENDER_PIPELINE_STAGE_STREAM_OUTPUT = 0x4,
  DXGK_RENDER_PIPELINE_STAGE_RASTERIZER = 0x5,
  DXGK_RENDER_PIPELINE_STAGE_PIXEL_SHADER = 0x6,
  DXGK_RENDER_PIPELINE_STAGE_OUTPUT_MERGER = 0x7,
};

/* 84 */
enum _DXGK_PAGE_FAULT_FLAGS : __int32
{
  DXGK_PAGE_FAULT_WRITE = 0x1,
  DXGK_PAGE_FAULT_FENCE_INVALID = 0x2,
  DXGK_PAGE_FAULT_ADAPTER_RESET_REQUIRED = 0x4,
  DXGK_PAGE_FAULT_ENGINE_RESET_REQUIRED = 0x8,
  DXGK_PAGE_FAULT_FATAL_HARDWARE_ERROR = 0x10,
  DXGK_PAGE_FAULT_IOMMU = 0x20,
};

/* 492 */
struct $E17FEFFB8FAA6FACDCE588BC97A3894E
{
  unsigned __int32 IsDeviceSpecificCode : 1;
  __int32 GeneralErrorCode : 31;
};

/* 493 */
struct $AADE5C8C366AA00B647B858B65350F69
{
  unsigned __int32 IsDeviceSpecificCodeReservedBit : 1;
  unsigned __int32 DeviceSpecificCode : 31;
};

/* 494 */
union $7918C6D0DC5918A79476B38B65972F2E
{
  $E17FEFFB8FAA6FACDCE588BC97A3894E __s0;
  $AADE5C8C366AA00B647B858B65350F69 __s1;
};

/* 495 */
struct _DXGK_FAULT_ERROR_CODE
{
  $7918C6D0DC5918A79476B38B65972F2E ___u0;
};

/* 496 */
struct __declspec(align(8)) $A5074A5BB093646534F8FDB01EAE4B52
{
  unsigned int FaultedFenceId;
  unsigned __int64 FaultedPrimitiveAPISequenceNumber;
  _DXGK_RENDER_PIPELINE_STAGE FaultedPipelineStage;
  unsigned int FaultedBindTableEntry;
  _DXGK_PAGE_FAULT_FLAGS PageFaultFlags;
  unsigned __int64 FaultedVirtualAddress;
  unsigned int NodeOrdinal;
  unsigned int EngineOrdinal;
  unsigned int PageTableLevel;
  _DXGK_FAULT_ERROR_CODE FaultErrorCode;
  void *FaultedProcessHandle;
};

/* 497 */
struct $054FAB3F0A73EF3DC73681D3666A8A44
{
  unsigned int VidPnTargetId;
  unsigned int PhysicalAdapterMask;
  unsigned int MultiPlaneOverlayVsyncInfoCount;
  _DXGK_MULTIPLANE_OVERLAY_VSYNC_INFO2 *pMultiPlaneOverlayVsyncInfo;
  unsigned __int64 GpuFrequency;
  unsigned __int64 GpuClockCounter;
};

/* 498 */
struct $CE96C10170E589386E17747CB8C67C74
{
  unsigned int Reserved[16];
};

/* 502 */
union $EB74A0F70DA445FBAC23F0F852111DC7
{
  $E5265433964C967ACD23A064F1AB05D0 DmaCompleted;
  $D07C4C1EA93BA63C34D6534E75223B6A DmaPreempted;
  $1C7CB113D1D2EBE64293B34AB3CFFF5B DmaFaulted;
  $3DEA0DADBB4E321E94EEFBDF96D42DFA CrtcVsync;
  $B6FA5EF7E2ADEDB9519D534BAE171349 DisplayOnlyVsync;
  $8EB13349EA8C7C61F049729492753B9C CrtcVsyncWithMultiPlaneOverlay;
  _DXGKARGCB_PRESENT_DISPLAYONLY_PROGRESS DisplayOnlyPresentProgress;
  $502A1D999B2EFCDA0A9FE46B1A456972 MiracastEncodeChunkCompleted;
  $A5074A5BB093646534F8FDB01EAE4B52 DmaPageFaulted;
  $054FAB3F0A73EF3DC73681D3666A8A44 CrtcVsyncWithMultiPlaneOverlay2;
  $CE96C10170E589386E17747CB8C67C74 Reserved;
};

/* 499 */
struct $E2BAFAAC7C89847FEE3380BA63F38ACC
{
  unsigned __int32 ValidPhysicalAdapterMask : 1;
  unsigned __int32 Reserved : 31;
};

/* 500 */
union $8EDB09C12C37DF7DC80BFA97D08C1E04
{
  $E2BAFAAC7C89847FEE3380BA63F38ACC __s0;
  unsigned int Value;
};

/* 501 */
struct _DXGKCB_NOTIFY_INTERRUPT_DATA_FLAGS
{
  $8EDB09C12C37DF7DC80BFA97D08C1E04 ___u0;
};

/* 503 */
struct __declspec(align(8)) _DXGKARGCB_NOTIFY_INTERRUPT_DATA
{
  _DXGK_INTERRUPT_TYPE InterruptType;
  $EB74A0F70DA445FBAC23F0F852111DC7 ___u1;
  _DXGKCB_NOTIFY_INTERRUPT_DATA_FLAGS Flags;
};

/* 504 */
struct D3DKMDT_HVIDPN__
{
  int unused;
};

/* 514 */
struct _DXGK_VIDPN_INTERFACE
{
  _DXGK_VIDPN_INTERFACE_VERSION Version;
  int (__stdcall *pfnGetTopology)(D3DKMDT_HVIDPN__ *const, D3DKMDT_HVIDPNTOPOLOGY__ **, const _DXGK_VIDPNTOPOLOGY_INTERFACE **);
  int (__stdcall *pfnAcquireSourceModeSet)(D3DKMDT_HVIDPN__ *const, const unsigned int, D3DKMDT_HVIDPNSOURCEMODESET__ **, const _DXGK_VIDPNSOURCEMODESET_INTERFACE **);
  int (__stdcall *pfnReleaseSourceModeSet)(D3DKMDT_HVIDPN__ *const, D3DKMDT_HVIDPNSOURCEMODESET__ *const);
  int (__stdcall *pfnCreateNewSourceModeSet)(D3DKMDT_HVIDPN__ *const, const unsigned int, D3DKMDT_HVIDPNSOURCEMODESET__ **, const _DXGK_VIDPNSOURCEMODESET_INTERFACE **);
  int (__stdcall *pfnAssignSourceModeSet)(D3DKMDT_HVIDPN__ *, const unsigned int, D3DKMDT_HVIDPNSOURCEMODESET__ *const);
  int (__stdcall *pfnAssignMultisamplingMethodSet)(D3DKMDT_HVIDPN__ *, const unsigned int, const unsigned int, const _D3DDDI_MULTISAMPLINGMETHOD *);
  int (__stdcall *pfnAcquireTargetModeSet)(D3DKMDT_HVIDPN__ *const, const unsigned int, D3DKMDT_HVIDPNTARGETMODESET__ **, const _DXGK_VIDPNTARGETMODESET_INTERFACE **);
  int (__stdcall *pfnReleaseTargetModeSet)(D3DKMDT_HVIDPN__ *const, D3DKMDT_HVIDPNTARGETMODESET__ *const);
  int (__stdcall *pfnCreateNewTargetModeSet)(D3DKMDT_HVIDPN__ *const, const unsigned int, D3DKMDT_HVIDPNTARGETMODESET__ **, const _DXGK_VIDPNTARGETMODESET_INTERFACE **);
  int (__stdcall *pfnAssignTargetModeSet)(D3DKMDT_HVIDPN__ *, const unsigned int, D3DKMDT_HVIDPNTARGETMODESET__ *const);
};

/* 517 */
struct _DXGK_MONITOR_INTERFACE
{
  _DXGK_MONITOR_INTERFACE_VERSION Version;
  int (__stdcall *pfnAcquireMonitorSourceModeSet)(void *const, const unsigned int, D3DKMDT_HMONITORSOURCEMODESET__ **, const _DXGK_MONITORSOURCEMODESET_INTERFACE **);
  int (__stdcall *pfnReleaseMonitorSourceModeSet)(void *const, D3DKMDT_HMONITORSOURCEMODESET__ *const);
  int (__stdcall *pfnGetMonitorFrequencyRangeSet)(void *const, const unsigned int, D3DKMDT_HMONITORFREQUENCYRANGESET__ **, const _DXGK_MONITORFREQUENCYRANGESET_INTERFACE **);
  int (__stdcall *pfnGetMonitorDescriptorSet)(void *const, const unsigned int, D3DKMDT_HMONITORDESCRIPTORSET__ **, const _DXGK_MONITORDESCRIPTORSET_INTERFACE **);
};

/* 518 */
struct _DXGKARGCB_GETCAPTUREADDRESS
{
  unsigned int hAllocation;
  unsigned int SegmentId;
  _LARGE_INTEGER PhysicalAddress;
};

/* 427 */
struct $D865B7459BE9E804FB91117E420F7EB7
{
  unsigned __int32 SharedAcrossContexts : 1;
  unsigned __int32 MapGpuVirtualAddress : 1;
  unsigned __int32 Reserved : 30;
};

/* 428 */
union $572D4362704590EE969414DE52A81691
{
  $D865B7459BE9E804FB91117E420F7EB7 __s0;
  unsigned int Value;
};

/* 429 */
struct _DXGK_CREATECONTEXTALLOCATIONFLAGS
{
  $572D4362704590EE969414DE52A81691 ___u0;
};

/* 422 */
struct $59FADADC9B5649AD99C3978E94186D1F
{
  unsigned __int32 SegmentId0 : 5;
  unsigned __int32 Direction0 : 1;
  unsigned __int32 SegmentId1 : 5;
  unsigned __int32 Direction1 : 1;
  unsigned __int32 SegmentId2 : 5;
  unsigned __int32 Direction2 : 1;
  unsigned __int32 SegmentId3 : 5;
  unsigned __int32 Direction3 : 1;
  unsigned __int32 SegmentId4 : 5;
  unsigned __int32 Direction4 : 1;
  unsigned __int32 Reserved : 2;
};

/* 423 */
union $CD2CFA959102F5E7B71F8539B23E3464
{
  $59FADADC9B5649AD99C3978E94186D1F __s0;
  unsigned int Value;
};

/* 424 */
struct _D3DDDI_SEGMENTPREFERENCE
{
  $CD2CFA959102F5E7B71F8539B23E3464 ___u0;
};

/* 519 */
struct $0FD2D93B789A5FCF458225CD4A369FB3
{
  unsigned __int32 Bank0 : 7;
  unsigned __int32 Direction0 : 1;
  unsigned __int32 Bank1 : 7;
  unsigned __int32 Direction1 : 1;
  unsigned __int32 Bank2 : 7;
  unsigned __int32 Direction2 : 1;
  unsigned __int32 Bank3 : 7;
  unsigned __int32 Direction3 : 1;
};

/* 520 */
union $A3D52CD3B7841B8C218DE7DCFE8EFC72
{
  $0FD2D93B789A5FCF458225CD4A369FB3 __s0;
  unsigned int Value;
};

/* 521 */
struct _DXGK_SEGMENTBANKPREFERENCE
{
  $A3D52CD3B7841B8C218DE7DCFE8EFC72 ___u0;
};

/* 435 */
struct $A7A7060B19326E67B1E22F9FC616157D
{
  unsigned __int32 CpuVisible : 1;
  unsigned __int32 PermanentSysMem : 1;
  unsigned __int32 Cached : 1;
  unsigned __int32 Protected : 1;
  unsigned __int32 ExistingSysMem : 1;
  unsigned __int32 ExistingKernelSysMem : 1;
  unsigned __int32 FromEndOfSegment : 1;
  unsigned __int32 Swizzled : 1;
  unsigned __int32 Overlay : 1;
  unsigned __int32 Capture : 1;
  unsigned __int32 UseAlternateVA : 1;
  unsigned __int32 SynchronousPaging : 1;
  unsigned __int32 LinkMirrored : 1;
  unsigned __int32 LinkInstanced : 1;
  unsigned __int32 HistoryBuffer : 1;
  unsigned __int32 AccessedPhysically : 1;
  unsigned __int32 ExplicitResidencyNotification : 1;
  unsigned __int32 HardwareProtected : 1;
  unsigned __int32 CpuVisibleOnDemand : 1;
  unsigned __int32 DXGK_ALLOC_RESERVED16 : 1;
  unsigned __int32 Reserved15 : 1;
  unsigned __int32 Reserved14 : 1;
  unsigned __int32 Reserved13 : 1;
  unsigned __int32 Reserved12 : 1;
  unsigned __int32 Reserved11 : 1;
  unsigned __int32 Reserved10 : 1;
  unsigned __int32 Reserved9 : 1;
  unsigned __int32 Reserved4 : 1;
  unsigned __int32 Reserved3 : 1;
  unsigned __int32 Reserved2 : 1;
  unsigned __int32 Reserved1 : 1;
  unsigned __int32 Reserved0 : 1;
};

/* 436 */
union $B28CAE74101C9C4370A8A1018B7C54CA
{
  $A7A7060B19326E67B1E22F9FC616157D __s0;
  unsigned int Value;
};

/* 437 */
struct _DXGK_ALLOCATIONINFOFLAGS
{
  $B28CAE74101C9C4370A8A1018B7C54CA ___u0;
};

/* 522 */
struct _DXGKARGCB_CREATECONTEXTALLOCATION
{
  _DXGK_CREATECONTEXTALLOCATIONFLAGS ContextAllocationFlags;
  void *hAdapter;
  void *hDevice;
  void *hContext;
  void *hDriverAllocation;
  unsigned int Size;
  unsigned int Alignment;
  unsigned int SupportedSegmentSet;
  unsigned int EvictionSegmentSet;
  _D3DDDI_SEGMENTPREFERENCE PreferredSegment;
  _DXGK_SEGMENTBANKPREFERENCE HintedBank;
  _DXGK_ALLOCATIONINFOFLAGS Flags;
  void *hAllocation;
  unsigned int PhysicalAdapterIndex;
};

/* 410 */
struct $B8A99364A42B8948C2A577AA69BF28DA
{
  unsigned __int64 Write : 1;
  unsigned __int64 Execute : 1;
  unsigned __int64 Zero : 1;
  unsigned __int64 NoAccess : 1;
  unsigned __int64 SystemUseOnly : 1;
  unsigned __int64 Reserved : 59;
};

/* 411 */
union $348AB42E480B3F439E2AA69006109250
{
  $B8A99364A42B8948C2A577AA69BF28DA __s0;
  unsigned __int64 Value;
};

/* 412 */
struct _D3DDDIGPUVIRTUALADDRESS_PROTECTION_TYPE
{
  $348AB42E480B3F439E2AA69006109250 ___u0;
};

/* 524 */
struct _DXGKARGCB_MAPCONTEXTALLOCATION
{
  unsigned __int64 BaseAddress;
  unsigned __int64 MinimumAddress;
  unsigned __int64 MaximumAddress;
  void *hAllocation;
  unsigned __int64 OffsetInPages;
  unsigned __int64 SizeInPages;
  _D3DDDIGPUVIRTUALADDRESS_PROTECTION_TYPE Protection;
  unsigned __int64 DriverProtection;
};

/* 525 */
struct _DXGKARGCB_UPDATECONTEXTALLOCATION
{
  void *hAllocation;
  void *pPrivateDriverData;
  unsigned int PrivateDriverDataSize;
};

/* 526 */
struct $4790D44876E9FB8A3EC2E492EE6F1AAE
{
  unsigned __int32 AllowUserModeMapping : 1;
};

/* 527 */
union $51C1773B7947B1361421DA1EB30C6F14
{
  $4790D44876E9FB8A3EC2E492EE6F1AAE __s0;
  unsigned int Flags;
};

/* 528 */
struct __declspec(align(8)) _DXGKARGCB_RESERVEGPUVIRTUALADDRESSRANGE
{
  void *hDxgkProcess;
  unsigned __int64 SizeInBytes;
  unsigned int Alignment;
  unsigned __int64 StartVirtualAddress;
  unsigned __int64 BaseAddress;
  $51C1773B7947B1361421DA1EB30C6F14 ___u5;
};

/* 73 */
enum _VMBUS_CRASH_PACKET_TYPE : __int32
{
  VmbusCrashPacketNone = 0x0,
  VmbusCrashPacketSimple = 0x1,
  VmbusCrashPacketTransactional = 0x2,
  VmbusCrashPacketCompletion = 0x3,
};

/* 578 */
struct _VMBUS_CRASH_INTERFACE
{
  void *Context;
  unsigned __int8 (__stdcall *OpenChannel)(void *);
  unsigned __int8 (__stdcall *SendPacket)(void *, _VMBUS_CRASH_PACKET_TYPE, unsigned __int64, void *, unsigned int, _MDL *);
  unsigned __int8 (__stdcall *ReceivePacket)(void *, _VMBUS_CRASH_PACKET_TYPE *, unsigned __int64 *, void *, unsigned int *);
};

/* 250 */
struct _DRIVER_OBJECT
{
  __int16 Type;
  __int16 Size;
  _DEVICE_OBJECT *DeviceObject;
  unsigned int Flags;
  void *DriverStart;
  unsigned int DriverSize;
  void *DriverSection;
  _DRIVER_EXTENSION *DriverExtension;
  _UNICODE_STRING DriverName;
  _UNICODE_STRING *HardwareDatabase;
  _FAST_IO_DISPATCH *FastIoDispatch;
  int (__stdcall *DriverInit)(_DRIVER_OBJECT *, _UNICODE_STRING *);
  void (__stdcall *DriverStartIo)(_DEVICE_OBJECT *, _IRP *);
  void (__stdcall *DriverUnload)(_DRIVER_OBJECT *);
  int (__stdcall *MajorFunction[28])(_DEVICE_OBJECT *, _IRP *);
};

/* 254 */
union $20AA346F2D6FA229B98A89581F5D8E83
{
  _IRP *MasterIrp;
  int IrpCount;
  void *SystemBuffer;
};

/* 255 */
union $250F5FE22B4503EFD7D48C86CC7F2167
{
  int Status;
  void *Pointer;
};

/* 256 */
struct _IO_STATUS_BLOCK
{
  $250F5FE22B4503EFD7D48C86CC7F2167 ___u0;
  unsigned int Information;
};

/* 269 */
union $60AA455FA7C5B39D22B070DCE1E1F05E
{
  void (__stdcall *UserApcRoutine)(void *, _IO_STATUS_BLOCK *, unsigned int);
  void *IssuingProcess;
};

/* 270 */
struct $1FE2B2391C78C40EDD24CB239B1A5DE5
{
  $60AA455FA7C5B39D22B070DCE1E1F05E ___u0;
  void *UserApcContext;
};

/* 271 */
union $7C2F4FBF93C63E1134F84A00CDC07F85
{
  $1FE2B2391C78C40EDD24CB239B1A5DE5 AsynchronousParameters;
  _LARGE_INTEGER AllocationSize;
};

/* 365 */
union $C6F74E103E5CF0B79FF9D84D5E03C968
{
  _KDEVICE_QUEUE_ENTRY DeviceQueueEntry;
  void *DriverContext[4];
};

/* 366 */
union $04F554850F082490C75594ACC993A37C
{
  _IO_STACK_LOCATION *CurrentStackLocation;
  unsigned int PacketType;
};

/* 367 */
struct $729EE74E0B6EC04A832F241A2F5B71FC
{
  $C6F74E103E5CF0B79FF9D84D5E03C968 ___u0;
  struct _ETHREAD *Thread;
  char *AuxiliaryBuffer;
  _LIST_ENTRY ListEntry;
  $04F554850F082490C75594ACC993A37C ___u4;
  _FILE_OBJECT *OriginalFileObject;
};

/* 368 */
struct __declspec(align(2)) _KAPC
{
  unsigned __int8 Type;
  unsigned __int8 SpareByte0;
  unsigned __int8 Size;
  unsigned __int8 SpareByte1;
  unsigned int SpareLong0;
  struct _KTHREAD *Thread;
  _LIST_ENTRY ApcListEntry;
  void *Reserved[3];
  void *NormalContext;
  void *SystemArgument1;
  void *SystemArgument2;
  char ApcStateIndex;
  char ApcMode;
  unsigned __int8 Inserted;
};

/* 369 */
union $814406A1F5C65737DDCD0CD56A3B69D1
{
  $729EE74E0B6EC04A832F241A2F5B71FC Overlay;
  _KAPC Apc;
  void *CompletionKey;
};

/* 253 */
struct _IRP
{
  __int16 Type;
  unsigned __int16 Size;
  _MDL *MdlAddress;
  unsigned int Flags;
  $20AA346F2D6FA229B98A89581F5D8E83 AssociatedIrp;
  _LIST_ENTRY ThreadListEntry;
  _IO_STATUS_BLOCK IoStatus;
  char RequestorMode;
  unsigned __int8 PendingReturned;
  char StackCount;
  char CurrentLocation;
  unsigned __int8 Cancel;
  unsigned __int8 CancelIrql;
  char ApcEnvironment;
  unsigned __int8 AllocationFlags;
  _IO_STATUS_BLOCK *UserIosb;
  _KEVENT *UserEvent;
  $7C2F4FBF93C63E1134F84A00CDC07F85 Overlay;
  void (__stdcall *CancelRoutine)(_DEVICE_OBJECT *, _IRP *);
  void *UserBuffer;
  $814406A1F5C65737DDCD0CD56A3B69D1 Tail;
};

/* 290 */
struct _VPB
{
  __int16 Type;
  __int16 Size;
  unsigned __int16 Flags;
  unsigned __int16 VolumeLabelLength;
  _DEVICE_OBJECT *DeviceObject;
  _DEVICE_OBJECT *RealDevice;
  unsigned int SerialNumber;
  unsigned int ReferenceCount;
  wchar_t VolumeLabel[32];
};

/* 378 */
struct _DEVOBJ_EXTENSION
{
  __int16 Type;
  unsigned __int16 Size;
  _DEVICE_OBJECT *DeviceObject;
  unsigned int PowerFlags;
  struct _DEVICE_OBJECT_POWER_EXTENSION *Dope;
  unsigned int ExtensionFlags;
  void *DeviceNode;
  _DEVICE_OBJECT *AttachedTo;
  int StartIoCount;
  int StartIoKey;
  unsigned int StartIoFlags;
  _VPB *Vpb;
  void *DependencyNode;
  void *InterruptContext;
  void *VerifierContext;
};

/* 95 */
enum _INTERFACE_TYPE : __int32
{
  InterfaceTypeUndefined = 0xFFFFFFFF,
  Internal = 0x0,
  Isa = 0x1,
  Eisa = 0x2,
  MicroChannel = 0x3,
  TurboChannel = 0x4,
  PCIBus = 0x5,
  VMEBus = 0x6,
  NuBus = 0x7,
  PCMCIABus = 0x8,
  CBus = 0x9,
  MPIBus = 0xA,
  MPSABus = 0xB,
  ProcessorInternal = 0xC,
  InternalPowerBus = 0xD,
  PNPISABus = 0xE,
  PNPBus = 0xF,
  Vmcs = 0x10,
  ACPIBus = 0x11,
  MaximumInterfaceType = 0x12,
};

/* 343 */
struct __unaligned __declspec(align(4)) $74A0E9635156D6332C99C58AF99B5B73
{
  _LARGE_INTEGER Start;
  unsigned int Length;
};

/* 344 */
struct $B56176FCA237C2B0A687F85299143576
{
  unsigned int Level;
  unsigned int Vector;
  unsigned int Affinity;
};

/* 345 */
struct $7AC00411D044B43A85AFD80B1CBC99F4
{
  unsigned __int16 Reserved;
  unsigned __int16 MessageCount;
  unsigned int Vector;
  unsigned int Affinity;
};

/* 346 */
union $96595F77D85D6134DE2D5B3E906F18C9
{
  $7AC00411D044B43A85AFD80B1CBC99F4 Raw;
  $B56176FCA237C2B0A687F85299143576 Translated;
};

/* 347 */
struct $B4FCC7AD82EF28E69D03CA8F12E30044
{
  $96595F77D85D6134DE2D5B3E906F18C9 ___u0;
};

/* 348 */
struct $72748C417E05990EBECC6BB8D043D8B0
{
  unsigned int Channel;
  unsigned int Port;
  unsigned int Reserved1;
};

/* 349 */
struct $CC0360DD0852F9AAB36A2B2BBC2DF141
{
  unsigned int Channel;
  unsigned int RequestLine;
  unsigned __int8 TransferWidth;
  unsigned __int8 Reserved1;
  unsigned __int8 Reserved2;
  unsigned __int8 Reserved3;
};

/* 317 */
struct $B14DB811EDFC1214B110A98B000FF49B
{
  unsigned int Data[3];
};

/* 350 */
struct $6C467299E1DD150E8FDAFB428553E9E9
{
  unsigned int Start;
  unsigned int Length;
  unsigned int Reserved;
};

/* 351 */
struct $D735038633D506DCA1748B01FF7747C2
{
  unsigned int DataSize;
  unsigned int Reserved1;
  unsigned int Reserved2;
};

/* 352 */
struct __unaligned __declspec(align(4)) $AC48BEAC3754232D367C53D6625BCE94
{
  _LARGE_INTEGER Start;
  unsigned int Length40;
};

/* 353 */
struct __unaligned __declspec(align(4)) $A3A5C03DB1550C7055D6C6700301F685
{
  _LARGE_INTEGER Start;
  unsigned int Length48;
};

/* 354 */
struct __unaligned __declspec(align(4)) $4286E4EA4D7E03BB4CD059D1800595D7
{
  _LARGE_INTEGER Start;
  unsigned int Length64;
};

/* 323 */
struct $EDAC022CDA01C704ED739E663C6F28A2
{
  unsigned __int8 Class;
  unsigned __int8 Type;
  unsigned __int8 Reserved1;
  unsigned __int8 Reserved2;
  unsigned int IdLowPart;
  unsigned int IdHighPart;
};

/* 355 */
union $2D5E41A33A1694D892575DDADB1E789A
{
  $74A0E9635156D6332C99C58AF99B5B73 Generic;
  $74A0E9635156D6332C99C58AF99B5B73 Port;
  $B56176FCA237C2B0A687F85299143576 Interrupt;
  $B4FCC7AD82EF28E69D03CA8F12E30044 MessageInterrupt;
  $74A0E9635156D6332C99C58AF99B5B73 Memory;
  $72748C417E05990EBECC6BB8D043D8B0 Dma;
  $CC0360DD0852F9AAB36A2B2BBC2DF141 DmaV3;
  $B14DB811EDFC1214B110A98B000FF49B DevicePrivate;
  $6C467299E1DD150E8FDAFB428553E9E9 BusNumber;
  $D735038633D506DCA1748B01FF7747C2 DeviceSpecificData;
  $AC48BEAC3754232D367C53D6625BCE94 Memory40;
  $A3A5C03DB1550C7055D6C6700301F685 Memory48;
  $4286E4EA4D7E03BB4CD059D1800595D7 Memory64;
  $EDAC022CDA01C704ED739E663C6F28A2 Connection;
};

/* 356 */
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR
{
  unsigned __int8 Type;
  unsigned __int8 ShareDisposition;
  unsigned __int16 Flags;
  $2D5E41A33A1694D892575DDADB1E789A u;
};

/* 357 */
struct _CM_PARTIAL_RESOURCE_LIST
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned int Count;
  _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];
};

/* 358 */
struct _CM_FULL_RESOURCE_DESCRIPTOR
{
  _INTERFACE_TYPE InterfaceType;
  unsigned int BusNumber;
  _CM_PARTIAL_RESOURCE_LIST PartialResourceList;
};

/* 359 */
struct _CM_RESOURCE_LIST
{
  unsigned int Count;
  _CM_FULL_RESOURCE_DESCRIPTOR List[1];
};

/* 405 */
struct $2E6AB168D1113E8CF440FBE7992D8305
{
  unsigned __int32 VerticalFlip : 1;
  unsigned __int32 HorizontalFlip : 1;
  unsigned __int32 Reserved : 30;
};

/* 406 */
union $C05A7DD30F429BA26DCD1A1B49AA50BE
{
  $2E6AB168D1113E8CF440FBE7992D8305 __s0;
  unsigned int Value;
};

/* 407 */
struct _DXGK_MULTIPLANE_OVERLAY_FLAGS
{
  $C05A7DD30F429BA26DCD1A1B49AA50BE ___u0;
};

/* 408 */
struct tagRECT
{
  int left;
  int top;
  int right;
  int bottom;
};

/* 57 */
enum _D3DDDI_ROTATION : __int32
{
  D3DDDI_ROTATION_IDENTITY = 0x1,
  D3DDDI_ROTATION_90 = 0x2,
  D3DDDI_ROTATION_180 = 0x3,
  D3DDDI_ROTATION_270 = 0x4,
};

/* 395 */
struct $1D6D566DFEE76AA38DC565683F37F64C
{
  unsigned __int32 AlphaBlend : 1;
  unsigned __int32 Reserved : 31;
};

/* 396 */
union $0AE9F1B0B9C857CC81F5E06412632B1B
{
  $1D6D566DFEE76AA38DC565683F37F64C __s0;
  unsigned int Value;
};

/* 397 */
struct _DXGK_MULTIPLANE_OVERLAY_BLEND
{
  $0AE9F1B0B9C857CC81F5E06412632B1B ___u0;
};

/* 58 */
enum _DXGK_MULTIPLANE_OVERLAY_VIDEO_FRAME_FORMAT : __int32
{
  DXGK_MULTIPLANE_OVERLAY_VIDEO_FRAME_FORMAT_PROGRESSIVE = 0x0,
  DXGK_MULTIPLANE_OVERLAY_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST = 0x1,
  DXGK_MULTIPLANE_OVERLAY_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST = 0x2,
};

/* 398 */
struct $DFB25419D061610BA88AF429AD796DE8
{
  unsigned __int32 NominalRange : 1;
  unsigned __int32 Bt709 : 1;
  unsigned __int32 xvYCC : 1;
  unsigned __int32 Reserved : 29;
};

/* 399 */
union $C2D43E53ED2132E70F3DD163B6C60B9D
{
  $DFB25419D061610BA88AF429AD796DE8 __s0;
  unsigned int Value;
};

/* 400 */
struct _DXGK_MULTIPLANE_OVERLAY_YCbCr_FLAGS
{
  $C2D43E53ED2132E70F3DD163B6C60B9D ___u0;
};

/* 56 */
enum _DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT : __int32
{
  DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_MONO = 0x0,
  DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_HORIZONTAL = 0x1,
  DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_VERTICAL = 0x2,
  DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_SEPARATE = 0x3,
  DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_MONO_OFFSET = 0x4,
  DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_ROW_INTERLEAVED = 0x5,
  DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_COLUMN_INTERLEAVED = 0x6,
  DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_CHECKERBOARD = 0x7,
};

/* 59 */
enum _DXGK_MULTIPLANE_OVERLAY_STEREO_FLIP_MODE : __int32
{
  DXGK_MULTIPLANE_OVERLAY_STEREO_FLIP_NONE = 0x0,
  DXGK_MULTIPLANE_OVERLAY_STEREO_FLIP_FRAME0 = 0x1,
  DXGK_MULTIPLANE_OVERLAY_STEREO_FLIP_FRAME1 = 0x2,
};

/* 60 */
enum _DXGK_MULTIPLANE_OVERLAY_STRETCH_QUALITY : __int32
{
  DXGK_MULTIPLANE_OVERLAY_STRETCH_QUALITY_BILINEAR = 0x1,
  DXGK_MULTIPLANE_OVERLAY_STRETCH_QUALITY_HIGH = 0x2,
};

/* 409 */
struct _DXGK_MULTIPLANE_OVERLAY_ATTRIBUTES
{
  _DXGK_MULTIPLANE_OVERLAY_FLAGS Flags;
  tagRECT SrcRect;
  tagRECT DstRect;
  tagRECT ClipRect;
  _D3DDDI_ROTATION Rotation;
  _DXGK_MULTIPLANE_OVERLAY_BLEND Blend;
  _DXGK_MULTIPLANE_OVERLAY_VIDEO_FRAME_FORMAT VideoFrameFormat;
  _DXGK_MULTIPLANE_OVERLAY_YCbCr_FLAGS YCbCrFlags;
  _DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT StereoFormat;
  int StereoLeftViewFrame0;
  int StereoBaseViewFrame0;
  _DXGK_MULTIPLANE_OVERLAY_STEREO_FLIP_MODE StereoFlipMode;
  _DXGK_MULTIPLANE_OVERLAY_STRETCH_QUALITY StretchQuality;
};

/* 485 */
struct _DXGK_MULTIPLANE_OVERLAY_VSYNC_INFO
{
  unsigned int LayerIndex;
  int Enabled;
  _LARGE_INTEGER PhysicalAddress;
  _DXGK_MULTIPLANE_OVERLAY_ATTRIBUTES PlaneAttributes;
};

/* 416 */
struct $AA0224805D4D520B151570C44F82EB36
{
  unsigned __int32 PostPresentNeeded : 1;
  unsigned __int32 Reserved : 31;
};

/* 417 */
union $F273B73A3469C41CA15FAAA13D8CA101
{
  $AA0224805D4D520B151570C44F82EB36 __s0;
  unsigned int Value;
};

/* 418 */
struct _DXGKCB_NOTIFY_MPO_VSYNC_FLAGS
{
  $F273B73A3469C41CA15FAAA13D8CA101 ___u0;
};

/* 449 */
struct __declspec(align(8)) _DXGK_MULTIPLANE_OVERLAY_VSYNC_INFO2
{
  unsigned int LayerIndex;
  unsigned __int64 PresentId;
  _DXGKCB_NOTIFY_MPO_VSYNC_FLAGS Flags;
};

/* 455 */
struct D3DKMDT_HVIDPNTOPOLOGY__
{
  int unused;
};

/* 505 */
const struct _DXGK_VIDPNTOPOLOGY_INTERFACE
{
  int (__stdcall *pfnGetNumPaths)(D3DKMDT_HVIDPNTOPOLOGY__ *const, unsigned int *);
  int (__stdcall *pfnGetNumPathsFromSource)(D3DKMDT_HVIDPNTOPOLOGY__ *const, const unsigned int, unsigned int *);
  int (__stdcall *pfnEnumPathTargetsFromSource)(D3DKMDT_HVIDPNTOPOLOGY__ *const, const unsigned int, const unsigned int, unsigned int *);
  int (__stdcall *pfnGetPathSourceFromTarget)(D3DKMDT_HVIDPNTOPOLOGY__ *const, const unsigned int, unsigned int *);
  int (__stdcall *pfnAcquirePathInfo)(D3DKMDT_HVIDPNTOPOLOGY__ *const, const unsigned int, const unsigned int, const _D3DKMDT_VIDPN_PRESENT_PATH **);
  int (__stdcall *pfnAcquireFirstPathInfo)(D3DKMDT_HVIDPNTOPOLOGY__ *const, const _D3DKMDT_VIDPN_PRESENT_PATH **);
  int (__stdcall *pfnAcquireNextPathInfo)(D3DKMDT_HVIDPNTOPOLOGY__ *const, const _D3DKMDT_VIDPN_PRESENT_PATH *const, const _D3DKMDT_VIDPN_PRESENT_PATH **);
  int (__stdcall *pfnUpdatePathSupportInfo)(D3DKMDT_HVIDPNTOPOLOGY__ *const, const _D3DKMDT_VIDPN_PRESENT_PATH *);
  int (__stdcall *pfnReleasePathInfo)(D3DKMDT_HVIDPNTOPOLOGY__ *const, const _D3DKMDT_VIDPN_PRESENT_PATH *const);
  int (__stdcall *pfnCreateNewPathInfo)(D3DKMDT_HVIDPNTOPOLOGY__ *const, _D3DKMDT_VIDPN_PRESENT_PATH **);
  int (__stdcall *pfnAddPath)(D3DKMDT_HVIDPNTOPOLOGY__ *, _D3DKMDT_VIDPN_PRESENT_PATH *);
  int (__stdcall *pfnRemovePath)(D3DKMDT_HVIDPNTOPOLOGY__ *const, const unsigned int, const unsigned int);
};

/* 506 */
struct D3DKMDT_HVIDPNSOURCEMODESET__
{
  int unused;
};

/* 510 */
const struct _DXGK_VIDPNSOURCEMODESET_INTERFACE
{
  int (__stdcall *pfnGetNumModes)(D3DKMDT_HVIDPNSOURCEMODESET__ *const, unsigned int *const);
  int (__stdcall *pfnAcquireFirstModeInfo)(D3DKMDT_HVIDPNSOURCEMODESET__ *const, const _D3DKMDT_VIDPN_SOURCE_MODE **);
  int (__stdcall *pfnAcquireNextModeInfo)(D3DKMDT_HVIDPNSOURCEMODESET__ *const, const _D3DKMDT_VIDPN_SOURCE_MODE *const, const _D3DKMDT_VIDPN_SOURCE_MODE **);
  int (__stdcall *pfnAcquirePinnedModeInfo)(D3DKMDT_HVIDPNSOURCEMODESET__ *const, const _D3DKMDT_VIDPN_SOURCE_MODE **);
  int (__stdcall *pfnReleaseModeInfo)(D3DKMDT_HVIDPNSOURCEMODESET__ *const, const _D3DKMDT_VIDPN_SOURCE_MODE *const);
  int (__stdcall *pfnCreateNewModeInfo)(D3DKMDT_HVIDPNSOURCEMODESET__ *const, _D3DKMDT_VIDPN_SOURCE_MODE **);
  int (__stdcall *pfnAddMode)(D3DKMDT_HVIDPNSOURCEMODESET__ *, _D3DKMDT_VIDPN_SOURCE_MODE *const);
  int (__stdcall *pfnPinMode)(D3DKMDT_HVIDPNSOURCEMODESET__ *, const unsigned int);
};

/* 511 */
const struct _D3DDDI_MULTISAMPLINGMETHOD
{
  unsigned int NumSamples;
  unsigned int NumQualityLevels;
};

/* 512 */
struct D3DKMDT_HVIDPNTARGETMODESET__
{
  int unused;
};

/* 513 */
const struct _DXGK_VIDPNTARGETMODESET_INTERFACE
{
  int (__stdcall *pfnGetNumModes)(D3DKMDT_HVIDPNTARGETMODESET__ *const, unsigned int *const);
  int (__stdcall *pfnAcquireFirstModeInfo)(D3DKMDT_HVIDPNTARGETMODESET__ *const, const _D3DKMDT_VIDPN_TARGET_MODE **);
  int (__stdcall *pfnAcquireNextModeInfo)(D3DKMDT_HVIDPNTARGETMODESET__ *const, const _D3DKMDT_VIDPN_TARGET_MODE *const, const _D3DKMDT_VIDPN_TARGET_MODE **);
  int (__stdcall *pfnAcquirePinnedModeInfo)(D3DKMDT_HVIDPNTARGETMODESET__ *const, const _D3DKMDT_VIDPN_TARGET_MODE **);
  int (__stdcall *pfnReleaseModeInfo)(D3DKMDT_HVIDPNTARGETMODESET__ *const, const _D3DKMDT_VIDPN_TARGET_MODE *const);
  int (__stdcall *pfnCreateNewModeInfo)(D3DKMDT_HVIDPNTARGETMODESET__ *const, _D3DKMDT_VIDPN_TARGET_MODE **);
  int (__stdcall *pfnAddMode)(D3DKMDT_HVIDPNTARGETMODESET__ *, _D3DKMDT_VIDPN_TARGET_MODE *const);
  int (__stdcall *pfnPinMode)(D3DKMDT_HVIDPNTARGETMODESET__ *, const unsigned int);
};

/* 443 */
struct D3DKMDT_HMONITORSOURCEMODESET__
{
  int unused;
};

/* 515 */
const struct _DXGK_MONITORSOURCEMODESET_INTERFACE
{
  int (__stdcall *pfnGetNumModes)(D3DKMDT_HMONITORSOURCEMODESET__ *const, unsigned int *const);
  int (__stdcall *pfnAcquirePreferredModeInfo)(D3DKMDT_HMONITORSOURCEMODESET__ *const, const _D3DKMDT_MONITOR_SOURCE_MODE **);
  int (__stdcall *pfnAcquireFirstModeInfo)(D3DKMDT_HMONITORSOURCEMODESET__ *const, const _D3DKMDT_MONITOR_SOURCE_MODE **);
  int (__stdcall *pfnAcquireNextModeInfo)(D3DKMDT_HMONITORSOURCEMODESET__ *const, const _D3DKMDT_MONITOR_SOURCE_MODE *const, const _D3DKMDT_MONITOR_SOURCE_MODE **);
  int (__stdcall *pfnCreateNewModeInfo)(D3DKMDT_HMONITORSOURCEMODESET__ *const, _D3DKMDT_MONITOR_SOURCE_MODE **);
  int (__stdcall *pfnAddMode)(D3DKMDT_HMONITORSOURCEMODESET__ *const, _D3DKMDT_MONITOR_SOURCE_MODE *const);
  int (__stdcall *pfnReleaseModeInfo)(D3DKMDT_HMONITORSOURCEMODESET__ *const, const _D3DKMDT_MONITOR_SOURCE_MODE *const);
};

/* 430 */
struct D3DKMDT_HMONITORFREQUENCYRANGESET__
{
  int unused;
};

/* 516 */
const struct _DXGK_MONITORFREQUENCYRANGESET_INTERFACE
{
  int (__stdcall *pfnGetNumFrequencyRanges)(D3DKMDT_HMONITORFREQUENCYRANGESET__ *const, unsigned int *const);
  int (__stdcall *pfnAcquireFirstFrequencyRangeInfo)(D3DKMDT_HMONITORFREQUENCYRANGESET__ *const, const _D3DKMDT_MONITOR_FREQUENCY_RANGE **);
  int (__stdcall *pfnAcquireNextFrequencyRangeInfo)(D3DKMDT_HMONITORFREQUENCYRANGESET__ *const, const _D3DKMDT_MONITOR_FREQUENCY_RANGE *const, const _D3DKMDT_MONITOR_FREQUENCY_RANGE **);
  int (__stdcall *pfnReleaseFrequencyRangeInfo)(D3DKMDT_HMONITORFREQUENCYRANGESET__ *const, const _D3DKMDT_MONITOR_FREQUENCY_RANGE *const);
};

/* 426 */
struct D3DKMDT_HMONITORDESCRIPTORSET__
{
  int unused;
};

/* 434 */
struct _DXGK_MONITORDESCRIPTORSET_INTERFACE
{
  int (__stdcall *pfnGetNumDescriptors)(D3DKMDT_HMONITORDESCRIPTORSET__ *const, unsigned int *const);
  int (__stdcall *pfnAcquireFirstDescriptorInfo)(D3DKMDT_HMONITORDESCRIPTORSET__ *const, const _D3DKMDT_MONITOR_DESCRIPTOR **);
  int (__stdcall *pfnAcquireNextDescriptorInfo)(D3DKMDT_HMONITORDESCRIPTORSET__ *const, const _D3DKMDT_MONITOR_DESCRIPTOR *const, const _D3DKMDT_MONITOR_DESCRIPTOR **);
  int (__stdcall *pfnReleaseDescriptorInfo)(D3DKMDT_HMONITORDESCRIPTORSET__ *const, const _D3DKMDT_MONITOR_DESCRIPTOR *const);
};

/* 252 */
struct _MDL
{
  _MDL *Next;
  __int16 Size;
  __int16 MdlFlags;
  struct _EPROCESS *Process;
  void *MappedSystemVa;
  void *StartVa;
  unsigned int ByteCount;
  unsigned int ByteOffset;
};

/* 379 */
struct _DRIVER_EXTENSION
{
  _DRIVER_OBJECT *DriverObject;
  int (__stdcall *AddDevice)(_DRIVER_OBJECT *, _DEVICE_OBJECT *);
  unsigned int Count;
  _UNICODE_STRING ServiceKeyName;
};

/* 392 */
struct _FAST_IO_DISPATCH
{
  unsigned int SizeOfFastIoDispatch;
  unsigned __int8 (__stdcall *FastIoCheckIfPossible)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned __int8, unsigned int, unsigned __int8, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoRead)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned __int8, unsigned int, void *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoWrite)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned __int8, unsigned int, void *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoQueryBasicInfo)(_FILE_OBJECT *, unsigned __int8, _FILE_BASIC_INFORMATION *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoQueryStandardInfo)(_FILE_OBJECT *, unsigned __int8, _FILE_STANDARD_INFORMATION *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoLock)(_FILE_OBJECT *, _LARGE_INTEGER *, _LARGE_INTEGER *, struct _EPROCESS *, unsigned int, unsigned __int8, unsigned __int8, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoUnlockSingle)(_FILE_OBJECT *, _LARGE_INTEGER *, _LARGE_INTEGER *, struct _EPROCESS *, unsigned int, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoUnlockAll)(_FILE_OBJECT *, struct _EPROCESS *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoUnlockAllByKey)(_FILE_OBJECT *, void *, unsigned int, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoDeviceControl)(_FILE_OBJECT *, unsigned __int8, void *, unsigned int, void *, unsigned int, unsigned int, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  void (__stdcall *AcquireFileForNtCreateSection)(_FILE_OBJECT *);
  void (__stdcall *ReleaseFileForNtCreateSection)(_FILE_OBJECT *);
  void (__stdcall *FastIoDetachDevice)(_DEVICE_OBJECT *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoQueryNetworkOpenInfo)(_FILE_OBJECT *, unsigned __int8, _FILE_NETWORK_OPEN_INFORMATION *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  int (__stdcall *AcquireForModWrite)(_FILE_OBJECT *, _LARGE_INTEGER *, _ERESOURCE **, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *MdlRead)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned int, _MDL **, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *MdlReadComplete)(_FILE_OBJECT *, _MDL *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *PrepareMdlWrite)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned int, _MDL **, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *MdlWriteComplete)(_FILE_OBJECT *, _LARGE_INTEGER *, _MDL *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoReadCompressed)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned int, void *, _MDL **, _IO_STATUS_BLOCK *, _COMPRESSED_DATA_INFO *, unsigned int, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoWriteCompressed)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned int, void *, _MDL **, _IO_STATUS_BLOCK *, _COMPRESSED_DATA_INFO *, unsigned int, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *MdlReadCompleteCompressed)(_FILE_OBJECT *, _MDL *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *MdlWriteCompleteCompressed)(_FILE_OBJECT *, _LARGE_INTEGER *, _MDL *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoQueryOpen)(_IRP *, _FILE_NETWORK_OPEN_INFORMATION *, _DEVICE_OBJECT *);
  int (__stdcall *ReleaseForModWrite)(_FILE_OBJECT *, _ERESOURCE *, _DEVICE_OBJECT *);
  int (__stdcall *AcquireForCcFlush)(_FILE_OBJECT *, _DEVICE_OBJECT *);
  int (__stdcall *ReleaseForCcFlush)(_FILE_OBJECT *, _DEVICE_OBJECT *);
};

/* 281 */
struct $69D7D6CE9EB95131D934AE494077D676
{
  _IO_SECURITY_CONTEXT *SecurityContext;
  unsigned int Options;
  unsigned __int16 FileAttributes;
  unsigned __int16 ShareAccess;
  unsigned int EaLength;
};

/* 283 */
struct $53516E51CD489511566A9F0767D96B56
{
  _IO_SECURITY_CONTEXT *SecurityContext;
  unsigned int Options;
  unsigned __int16 Reserved;
  unsigned __int16 ShareAccess;
  _NAMED_PIPE_CREATE_PARAMETERS *Parameters;
};

/* 285 */
struct $2F2D2EDE2934E5483901FA7BE41C12C8
{
  _IO_SECURITY_CONTEXT *SecurityContext;
  unsigned int Options;
  unsigned __int16 Reserved;
  unsigned __int16 ShareAccess;
  _MAILSLOT_CREATE_PARAMETERS *Parameters;
};

/* 286 */
struct $8505CFBDBF4A11A24782510E840CBE51
{
  unsigned int Length;
  unsigned int Key;
  _LARGE_INTEGER ByteOffset;
};

/* 75 */
enum _FILE_INFORMATION_CLASS : __int32
{
  FileDirectoryInformation = 0x1,
  FileFullDirectoryInformation = 0x2,
  FileBothDirectoryInformation = 0x3,
  FileBasicInformation = 0x4,
  FileStandardInformation = 0x5,
  FileInternalInformation = 0x6,
  FileEaInformation = 0x7,
  FileAccessInformation = 0x8,
  FileNameInformation = 0x9,
  FileRenameInformation = 0xA,
  FileLinkInformation = 0xB,
  FileNamesInformation = 0xC,
  FileDispositionInformation = 0xD,
  FilePositionInformation = 0xE,
  FileFullEaInformation = 0xF,
  FileModeInformation = 0x10,
  FileAlignmentInformation = 0x11,
  FileAllInformation = 0x12,
  FileAllocationInformation = 0x13,
  FileEndOfFileInformation = 0x14,
  FileAlternateNameInformation = 0x15,
  FileStreamInformation = 0x16,
  FilePipeInformation = 0x17,
  FilePipeLocalInformation = 0x18,
  FilePipeRemoteInformation = 0x19,
  FileMailslotQueryInformation = 0x1A,
  FileMailslotSetInformation = 0x1B,
  FileCompressionInformation = 0x1C,
  FileObjectIdInformation = 0x1D,
  FileCompletionInformation = 0x1E,
  FileMoveClusterInformation = 0x1F,
  FileQuotaInformation = 0x20,
  FileReparsePointInformation = 0x21,
  FileNetworkOpenInformation = 0x22,
  FileAttributeTagInformation = 0x23,
  FileTrackingInformation = 0x24,
  FileIdBothDirectoryInformation = 0x25,
  FileIdFullDirectoryInformation = 0x26,
  FileValidDataLengthInformation = 0x27,
  FileShortNameInformation = 0x28,
  FileIoCompletionNotificationInformation = 0x29,
  FileIoStatusBlockRangeInformation = 0x2A,
  FileIoPriorityHintInformation = 0x2B,
  FileSfioReserveInformation = 0x2C,
  FileSfioVolumeInformation = 0x2D,
  FileHardLinkInformation = 0x2E,
  FileProcessIdsUsingFileInformation = 0x2F,
  FileNormalizedNameInformation = 0x30,
  FileNetworkPhysicalNameInformation = 0x31,
  FileIdGlobalTxDirectoryInformation = 0x32,
  FileIsRemoteDeviceInformation = 0x33,
  FileUnusedInformation = 0x34,
  FileNumaNodeInformation = 0x35,
  FileStandardLinkInformation = 0x36,
  FileRemoteProtocolInformation = 0x37,
  FileRenameInformationBypassAccessCheck = 0x38,
  FileLinkInformationBypassAccessCheck = 0x39,
  FileVolumeNameInformation = 0x3A,
  FileIdInformation = 0x3B,
  FileIdExtdDirectoryInformation = 0x3C,
  FileReplaceCompletionInformation = 0x3D,
  FileHardLinkFullIdInformation = 0x3E,
  FileIdExtdBothDirectoryInformation = 0x3F,
  FileMaximumInformation = 0x40,
};

/* 287 */
struct $BB93CE4E9182C133AFF256D1AE98A558
{
  unsigned int Length;
  _UNICODE_STRING *FileName;
  _FILE_INFORMATION_CLASS FileInformationClass;
  unsigned int FileIndex;
};

/* 288 */
struct $50A7D1BFBD4B9BBEBCBBE3D92FEB6A61
{
  unsigned int Length;
  unsigned int CompletionFilter;
};

/* 289 */
struct $22A3FD034D2C66CA50014087B6ED7263
{
  unsigned int Length;
  _FILE_INFORMATION_CLASS FileInformationClass;
};

/* 294 */
struct $BBD6C80A82148A7CAD5B218A5A41C1D9
{
  unsigned __int8 ReplaceIfExists;
  unsigned __int8 AdvanceOnly;
};

/* 295 */
union $84CECE1A0D0389BFECB755B12BD60EDE
{
  $BBD6C80A82148A7CAD5B218A5A41C1D9 __s0;
  unsigned int ClusterCount;
  void *DeleteHandle;
};

/* 296 */
struct $5AC8FEBAAF253E06C99AD1AC020E502F
{
  unsigned int Length;
  _FILE_INFORMATION_CLASS FileInformationClass;
  _FILE_OBJECT *FileObject;
  $84CECE1A0D0389BFECB755B12BD60EDE ___u3;
};

/* 297 */
struct $43049A1C9CD1076EE2F76BA56B9556D6
{
  unsigned int Length;
  void *EaList;
  unsigned int EaListLength;
  unsigned int EaIndex;
};

/* 298 */
struct $44CAF4394294FD1AA9144BF9A47D2B76
{
  unsigned int Length;
};

/* 76 */
enum _FSINFOCLASS : __int32
{
  FileFsVolumeInformation = 0x1,
  FileFsLabelInformation = 0x2,
  FileFsSizeInformation = 0x3,
  FileFsDeviceInformation = 0x4,
  FileFsAttributeInformation = 0x5,
  FileFsControlInformation = 0x6,
  FileFsFullSizeInformation = 0x7,
  FileFsObjectIdInformation = 0x8,
  FileFsDriverPathInformation = 0x9,
  FileFsVolumeFlagsInformation = 0xA,
  FileFsSectorSizeInformation = 0xB,
  FileFsDataCopyInformation = 0xC,
  FileFsMetadataSizeInformation = 0xD,
  FileFsMaximumInformation = 0xE,
};

/* 299 */
struct $53E10C5AE5B182A96145C8B64CC8E888
{
  unsigned int Length;
  _FSINFOCLASS FsInformationClass;
};

/* 300 */
struct $1452ECD7C6E5AB3C058EED8909EEC64B
{
  unsigned int OutputBufferLength;
  unsigned int InputBufferLength;
  unsigned int FsControlCode;
  void *Type3InputBuffer;
};

/* 301 */
struct $0E3D16B94D8740E2A007EFADA344F22E
{
  _LARGE_INTEGER *Length;
  unsigned int Key;
  _LARGE_INTEGER ByteOffset;
};

/* 302 */
struct $343716E60DEC8CEA3C236115305CA9A5
{
  unsigned int OutputBufferLength;
  unsigned int InputBufferLength;
  unsigned int IoControlCode;
  void *Type3InputBuffer;
};

/* 303 */
struct $79FAFD50642EF9FCAC6F48CCDD5826D7
{
  unsigned int SecurityInformation;
  unsigned int Length;
};

/* 304 */
struct $29E784017BF8D630C3CED492840B3F1E
{
  unsigned int SecurityInformation;
  void *SecurityDescriptor;
};

/* 305 */
struct $1D11C49DE42B7475FFA9C46C8485AAF4
{
  _VPB *Vpb;
  _DEVICE_OBJECT *DeviceObject;
};

/* 306 */
struct $B2B4984C7002DD41520623255E2F9497
{
  struct _SCSI_REQUEST_BLOCK *Srb;
};

/* 307 */
struct $F26D5252B9CB0364A89F29DE5B8870AE
{
  unsigned int Length;
  void *StartSid;
  struct _FILE_GET_QUOTA_INFORMATION *SidList;
  unsigned int SidListLength;
};

/* 77 */
enum _DEVICE_RELATION_TYPE : __int32
{
  BusRelations = 0x0,
  EjectionRelations = 0x1,
  PowerRelations = 0x2,
  RemovalRelations = 0x3,
  TargetDeviceRelation = 0x4,
  SingleBusRelations = 0x5,
  TransportRelations = 0x6,
};

/* 308 */
struct $A290BAD125C6A7F8E50814ADF1470245
{
  _DEVICE_RELATION_TYPE Type;
};

/* 310 */
struct $CF22DF332528682A639413AFECFD07FE
{
  const _GUID *InterfaceType;
  unsigned __int16 Size;
  unsigned __int16 Version;
  _INTERFACE *Interface;
  void *InterfaceSpecificData;
};

/* 312 */
struct $9EEA0F0D267BCC6D91BCD651C1A73DE8
{
  _DEVICE_CAPABILITIES *Capabilities;
};

/* 328 */
struct $F157B5A0A1CFEBE25D55D60395F34B53
{
  _IO_RESOURCE_REQUIREMENTS_LIST *IoResourceRequirementList;
};

/* 329 */
struct $5E4425892CB91929A7D567B5DA0A3F92
{
  unsigned int WhichSpace;
  void *Buffer;
  unsigned int Offset;
  unsigned int Length;
};

/* 330 */
struct $B367FCCFB95D7087158A479FE9C2D0D7
{
  unsigned __int8 Lock;
};

/* 78 */
enum BUS_QUERY_ID_TYPE : __int32
{
  BusQueryDeviceID = 0x0,
  BusQueryHardwareIDs = 0x1,
  BusQueryCompatibleIDs = 0x2,
  BusQueryInstanceID = 0x3,
  BusQueryDeviceSerialNumber = 0x4,
  BusQueryContainerID = 0x5,
};

/* 331 */
struct $C8F60E0EC3AF95B15B6EF6CCC6136239
{
  BUS_QUERY_ID_TYPE IdType;
};

/* 79 */
enum DEVICE_TEXT_TYPE : __int32
{
  DeviceTextDescription = 0x0,
  DeviceTextLocationInformation = 0x1,
};

/* 332 */
struct $FF32C82DFA9C52708F791905808E2B3D
{
  DEVICE_TEXT_TYPE DeviceTextType;
  unsigned int LocaleId;
};

/* 80 */
enum _DEVICE_USAGE_NOTIFICATION_TYPE : __int32
{
  DeviceUsageTypeUndefined = 0x0,
  DeviceUsageTypePaging = 0x1,
  DeviceUsageTypeHibernation = 0x2,
  DeviceUsageTypeDumpFile = 0x3,
  DeviceUsageTypeBoot = 0x4,
  DeviceUsageTypePostDisplay = 0x5,
};

/* 333 */
struct $37160DC8AFFE601A215B2F4DDD3FD215
{
  unsigned __int8 InPath;
  unsigned __int8 Reserved[3];
  _DEVICE_USAGE_NOTIFICATION_TYPE Type;
};

/* 81 */
enum _SYSTEM_POWER_STATE : __int32
{
  PowerSystemUnspecified = 0x0,
  PowerSystemWorking = 0x1,
  PowerSystemSleeping1 = 0x2,
  PowerSystemSleeping2 = 0x3,
  PowerSystemSleeping3 = 0x4,
  PowerSystemHibernate = 0x5,
  PowerSystemShutdown = 0x6,
  PowerSystemMaximum = 0x7,
};

/* 334 */
struct $649E46A740C65FC9F558BDF36FE400D8
{
  _SYSTEM_POWER_STATE PowerState;
};

/* 336 */
struct $F2B53DE4E4C5A7A31F9688A75459FA2E
{
  _POWER_SEQUENCE *PowerSequence;
};

/* 337 */
struct $76514DB155979F88E47E6F460A9859AB
{
  unsigned __int32 Reserved1 : 8;
  unsigned __int32 TargetSystemState : 4;
  unsigned __int32 EffectiveSystemState : 4;
  unsigned __int32 CurrentSystemState : 4;
  unsigned __int32 IgnoreHibernationPath : 1;
  unsigned __int32 PseudoTransition : 1;
  unsigned __int32 Reserved2 : 10;
};

/* 338 */
union $827B481345350C1291C77169590B6490
{
  $76514DB155979F88E47E6F460A9859AB __s0;
  unsigned int ContextAsUlong;
};

/* 339 */
struct _SYSTEM_POWER_STATE_CONTEXT
{
  $827B481345350C1291C77169590B6490 ___u0;
};

/* 341 */
union $2C58FCF3D37AE04D11CE6604E5DAAA31
{
  unsigned int SystemContext;
  _SYSTEM_POWER_STATE_CONTEXT SystemPowerStateContext;
};

/* 82 */
enum _POWER_STATE_TYPE : __int32
{
  SystemPowerState = 0x0,
  DevicePowerState = 0x1,
};

/* 30 */
enum _DEVICE_POWER_STATE : __int32
{
  PowerDeviceUnspecified = 0x0,
  PowerDeviceD0 = 0x1,
  PowerDeviceD1 = 0x2,
  PowerDeviceD2 = 0x3,
  PowerDeviceD3 = 0x4,
  PowerDeviceMaximum = 0x5,
};

/* 340 */
union _POWER_STATE
{
  _SYSTEM_POWER_STATE SystemState;
  _DEVICE_POWER_STATE DeviceState;
};

/* 83 */
enum POWER_ACTION : __int32
{
  PowerActionNone = 0x0,
  PowerActionReserved = 0x1,
  PowerActionSleep = 0x2,
  PowerActionHibernate = 0x3,
  PowerActionShutdown = 0x4,
  PowerActionShutdownReset = 0x5,
  PowerActionShutdownOff = 0x6,
  PowerActionWarmEject = 0x7,
  PowerActionDisplayOff = 0x8,
};

/* 342 */
struct $27910BD986161AA94BA110CF78AC82AA
{
  $2C58FCF3D37AE04D11CE6604E5DAAA31 ___u0;
  _POWER_STATE_TYPE Type;
  _POWER_STATE State;
  POWER_ACTION ShutdownType;
};

/* 360 */
struct $8641273DF6CE254B6001C4376EDDFBF7
{
  _CM_RESOURCE_LIST *AllocatedResources;
  _CM_RESOURCE_LIST *AllocatedResourcesTranslated;
};

/* 361 */
struct $27D1A893733DBE62F2FCC36974CB79FA
{
  unsigned int ProviderId;
  void *DataPath;
  unsigned int BufferSize;
  void *Buffer;
};

/* 362 */
struct $228F32E73A128818A25FF1959272C294
{
  void *Argument1;
  void *Argument2;
  void *Argument3;
  void *Argument4;
};

/* 363 */
union $2D8F36CA9F7EA707ACA054B59E139F47
{
  $69D7D6CE9EB95131D934AE494077D676 Create;
  $53516E51CD489511566A9F0767D96B56 CreatePipe;
  $2F2D2EDE2934E5483901FA7BE41C12C8 CreateMailslot;
  $8505CFBDBF4A11A24782510E840CBE51 Read;
  $8505CFBDBF4A11A24782510E840CBE51 Write;
  $BB93CE4E9182C133AFF256D1AE98A558 QueryDirectory;
  $50A7D1BFBD4B9BBEBCBBE3D92FEB6A61 NotifyDirectory;
  $22A3FD034D2C66CA50014087B6ED7263 QueryFile;
  $5AC8FEBAAF253E06C99AD1AC020E502F SetFile;
  $43049A1C9CD1076EE2F76BA56B9556D6 QueryEa;
  $44CAF4394294FD1AA9144BF9A47D2B76 SetEa;
  $53E10C5AE5B182A96145C8B64CC8E888 QueryVolume;
  $53E10C5AE5B182A96145C8B64CC8E888 SetVolume;
  $1452ECD7C6E5AB3C058EED8909EEC64B FileSystemControl;
  $0E3D16B94D8740E2A007EFADA344F22E LockControl;
  $343716E60DEC8CEA3C236115305CA9A5 DeviceIoControl;
  $79FAFD50642EF9FCAC6F48CCDD5826D7 QuerySecurity;
  $29E784017BF8D630C3CED492840B3F1E SetSecurity;
  $1D11C49DE42B7475FFA9C46C8485AAF4 MountVolume;
  $1D11C49DE42B7475FFA9C46C8485AAF4 VerifyVolume;
  $B2B4984C7002DD41520623255E2F9497 Scsi;
  $F26D5252B9CB0364A89F29DE5B8870AE QueryQuota;
  $44CAF4394294FD1AA9144BF9A47D2B76 SetQuota;
  $A290BAD125C6A7F8E50814ADF1470245 QueryDeviceRelations;
  $CF22DF332528682A639413AFECFD07FE QueryInterface;
  $9EEA0F0D267BCC6D91BCD651C1A73DE8 DeviceCapabilities;
  $F157B5A0A1CFEBE25D55D60395F34B53 FilterResourceRequirements;
  $5E4425892CB91929A7D567B5DA0A3F92 ReadWriteConfig;
  $B367FCCFB95D7087158A479FE9C2D0D7 SetLock;
  $C8F60E0EC3AF95B15B6EF6CCC6136239 QueryId;
  $FF32C82DFA9C52708F791905808E2B3D QueryDeviceText;
  $37160DC8AFFE601A215B2F4DDD3FD215 UsageNotification;
  $649E46A740C65FC9F558BDF36FE400D8 WaitWake;
  $F2B53DE4E4C5A7A31F9688A75459FA2E PowerSequence;
  $27910BD986161AA94BA110CF78AC82AA Power;
  $8641273DF6CE254B6001C4376EDDFBF7 StartDevice;
  $27D1A893733DBE62F2FCC36974CB79FA WMI;
  $228F32E73A128818A25FF1959272C294 Others;
};

/* 364 */
struct __unaligned __declspec(align(4)) _IO_STACK_LOCATION
{
  unsigned __int8 MajorFunction;
  unsigned __int8 MinorFunction;
  unsigned __int8 Flags;
  unsigned __int8 Control;
  $2D8F36CA9F7EA707ACA054B59E139F47 Parameters;
  _DEVICE_OBJECT *DeviceObject;
  _FILE_OBJECT *FileObject;
  int (__stdcall *CompletionRoutine)(_DEVICE_OBJECT *, _IRP *, void *);
  void *Context;
};

/* 292 */
struct _FILE_OBJECT
{
  __int16 Type;
  __int16 Size;
  _DEVICE_OBJECT *DeviceObject;
  _VPB *Vpb;
  void *FsContext;
  void *FsContext2;
  _SECTION_OBJECT_POINTERS *SectionObjectPointer;
  void *PrivateCacheMap;
  int FinalStatus;
  _FILE_OBJECT *RelatedFileObject;
  unsigned __int8 LockOperation;
  unsigned __int8 DeletePending;
  unsigned __int8 ReadAccess;
  unsigned __int8 WriteAccess;
  unsigned __int8 DeleteAccess;
  unsigned __int8 SharedRead;
  unsigned __int8 SharedWrite;
  unsigned __int8 SharedDelete;
  unsigned int Flags;
  _UNICODE_STRING FileName;
  _LARGE_INTEGER CurrentByteOffset;
  unsigned int Waiters;
  unsigned int Busy;
  void *LastLock;
  _KEVENT Lock;
  _KEVENT Event;
  _IO_COMPLETION_CONTEXT *CompletionContext;
  unsigned int IrpListLock;
  _LIST_ENTRY IrpList;
  void *FileObjectExtension;
};

/* 87 */
enum _D3DKMDT_VIDPN_PRESENT_PATH_IMPORTANCE : __int32
{
  D3DKMDT_VPPI_UNINITIALIZED = 0x0,
  D3DKMDT_VPPI_PRIMARY = 0x1,
  D3DKMDT_VPPI_SECONDARY = 0x2,
  D3DKMDT_VPPI_TERTIARY = 0x3,
  D3DKMDT_VPPI_QUATERNARY = 0x4,
  D3DKMDT_VPPI_QUINARY = 0x5,
  D3DKMDT_VPPI_SENARY = 0x6,
  D3DKMDT_VPPI_SEPTENARY = 0x7,
  D3DKMDT_VPPI_OCTONARY = 0x8,
  D3DKMDT_VPPI_NONARY = 0x9,
  D3DKMDT_VPPI_DENARY = 0xA,
};

/* 50 */
enum _D3DKMDT_VIDPN_PRESENT_PATH_SCALING : __int32
{
  D3DKMDT_VPPS_UNINITIALIZED = 0x0,
  D3DKMDT_VPPS_IDENTITY = 0x1,
  D3DKMDT_VPPS_CENTERED = 0x2,
  D3DKMDT_VPPS_STRETCHED = 0x3,
  D3DKMDT_VPPS_ASPECTRATIOCENTEREDMAX = 0x4,
  D3DKMDT_VPPS_CUSTOM = 0x5,
  D3DKMDT_VPPS_RESERVED1 = 0xFD,
  D3DKMDT_VPPS_UNPINNED = 0xFE,
  D3DKMDT_VPPS_NOTSPECIFIED = 0xFF,
};

/* 458 */
struct _D3DKMDT_VIDPN_PRESENT_PATH_SCALING_SUPPORT
{
  unsigned __int32 Identity : 1;
  unsigned __int32 Centered : 1;
  unsigned __int32 Stretched : 1;
  unsigned __int32 AspectRatioCenteredMax : 1;
  unsigned __int32 Custom : 1;
};

/* 40 */
enum _D3DKMDT_VIDPN_PRESENT_PATH_ROTATION : __int32
{
  D3DKMDT_VPPR_UNINITIALIZED = 0x0,
  D3DKMDT_VPPR_IDENTITY = 0x1,
  D3DKMDT_VPPR_ROTATE90 = 0x2,
  D3DKMDT_VPPR_ROTATE180 = 0x3,
  D3DKMDT_VPPR_ROTATE270 = 0x4,
  D3DKMDT_VPPR_IDENTITY_OFFSET90 = 0x5,
  D3DKMDT_VPPR_ROTATE90_OFFSET90 = 0x6,
  D3DKMDT_VPPR_ROTATE180_OFFSET90 = 0x7,
  D3DKMDT_VPPR_ROTATE270_OFFSET90 = 0x8,
  D3DKMDT_VPPR_IDENTITY_OFFSET180 = 0x9,
  D3DKMDT_VPPR_ROTATE90_OFFSET180 = 0xA,
  D3DKMDT_VPPR_ROTATE180_OFFSET180 = 0xB,
  D3DKMDT_VPPR_ROTATE270_OFFSET180 = 0xC,
  D3DKMDT_VPPR_IDENTITY_OFFSET270 = 0xD,
  D3DKMDT_VPPR_ROTATE90_OFFSET270 = 0xE,
  D3DKMDT_VPPR_ROTATE180_OFFSET270 = 0xF,
  D3DKMDT_VPPR_ROTATE270_OFFSET270 = 0x10,
  D3DKMDT_VPPR_UNPINNED = 0xFE,
  D3DKMDT_VPPR_NOTSPECIFIED = 0xFF,
};

/* 459 */
struct _D3DKMDT_VIDPN_PRESENT_PATH_ROTATION_SUPPORT
{
  unsigned __int32 Identity : 1;
  unsigned __int32 Rotate90 : 1;
  unsigned __int32 Rotate180 : 1;
  unsigned __int32 Rotate270 : 1;
  unsigned __int32 Offset0 : 1;
  unsigned __int32 Offset90 : 1;
  unsigned __int32 Offset180 : 1;
  unsigned __int32 Offset270 : 1;
};

/* 460 */
struct _D3DKMDT_VIDPN_PRESENT_PATH_TRANSFORMATION
{
  _D3DKMDT_VIDPN_PRESENT_PATH_SCALING Scaling;
  _D3DKMDT_VIDPN_PRESENT_PATH_SCALING_SUPPORT ScalingSupport;
  _D3DKMDT_VIDPN_PRESENT_PATH_ROTATION Rotation;
  _D3DKMDT_VIDPN_PRESENT_PATH_ROTATION_SUPPORT RotationSupport;
};

/* 431 */
struct _D3DKMDT_2DREGION
{
  unsigned int cx;
  unsigned int cy;
};

/* 88 */
enum _D3DKMDT_COLOR_BASIS : __int32
{
  D3DKMDT_CB_UNINITIALIZED = 0x0,
  D3DKMDT_CB_INTENSITY = 0x1,
  D3DKMDT_CB_SRGB = 0x2,
  D3DKMDT_CB_SCRGB = 0x3,
  D3DKMDT_CB_YCBCR = 0x4,
  D3DKMDT_CB_YPBPR = 0x5,
};

/* 447 */
struct _D3DKMDT_COLOR_COEFF_DYNAMIC_RANGES
{
  unsigned int FirstChannel;
  unsigned int SecondChannel;
  unsigned int ThirdChannel;
  unsigned int FourthChannel;
};

/* 89 */
enum _D3DKMDT_VIDPN_PRESENT_PATH_CONTENT : __int32
{
  D3DKMDT_VPPC_UNINITIALIZED = 0x0,
  D3DKMDT_VPPC_GRAPHICS = 0x1,
  D3DKMDT_VPPC_VIDEO = 0x2,
  D3DKMDT_VPPC_NOTSPECIFIED = 0xFF,
};

/* 65 */
enum _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_TYPE : __int32
{
  D3DKMDT_VPPMT_UNINITIALIZED = 0x0,
  D3DKMDT_VPPMT_NOPROTECTION = 0x1,
  D3DKMDT_VPPMT_MACROVISION_APSTRIGGER = 0x2,
  D3DKMDT_VPPMT_MACROVISION_FULLSUPPORT = 0x3,
};

/* 461 */
struct _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_SUPPORT
{
  unsigned __int32 NoProtection : 1;
  unsigned __int32 MacroVisionApsTrigger : 1;
  unsigned __int32 MacroVisionFull : 1;
  unsigned __int32 Reserved : 29;
};

/* 462 */
struct _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION
{
  _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_TYPE CopyProtectionType;
  unsigned int APSTriggerBits;
  unsigned __int8 OEMCopyProtection[256];
  _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_SUPPORT CopyProtectionSupport;
};

/* 104 */
enum _D3DDDI_GAMMARAMP_TYPE : __int32
{
  D3DDDI_GAMMARAMP_UNINITIALIZED = 0x0,
  D3DDDI_GAMMARAMP_DEFAULT = 0x1,
  D3DDDI_GAMMARAMP_RGB256x3x16 = 0x2,
  D3DDDI_GAMMARAMP_DXGI_1 = 0x3,
};

/* 465 */
union $2DD2B81CF7D738E5AB98C40100C7311E
{
  _D3DDDI_GAMMA_RAMP_RGB256x3x16 *pRgb256x3x16;
  _D3DDDI_GAMMA_RAMP_DXGI_1 *pDxgi1;
  void *pRaw;
};

/* 466 */
struct _D3DKMDT_GAMMA_RAMP
{
  _D3DDDI_GAMMARAMP_TYPE Type;
  unsigned int DataSize;
  $2DD2B81CF7D738E5AB98C40100C7311E Data;
};

/* 467 */
struct _D3DKMDT_VIDPN_PRESENT_PATH
{
  unsigned int VidPnSourceId;
  unsigned int VidPnTargetId;
  _D3DKMDT_VIDPN_PRESENT_PATH_IMPORTANCE ImportanceOrdinal;
  _D3DKMDT_VIDPN_PRESENT_PATH_TRANSFORMATION ContentTransformation;
  _D3DKMDT_2DREGION VisibleFromActiveTLOffset;
  _D3DKMDT_2DREGION VisibleFromActiveBROffset;
  _D3DKMDT_COLOR_BASIS VidPnTargetColorBasis;
  _D3DKMDT_COLOR_COEFF_DYNAMIC_RANGES VidPnTargetColorCoeffDynamicRanges;
  _D3DKMDT_VIDPN_PRESENT_PATH_CONTENT Content;
  _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION CopyProtection;
  _D3DKMDT_GAMMA_RAMP GammaRamp;
};

/* 102 */
enum _D3DKMDT_VIDPN_SOURCE_MODE_TYPE : __int32
{
  D3DKMDT_RMT_UNINITIALIZED = 0x0,
  D3DKMDT_RMT_GRAPHICS = 0x1,
  D3DKMDT_RMT_TEXT = 0x2,
  D3DKMDT_RMT_GRAPHICS_STEREO = 0x3,
  D3DKMDT_RMT_GRAPHICS_STEREO_ADVANCED_SCAN = 0x4,
};

/* 96 */
enum _D3DKMDT_PIXEL_VALUE_ACCESS_MODE : __int32
{
  D3DKMDT_PVAM_UNINITIALIZED = 0x0,
  D3DKMDT_PVAM_DIRECT = 0x1,
  D3DKMDT_PVAM_PRESETPALETTE = 0x2,
  D3DKMDT_PVAM_SETTABLEPALETTE = 0x3,
};

/* 507 */
struct _D3DKMDT_GRAPHICS_RENDERING_FORMAT
{
  _D3DKMDT_2DREGION PrimSurfSize;
  _D3DKMDT_2DREGION VisibleRegionSize;
  unsigned int Stride;
  _D3DDDIFORMAT PixelFormat;
  _D3DKMDT_COLOR_BASIS ColorBasis;
  _D3DKMDT_PIXEL_VALUE_ACCESS_MODE PixelValueAccessMode;
};

/* 97 */
enum _D3DKMDT_TEXT_RENDERING_FORMAT : __int32
{
  D3DKMDT_TRF_UNINITIALIZED = 0x0,
};

/* 508 */
union $47443DB654BF2C3ECD79B5F30D677F3E
{
  _D3DKMDT_GRAPHICS_RENDERING_FORMAT Graphics;
  _D3DKMDT_TEXT_RENDERING_FORMAT Text;
};

/* 509 */
const struct _D3DKMDT_VIDPN_SOURCE_MODE
{
  unsigned int Id;
  _D3DKMDT_VIDPN_SOURCE_MODE_TYPE Type;
  $47443DB654BF2C3ECD79B5F30D677F3E Format;
};

/* 62 */
enum _D3DKMDT_VIDEO_SIGNAL_STANDARD : __int32
{
  D3DKMDT_VSS_UNINITIALIZED = 0x0,
  D3DKMDT_VSS_VESA_DMT = 0x1,
  D3DKMDT_VSS_VESA_GTF = 0x2,
  D3DKMDT_VSS_VESA_CVT = 0x3,
  D3DKMDT_VSS_IBM = 0x4,
  D3DKMDT_VSS_APPLE = 0x5,
  D3DKMDT_VSS_NTSC_M = 0x6,
  D3DKMDT_VSS_NTSC_J = 0x7,
  D3DKMDT_VSS_NTSC_443 = 0x8,
  D3DKMDT_VSS_PAL_B = 0x9,
  D3DKMDT_VSS_PAL_B1 = 0xA,
  D3DKMDT_VSS_PAL_G = 0xB,
  D3DKMDT_VSS_PAL_H = 0xC,
  D3DKMDT_VSS_PAL_I = 0xD,
  D3DKMDT_VSS_PAL_D = 0xE,
  D3DKMDT_VSS_PAL_N = 0xF,
  D3DKMDT_VSS_PAL_NC = 0x10,
  D3DKMDT_VSS_SECAM_B = 0x11,
  D3DKMDT_VSS_SECAM_D = 0x12,
  D3DKMDT_VSS_SECAM_G = 0x13,
  D3DKMDT_VSS_SECAM_H = 0x14,
  D3DKMDT_VSS_SECAM_K = 0x15,
  D3DKMDT_VSS_SECAM_K1 = 0x16,
  D3DKMDT_VSS_SECAM_L = 0x17,
  D3DKMDT_VSS_SECAM_L1 = 0x18,
  D3DKMDT_VSS_EIA_861 = 0x19,
  D3DKMDT_VSS_EIA_861A = 0x1A,
  D3DKMDT_VSS_EIA_861B = 0x1B,
  D3DKMDT_VSS_PAL_K = 0x1C,
  D3DKMDT_VSS_PAL_K1 = 0x1D,
  D3DKMDT_VSS_PAL_L = 0x1E,
  D3DKMDT_VSS_PAL_M = 0x1F,
  D3DKMDT_VSS_OTHER = 0xFF,
};

/* 401 */
struct _D3DDDI_RATIONAL
{
  unsigned int Numerator;
  unsigned int Denominator;
};

/* 444 */
struct $4FDCBBA05DCC0CCF44951C2FDAA549A2
{
  __int32 ScanLineOrdering : 3;
  unsigned __int32 VSyncFreqDivider : 6;
  unsigned __int32 Reserved : 23;
};

/* 66 */
enum _D3DDDI_VIDEO_SIGNAL_SCANLINE_ORDERING : __int32
{
  D3DDDI_VSSLO_UNINITIALIZED = 0x0,
  D3DDDI_VSSLO_PROGRESSIVE = 0x1,
  D3DDDI_VSSLO_INTERLACED_UPPERFIELDFIRST = 0x2,
  D3DDDI_VSSLO_INTERLACED_LOWERFIELDFIRST = 0x3,
  D3DDDI_VSSLO_OTHER = 0xFF,
};

/* 445 */
union $B89EB2CE5CF01AE98B53EDBD22D0CF91
{
  $4FDCBBA05DCC0CCF44951C2FDAA549A2 AdditionalSignalInfo;
  _D3DDDI_VIDEO_SIGNAL_SCANLINE_ORDERING ScanLineOrdering;
};

/* 446 */
struct _D3DKMDT_VIDEO_SIGNAL_INFO
{
  _D3DKMDT_VIDEO_SIGNAL_STANDARD VideoStandard;
  _D3DKMDT_2DREGION TotalSize;
  _D3DKMDT_2DREGION ActiveSize;
  _D3DDDI_RATIONAL VSyncFreq;
  _D3DDDI_RATIONAL HSyncFreq;
  unsigned int PixelRate;
  $B89EB2CE5CF01AE98B53EDBD22D0CF91 ___u6;
};

/* 67 */
enum _D3DKMDT_MODE_PREFERENCE : __int32
{
  D3DKMDT_MP_UNINITIALIZED = 0x0,
  D3DKMDT_MP_PREFERRED = 0x1,
  D3DKMDT_MP_NOTPREFERRED = 0x2,
};

/* 457 */
struct _D3DKMDT_VIDPN_TARGET_MODE
{
  unsigned int Id;
  _D3DKMDT_VIDEO_SIGNAL_INFO VideoSignalInfo;
  _D3DKMDT_MODE_PREFERENCE Preference;
};

/* 68 */
enum _D3DKMDT_MONITOR_CAPABILITIES_ORIGIN : __int32
{
  D3DKMDT_MCO_UNINITIALIZED = 0x0,
  D3DKMDT_MCO_DEFAULTMONITORPROFILE = 0x1,
  D3DKMDT_MCO_MONITORDESCRIPTOR = 0x2,
  D3DKMDT_MCO_MONITORDESCRIPTOR_REGISTRYOVERRIDE = 0x3,
  D3DKMDT_MCO_SPECIFICCAP_REGISTRYOVERRIDE = 0x4,
  D3DKMDT_MCO_DRIVER = 0x5,
};

/* 448 */
struct _D3DKMDT_MONITOR_SOURCE_MODE
{
  unsigned int Id;
  _D3DKMDT_VIDEO_SIGNAL_INFO VideoSignalInfo;
  _D3DKMDT_COLOR_BASIS ColorBasis;
  _D3DKMDT_COLOR_COEFF_DYNAMIC_RANGES ColorCoeffDynamicRanges;
  _D3DKMDT_MONITOR_CAPABILITIES_ORIGIN Origin;
  _D3DKMDT_MODE_PREFERENCE Preference;
};

/* 413 */
struct _D3DKMDT_FREQUENCY_RANGE
{
  _D3DDDI_RATIONAL MinVSyncFreq;
  _D3DDDI_RATIONAL MaxVSyncFreq;
  _D3DDDI_RATIONAL MinHSyncFreq;
  _D3DDDI_RATIONAL MaxHSyncFreq;
};

/* 69 */
enum _D3DKMDT_MONITOR_FREQUENCY_RANGE_CONSTRAINT : __int32
{
  D3DKMDT_MFRC_UNINITIALIZED = 0x0,
  D3DKMDT_MFRC_ACTIVESIZE = 0x1,
  D3DKMDT_MFRC_MAXPIXELRATE = 0x2,
};

/* 432 */
union $F4D9C55974A7CC7391E721C95982BBFE
{
  _D3DKMDT_2DREGION ActiveSize;
  unsigned int MaxPixelRate;
};

/* 433 */
struct _D3DKMDT_MONITOR_FREQUENCY_RANGE
{
  _D3DKMDT_MONITOR_CAPABILITIES_ORIGIN Origin;
  _D3DKMDT_FREQUENCY_RANGE RangeLimits;
  _D3DKMDT_MONITOR_FREQUENCY_RANGE_CONSTRAINT ConstraintType;
  $F4D9C55974A7CC7391E721C95982BBFE Constraint;
};

/* 101 */
enum _D3DKMDT_MONITOR_DESCRIPTOR_TYPE : __int32
{
  D3DKMDT_MDT_UNINITIALIZED = 0x0,
  D3DKMDT_MDT_VESA_EDID_V1_BASEBLOCK = 0x1,
  D3DKMDT_MDT_VESA_EDID_V1_BLOCKMAP = 0x2,
  D3DKMDT_MDT_OTHER = 0xFF,
};

/* 425 */
struct _D3DKMDT_MONITOR_DESCRIPTOR
{
  unsigned int Id;
  _D3DKMDT_MONITOR_DESCRIPTOR_TYPE Type;
  unsigned int DataSize;
  void *pData;
  _D3DKMDT_MONITOR_CAPABILITIES_ORIGIN Origin;
};

/* 380 */
struct __declspec(align(8)) _FILE_BASIC_INFORMATION
{
  _LARGE_INTEGER CreationTime;
  _LARGE_INTEGER LastAccessTime;
  _LARGE_INTEGER LastWriteTime;
  _LARGE_INTEGER ChangeTime;
  unsigned int FileAttributes;
};

/* 381 */
struct __declspec(align(4)) _FILE_STANDARD_INFORMATION
{
  _LARGE_INTEGER AllocationSize;
  _LARGE_INTEGER EndOfFile;
  unsigned int NumberOfLinks;
  unsigned __int8 DeletePending;
  unsigned __int8 Directory;
};

/* 382 */
struct __declspec(align(8)) _FILE_NETWORK_OPEN_INFORMATION
{
  _LARGE_INTEGER CreationTime;
  _LARGE_INTEGER LastAccessTime;
  _LARGE_INTEGER LastWriteTime;
  _LARGE_INTEGER ChangeTime;
  _LARGE_INTEGER AllocationSize;
  _LARGE_INTEGER EndOfFile;
  unsigned int FileAttributes;
};

/* 387 */
struct $9959C6898638794B7A02F04E7F980F81
{
  unsigned __int8 ReservedLowFlags;
  unsigned __int8 WaiterPriority;
};

/* 388 */
union $B21EECAE66E3C8EA59A88705AC17C9BD
{
  unsigned __int16 Flag;
  $9959C6898638794B7A02F04E7F980F81 __s1;
};

/* 386 */
struct _KWAIT_CHAIN
{
  _SINGLE_LIST_ENTRY Head;
};

/* 383 */
struct $E71B718CD8428E7C8AA4A0868051E710
{
  unsigned __int32 IoPriorityBoosted : 1;
  unsigned __int32 OwnerReferenced : 1;
  unsigned __int32 IoQoSPriorityBoosted : 1;
  unsigned __int32 OwnerCount : 29;
};

/* 384 */
union $F863C7D7FF38EEADB5362508937BD94D
{
  $E71B718CD8428E7C8AA4A0868051E710 __s0;
  unsigned int TableSize;
};

/* 385 */
struct _OWNER_ENTRY
{
  unsigned int OwnerThread;
  $F863C7D7FF38EEADB5362508937BD94D ___u1;
};

/* 389 */
union $B8D4EB9E6E3D1A926634FE9A5064A2BB
{
  void *Address;
  unsigned int CreatorBackTraceIndex;
};

/* 390 */
struct _ERESOURCE
{
  _LIST_ENTRY SystemResourcesList;
  _OWNER_ENTRY *OwnerTable;
  __int16 ActiveCount;
  $B21EECAE66E3C8EA59A88705AC17C9BD ___u3;
  _KWAIT_CHAIN SharedWaiters;
  _KEVENT *ExclusiveWaiters;
  _OWNER_ENTRY OwnerEntry;
  unsigned int ActiveEntries;
  unsigned int ContentionCount;
  unsigned int NumberOfSharedWaiters;
  unsigned int NumberOfExclusiveWaiters;
  $B8D4EB9E6E3D1A926634FE9A5064A2BB ___u11;
  unsigned int SpinLock;
};

/* 391 */
struct _COMPRESSED_DATA_INFO
{
  unsigned __int16 CompressionFormatAndEngine;
  unsigned __int8 CompressionUnitShift;
  unsigned __int8 ChunkShift;
  unsigned __int8 ClusterShift;
  unsigned __int8 Reserved;
  unsigned __int16 NumberOfChunks;
  unsigned int CompressedChunkSizes[1];
};

/* 280 */
struct _IO_SECURITY_CONTEXT
{
  _SECURITY_QUALITY_OF_SERVICE *SecurityQos;
  _ACCESS_STATE *AccessState;
  unsigned int DesiredAccess;
  unsigned int FullCreateOptions;
};

/* 282 */
struct __declspec(align(8)) _NAMED_PIPE_CREATE_PARAMETERS
{
  unsigned int NamedPipeType;
  unsigned int ReadMode;
  unsigned int CompletionMode;
  unsigned int MaximumInstances;
  unsigned int InboundQuota;
  unsigned int OutboundQuota;
  _LARGE_INTEGER DefaultTimeout;
  unsigned __int8 TimeoutSpecified;
};

/* 284 */
struct __declspec(align(8)) _MAILSLOT_CREATE_PARAMETERS
{
  unsigned int MailslotQuota;
  unsigned int MaximumMessageSize;
  _LARGE_INTEGER ReadTimeout;
  unsigned __int8 TimeoutSpecified;
};

/* 311 */
struct _DEVICE_CAPABILITIES
{
  unsigned __int16 Size;
  unsigned __int16 Version;
  unsigned __int32 DeviceD1 : 1;
  unsigned __int32 DeviceD2 : 1;
  unsigned __int32 LockSupported : 1;
  unsigned __int32 EjectSupported : 1;
  unsigned __int32 Removable : 1;
  unsigned __int32 DockDevice : 1;
  unsigned __int32 UniqueID : 1;
  unsigned __int32 SilentInstall : 1;
  unsigned __int32 RawDeviceOK : 1;
  unsigned __int32 SurpriseRemovalOK : 1;
  unsigned __int32 WakeFromD0 : 1;
  unsigned __int32 WakeFromD1 : 1;
  unsigned __int32 WakeFromD2 : 1;
  unsigned __int32 WakeFromD3 : 1;
  unsigned __int32 HardwareDisabled : 1;
  unsigned __int32 NonDynamic : 1;
  unsigned __int32 WarmEjectSupported : 1;
  unsigned __int32 NoDisplayInUI : 1;
  unsigned __int32 Reserved1 : 1;
  unsigned __int32 WakeFromInterrupt : 1;
  unsigned __int32 Reserved : 12;
  unsigned int Address;
  unsigned int UINumber;
  _DEVICE_POWER_STATE DeviceState[7];
  _SYSTEM_POWER_STATE SystemWake;
  _DEVICE_POWER_STATE DeviceWake;
  unsigned int D1Latency;
  unsigned int D2Latency;
  unsigned int D3Latency;
};

/* 313 */
struct $E759E843C85E8A4CA16E5A8FAF0F79A9
{
  unsigned int Length;
  unsigned int Alignment;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
};

/* 54 */
enum _IRQ_DEVICE_POLICY : __int32
{
  IrqPolicyMachineDefault = 0x0,
  IrqPolicyAllCloseProcessors = 0x1,
  IrqPolicyOneCloseProcessor = 0x2,
  IrqPolicyAllProcessorsInMachine = 0x3,
  IrqPolicySpecifiedProcessors = 0x4,
  IrqPolicySpreadMessagesAcrossAllProcessors = 0x5,
  IrqPolicyAllProcessorsInMachineWhenSteered = 0x6,
};

/* 55 */
enum _IRQ_PRIORITY : __int32
{
  IrqPriorityUndefined = 0x0,
  IrqPriorityLow = 0x1,
  IrqPriorityNormal = 0x2,
  IrqPriorityHigh = 0x3,
};

/* 314 */
struct $4CD2E747CC844A2A2F23599D65DA1080
{
  unsigned int MinimumVector;
  unsigned int MaximumVector;
  _IRQ_DEVICE_POLICY AffinityPolicy;
  _IRQ_PRIORITY PriorityPolicy;
  unsigned int TargetedProcessors;
};

/* 315 */
struct $290D34FD7868E94AFEC0383C08CB9B28
{
  unsigned int MinimumChannel;
  unsigned int MaximumChannel;
};

/* 316 */
struct $66D8BAE383F9288207BB026A64AFF51A
{
  unsigned int RequestLine;
  unsigned int Reserved;
  unsigned int Channel;
  unsigned int TransferWidth;
};

/* 318 */
struct $CF7D779FCF8501AF42168A39ACA3AE76
{
  unsigned int Length;
  unsigned int MinBusNumber;
  unsigned int MaxBusNumber;
  unsigned int Reserved;
};

/* 319 */
struct $5D61DD2957AFDEE7ED67BD2EDF2BEA99
{
  unsigned int Priority;
  unsigned int Reserved1;
  unsigned int Reserved2;
};

/* 320 */
struct $DBEC639E02D4AAA4F51E1F8019536475
{
  unsigned int Length40;
  unsigned int Alignment40;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
};

/* 321 */
struct $D75E85762A9713DC62BB7BE43FF14AE7
{
  unsigned int Length48;
  unsigned int Alignment48;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
};

/* 322 */
struct $5F6327EDDFAEAF7F7A66A3A566051978
{
  unsigned int Length64;
  unsigned int Alignment64;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
};

/* 324 */
union $839CDC2E6D93256DEDF86E51A33F0619
{
  $E759E843C85E8A4CA16E5A8FAF0F79A9 Port;
  $E759E843C85E8A4CA16E5A8FAF0F79A9 Memory;
  $4CD2E747CC844A2A2F23599D65DA1080 Interrupt;
  $290D34FD7868E94AFEC0383C08CB9B28 Dma;
  $66D8BAE383F9288207BB026A64AFF51A DmaV3;
  $E759E843C85E8A4CA16E5A8FAF0F79A9 Generic;
  $B14DB811EDFC1214B110A98B000FF49B DevicePrivate;
  $CF7D779FCF8501AF42168A39ACA3AE76 BusNumber;
  $5D61DD2957AFDEE7ED67BD2EDF2BEA99 ConfigData;
  $DBEC639E02D4AAA4F51E1F8019536475 Memory40;
  $D75E85762A9713DC62BB7BE43FF14AE7 Memory48;
  $5F6327EDDFAEAF7F7A66A3A566051978 Memory64;
  $EDAC022CDA01C704ED739E663C6F28A2 Connection;
};

/* 325 */
struct _IO_RESOURCE_DESCRIPTOR
{
  unsigned __int8 Option;
  unsigned __int8 Type;
  unsigned __int8 ShareDisposition;
  unsigned __int8 Spare1;
  unsigned __int16 Flags;
  unsigned __int16 Spare2;
  $839CDC2E6D93256DEDF86E51A33F0619 u;
};

/* 326 */
struct _IO_RESOURCE_LIST
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned int Count;
  _IO_RESOURCE_DESCRIPTOR Descriptors[1];
};

/* 327 */
struct _IO_RESOURCE_REQUIREMENTS_LIST
{
  unsigned int ListSize;
  _INTERFACE_TYPE InterfaceType;
  unsigned int BusNumber;
  unsigned int SlotNumber;
  unsigned int Reserved[3];
  unsigned int AlternativeLists;
  _IO_RESOURCE_LIST List[1];
};

/* 335 */
struct _POWER_SEQUENCE
{
  unsigned int SequenceD1;
  unsigned int SequenceD2;
  unsigned int SequenceD3;
};

/* 291 */
struct _SECTION_OBJECT_POINTERS
{
  void *DataSectionObject;
  void *SharedCacheMap;
  void *ImageSectionObject;
};

/* 293 */
struct _IO_COMPLETION_CONTEXT
{
  void *Port;
  void *Key;
};

/* 463 */
struct _D3DDDI_GAMMA_RAMP_RGB256x3x16
{
  unsigned __int16 Red[256];
  unsigned __int16 Green[256];
  unsigned __int16 Blue[256];
};

/* 442 */
struct D3DDDI_DXGI_RGB
{
  float Red;
  float Green;
  float Blue;
};

/* 464 */
struct _D3DDDI_GAMMA_RAMP_DXGI_1
{
  D3DDDI_DXGI_RGB Scale;
  D3DDDI_DXGI_RGB Offset;
  D3DDDI_DXGI_RGB GammaCurve[1025];
};

/* 53 */
enum _SECURITY_IMPERSONATION_LEVEL : __int32
{
  SecurityAnonymous = 0x0,
  SecurityIdentification = 0x1,
  SecurityImpersonation = 0x2,
  SecurityDelegation = 0x3,
};

/* 273 */
struct __declspec(align(4)) _SECURITY_QUALITY_OF_SERVICE
{
  unsigned int Length;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  unsigned __int8 ContextTrackingMode;
  unsigned __int8 EffectiveOnly;
};

/* 274 */
struct _SECURITY_SUBJECT_CONTEXT
{
  void *ClientToken;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  void *PrimaryToken;
  void *ProcessAuditId;
};

/* 275 */
struct _LUID_AND_ATTRIBUTES
{
  _LUID Luid;
  unsigned int Attributes;
};

/* 276 */
struct _INITIAL_PRIVILEGE_SET
{
  unsigned int PrivilegeCount;
  unsigned int Control;
  _LUID_AND_ATTRIBUTES Privilege[3];
};

/* 277 */
struct _PRIVILEGE_SET
{
  unsigned int PrivilegeCount;
  unsigned int Control;
  _LUID_AND_ATTRIBUTES Privilege[1];
};

/* 278 */
union $36BFF46EE5225E816D335016F70E466D
{
  _INITIAL_PRIVILEGE_SET InitialPrivilegeSet;
  _PRIVILEGE_SET PrivilegeSet;
};

/* 279 */
struct _ACCESS_STATE
{
  _LUID OperationID;
  unsigned __int8 SecurityEvaluated;
  unsigned __int8 GenerateAudit;
  unsigned __int8 GenerateOnClose;
  unsigned __int8 PrivilegesAllocated;
  unsigned int Flags;
  unsigned int RemainingDesiredAccess;
  unsigned int PreviouslyGrantedAccess;
  unsigned int OriginalDesiredAccess;
  _SECURITY_SUBJECT_CONTEXT SubjectSecurityContext;
  void *SecurityDescriptor;
  void *AuxData;
  $36BFF46EE5225E816D335016F70E466D Privileges;
  unsigned __int8 AuditPrivileges;
  _UNICODE_STRING ObjectName;
  _UNICODE_STRING ObjectTypeName;
};

/* 692 */
struct _SYNTHVID_RESPONSE
{
  void *Buffer;
  unsigned int BufferLength;
  _KEVENT *Event;
  unsigned int BytesRead;
};

/* 690 */
union $D38EED4BDC297EF4E8AB109731647B99
{
  unsigned int Count;
  void *Ptr;
};

/* 691 */
struct _EX_RUNDOWN_REF
{
  $D38EED4BDC297EF4E8AB109731647B99 ___u0;
};

/* 613 */
struct _FAST_MUTEX
{
  int Count;
  void *Owner;
  unsigned int Contention;
  _KEVENT Event;
  unsigned int OldIrql;
};

/* 693 */
struct __declspec(align(2)) _SYNTHVID_LIB_CONTEXT
{
  _DEVICE_OBJECT *TargetPdo;
  _IRP *ReadIrp;
  _MDL *ReadMdl;
  unsigned __int8 ReadBuffer[395];
  _IO_WORKITEM *ReadWorkItem;
  _EX_RUNDOWN_REF ReadRundown;
  unsigned __int8 ReadCancel;
  _FAST_MUTEX ReadCancelLock;
  _IRP *WriteIrp;
  _MDL *WriteMdl;
  unsigned __int8 WriteBuffer[8218];
  _FAST_MUTEX WriteLock;
  _SYNTHVID_RESPONSE *Response;
  _FAST_MUTEX DirtLock;
  SYNTHVID_VERSION HostVersion;
  unsigned int VmGeneration;
  unsigned int BiosReservedInt32;
  unsigned __int64 BiosReservedInt64;
  unsigned __int8 IsDirtNeeded;
  unsigned __int8 IsPointerPositionUpdatesNeeded;
  unsigned __int8 IsPointerShapeUpdatesNeeded;
  unsigned __int8 IsVideoSituationUpdatesNeeded;
  _DXGKRNL_INTERFACE DxgkInterface;
  unsigned __int8 Edid[128];
  unsigned __int8 SupportDynamicEdid;
  unsigned __int8 IsVmconnectWindowOpened;
  unsigned __int8 LockOnDisconnect;
};

/* 934 */
struct $5DCC2531AF8711E736C4006E6621E423
{
  SYNTHVID_POINTER_SHAPE_MESSAGE ShapeInfo;
  unsigned __int8 ExtraPixelData[7];
};

/* 1498 */
typedef SYNTHVID_HANDLE__ *SYNTHVID_HANDLE;

/* 1554 */
typedef _SYNTHVID_LIB_CONTEXT *PSYNTHVID_LIB_CONTEXT;

/* 1558 */
typedef _SYNTHVID_RESPONSE *PSYNTHVID_RESPONSE;
