/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'VMBusHID.sys'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct _DEVICE_OBJECT;
struct _DRIVER_OBJECT;
struct _DRIVER_EXTENSION;
struct _FILE_OBJECT;
struct _FILE_BASIC_INFORMATION;
struct _FILE_STANDARD_INFORMATION;
struct _FILE_NETWORK_OPEN_INFORMATION;
struct _OWNER_ENTRY;
struct _ERESOURCE;
struct _MDL;
struct _IRP;
struct _SECURITY_QUALITY_OF_SERVICE;
struct _ACCESS_STATE;
struct _IO_SECURITY_CONTEXT;
struct _NAMED_PIPE_CREATE_PARAMETERS;
struct _MAILSLOT_CREATE_PARAMETERS;
struct _VPB;
struct _GUID;
struct _INTERFACE;
struct _DEVICE_CAPABILITIES;
struct _IO_RESOURCE_REQUIREMENTS_LIST;
struct _POWER_SEQUENCE;
struct _CM_RESOURCE_LIST;
struct _IO_STACK_LOCATION;
struct _FAST_IO_DISPATCH;
struct _KDPC;
struct _DEVOBJ_EXTENSION;
struct _SECTION_OBJECT_POINTERS;
struct _IO_COMPLETION_CONTEXT;
struct _HID_DESCRIPTOR;
struct IO_PACKAGE;
struct _DEVICE_EXTENSION;

/* 19 */
enum SYNTHHID_MESSAGE_TYPE : __int32
{
  SynthHidProtocolRequest = 0x0,
  SynthHidProtocolResponse = 0x1,
  SynthHidInitialDeviceInfo = 0x2,
  SynthHidInitialDeviceInfoAck = 0x3,
  SynthHidInputReport = 0x4,
  SynthHidMax = 0x5,
};

/* 196 */
struct SYNTHHID_MESSAGE_HEADER
{
  SYNTHHID_MESSAGE_TYPE Type;
  unsigned int Size;
};

/* 197 */
struct __unaligned __declspec(align(1)) SYNTHHID_MESSAGE
{
  SYNTHHID_MESSAGE_HEADER Header;
  unsigned __int8 Data[1];
};

/* 191 */
struct _HID_DEVICE_ATTRIBUTES
{
  unsigned int Size;
  unsigned __int16 VendorID;
  unsigned __int16 ProductID;
  unsigned __int16 VersionNumber;
  unsigned __int16 Reserved[11];
};

/* 235 */
struct __unaligned __declspec(align(1)) SYNTHHID_DEVICE_INFO
{
  SYNTHHID_MESSAGE_HEADER Header;
  _HID_DEVICE_ATTRIBUTES HidDeviceAttributes;
  unsigned __int8 HidDescriptorInformation[1];
};

/* 236 */
struct $B7B8EEE8C77511020846986DE4BC0E47
{
  unsigned __int16 Minor;
  unsigned __int16 Major;
};

/* 237 */
union SYNTHHID_VERSION
{
  $B7B8EEE8C77511020846986DE4BC0E47 __s0;
  unsigned int AsDWord;
};

/* 238 */
struct SYNTHHID_PROTOCOL_REQUEST
{
  SYNTHHID_MESSAGE_HEADER Header;
  SYNTHHID_VERSION VersionRequested;
};

/* 239 */
struct __unaligned __declspec(align(1)) SYNTHHID_PROTOCOL_RESPONSE
{
  SYNTHHID_MESSAGE_HEADER Header;
  SYNTHHID_VERSION VersionRequested;
  unsigned __int8 Approved;
};

/* 240 */
struct __unaligned __declspec(align(1)) SYNTHHID_DEVICE_INFO_ACK
{
  SYNTHHID_MESSAGE_HEADER Header;
  unsigned __int8 Reserved;
};

/* 265 */
typedef int (__stdcall *MESSAGE_HANDLER)(_DEVICE_EXTENSION *, SYNTHHID_MESSAGE *);

/* 91 */
struct $08481D05807C14C022C64127DBCB0DC5
{
  unsigned __int8 Type;
  unsigned __int8 Signalling;
  unsigned __int8 Size;
  unsigned __int8 Reserved1;
};

/* 92 */
struct $BDD1DEEA9085FB2031C94E38C028AF9F
{
  unsigned __int8 TimerType;
  unsigned __int8 TimerControlFlags;
  unsigned __int8 Hand;
  unsigned __int8 TimerMiscFlags;
};

/* 93 */
struct $1A64267CB6701B751C40AA7938D55A2C
{
  unsigned __int8 Timer2Type;
  unsigned __int8 Absolute : 1;
  unsigned __int8 Wake : 1;
  unsigned __int8 EncodedTolerableDelay : 6;
  unsigned __int8 Timer2Reserved1;
  unsigned __int8 Index : 1;
  unsigned __int8 Processor : 5;
  unsigned __int8 Inserted : 1;
  unsigned __int8 Expired : 1;
};

/* 94 */
struct $DC5C26BDF4D684F12F3A5D4531D3B949
{
  unsigned __int8 QueueType;
  unsigned __int8 Timer2Flags;
  unsigned __int8 QueueSize;
  unsigned __int8 Timer2Reserved2;
};

/* 95 */
struct $82359CCE575330AAB08AF0894BC28AE0
{
  unsigned __int8 ThreadType;
  unsigned __int8 Timer2Inserted : 1;
  unsigned __int8 Timer2Expiring : 1;
  unsigned __int8 Timer2CancelPending : 1;
  unsigned __int8 Timer2SetPending : 1;
  unsigned __int8 Timer2Running : 1;
  unsigned __int8 Timer2Disabled : 1;
  unsigned __int8 Timer2ReservedFlags : 2;
  unsigned __int8 ThreadControlFlags;
  unsigned __int8 QueueReserved;
};

/* 96 */
struct $9300EC2846D44244344338BB8331DF4E
{
  unsigned __int8 MutantType;
  unsigned __int8 QueueControlFlags;
  unsigned __int8 CycleProfiling : 1;
  unsigned __int8 CounterProfiling : 1;
  unsigned __int8 GroupScheduling : 1;
  unsigned __int8 AffinitySet : 1;
  unsigned __int8 Tagged : 1;
  unsigned __int8 EnergyProfiling : 1;
  unsigned __int8 Instrumented : 1;
  unsigned __int8 ThreadReservedControlFlags : 1;
  unsigned __int8 DebugActive;
};

/* 97 */
struct $311232CAD4ECFA502922D62D223D90C0
{
  _BYTE gap0;
  unsigned __int8 Abandoned : 1;
  unsigned __int8 DisableIncrement : 1;
  unsigned __int8 QueueReservedControlFlags : 6;
  unsigned __int8 DpcActive;
  unsigned __int8 MutantReserved;
};

/* 98 */
struct $6287A180EBF0351F83293B36E60E22FF
{
  _BYTE gap0;
  unsigned __int8 ThreadReserved;
};

/* 99 */
struct $4B94A638C9572C40F7312179A2B431F6
{
  _BYTE gap0;
  unsigned __int8 MutantSize;
};

/* 100 */
union $F797C0B69889C8B586426D66CB6B55C7
{
  volatile int Lock;
  int LockNV;
  $08481D05807C14C022C64127DBCB0DC5 __s2;
  $BDD1DEEA9085FB2031C94E38C028AF9F __s3;
  $1A64267CB6701B751C40AA7938D55A2C __s4;
  $DC5C26BDF4D684F12F3A5D4531D3B949 __s5;
  $82359CCE575330AAB08AF0894BC28AE0 __s6;
  $9300EC2846D44244344338BB8331DF4E __s7;
  $311232CAD4ECFA502922D62D223D90C0 __s8;
  $6287A180EBF0351F83293B36E60E22FF __s9;
  $4B94A638C9572C40F7312179A2B431F6 __s10;
};

/* 85 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/* 101 */
struct _DISPATCHER_HEADER
{
  $F797C0B69889C8B586426D66CB6B55C7 ___u0;
  int SignalState;
  _LIST_ENTRY WaitListHead;
};

/* 102 */
struct _KEVENT
{
  _DISPATCHER_HEADER Header;
};

/* 187 */
struct _IO_REMOVE_LOCK_COMMON_BLOCK
{
  unsigned __int8 Removed;
  unsigned __int8 Reserved[3];
  int IoCount;
  _KEVENT RemoveEvent;
};

/* 188 */
struct _IO_REMOVE_LOCK
{
  _IO_REMOVE_LOCK_COMMON_BLOCK Common;
};

/* 3 */
enum _DEVICE_PNP_STATE : __int32
{
  NotStarted = 0x0,
  Started = 0x1,
  StopPending = 0x2,
  Stopped = 0x3,
  RemovePending = 0x4,
  SurpriseRemovePending = 0x5,
  Deleted = 0x6,
};

/* 193 */
struct _IO_CSQ
{
  unsigned int Type;
  void (__stdcall *CsqInsertIrp)(_IO_CSQ *, _IRP *);
  void (__stdcall *CsqRemoveIrp)(_IO_CSQ *, _IRP *);
  _IRP *(__stdcall *CsqPeekNextIrp)(_IO_CSQ *, _IRP *, void *);
  void (__stdcall *CsqAcquireLock)(_IO_CSQ *, unsigned __int8 *);
  void (__stdcall *CsqReleaseLock)(_IO_CSQ *, unsigned __int8);
  void (__stdcall *CsqCompleteCanceledIrp)(_IO_CSQ *, _IRP *);
  void *ReservePointer;
};

/* 194 */
struct IRP_QUEUE
{
  _IO_CSQ Csq;
  _LIST_ENTRY List;
  unsigned int Lock;
};

/* 195 */
struct _DEVICE_EXTENSION
{
  _DEVICE_OBJECT *FunctionalDeviceObject;
  _IO_REMOVE_LOCK RemoveLock;
  unsigned int OperationLock;
  _DEVICE_PNP_STATE DevicePnPState;
  _DEVICE_PNP_STATE PreviousPnPState;
  _KEVENT ProtocolNegotiationComplete;
  _KEVENT DeviceStaticInformationPopulated;
  unsigned __int8 DeviceStarted;
  unsigned __int8 ProtocolNegotiationSuccessful;
  _HID_DESCRIPTOR *HidDescriptor;
  unsigned __int8 *ReportDescriptor;
  _HID_DEVICE_ATTRIBUTES DeviceAttributes;
  IO_PACKAGE *VMBusReadPackage;
  _LIST_ENTRY VMBusWritePackageList;
  IRP_QUEUE ReadQueue;
  IRP_QUEUE TransactQueue;
  IRP_QUEUE SendQueue;
  unsigned int InputReportBufferReadIndex;
  unsigned int InputReportBufferWriteIndex;
  void *InputReportBuffer[100];
  unsigned int InputReportBufferSize[100];
};

/* 113 */
struct __declspec(align(4)) _KDEVICE_QUEUE_ENTRY
{
  _LIST_ENTRY DeviceListEntry;
  unsigned int SortKey;
  unsigned __int8 Inserted;
};

/* 179 */
struct $C4C91DE3A8B34C6B2B1E49FF1BF43344
{
  _LIST_ENTRY DmaWaitEntry;
  unsigned int NumberOfChannels;
  unsigned __int32 SyncCallback : 1;
  unsigned __int32 DmaContext : 1;
  unsigned __int32 ZeroMapRegisters : 1;
  unsigned __int32 Reserved : 29;
};

/* 180 */
union $7441001D7A7F829E427F4D5AB4A28701
{
  _KDEVICE_QUEUE_ENTRY WaitQueueEntry;
  $C4C91DE3A8B34C6B2B1E49FF1BF43344 __s1;
};

/* 30 */
enum _IO_ALLOCATION_ACTION : __int32
{
  KeepObject = 0x1,
  DeallocateObject = 0x2,
  DeallocateObjectKeepRegisters = 0x3,
};

/* 181 */
struct _WAIT_CONTEXT_BLOCK
{
  $7441001D7A7F829E427F4D5AB4A28701 ___u0;
  _IO_ALLOCATION_ACTION (__stdcall *DeviceRoutine)(_DEVICE_OBJECT *, _IRP *, void *, void *);
  void *DeviceContext;
  unsigned int NumberOfMapRegisters;
  void *DeviceObject;
  void *CurrentIrp;
  _KDPC *BufferChainingDpc;
};

/* 182 */
union $3C7CE316C73826E54337670EE8BA8AB7
{
  _LIST_ENTRY ListEntry;
  _WAIT_CONTEXT_BLOCK Wcb;
};

/* 183 */
struct __declspec(align(4)) _KDEVICE_QUEUE
{
  __int16 Type;
  __int16 Size;
  _LIST_ENTRY DeviceListHead;
  unsigned int Lock;
  unsigned __int8 Busy;
};

/* 177 */
struct $82623AFB470F8517B6D8F9E43441C7E1
{
  unsigned __int8 Type;
  unsigned __int8 Importance;
  volatile unsigned __int16 Number;
};

/* 178 */
union $83EFA0C6D15675566B3E8C0E24111F88
{
  unsigned int TargetInfoAsUlong;
  $82623AFB470F8517B6D8F9E43441C7E1 __s1;
};

/* 89 */
struct _SINGLE_LIST_ENTRY
{
  _SINGLE_LIST_ENTRY *Next;
};

/* 176 */
struct _KDPC
{
  $83EFA0C6D15675566B3E8C0E24111F88 ___u0;
  _SINGLE_LIST_ENTRY DpcListEntry;
  unsigned int ProcessorHistory;
  void (__stdcall *DeferredRoutine)(_KDPC *, void *, void *, void *);
  void *DeferredContext;
  void *SystemArgument1;
  void *SystemArgument2;
  void *DpcData;
};

/* 75 */
struct _DEVICE_OBJECT
{
  __int16 Type;
  unsigned __int16 Size;
  int ReferenceCount;
  _DRIVER_OBJECT *DriverObject;
  _DEVICE_OBJECT *NextDevice;
  _DEVICE_OBJECT *AttachedDevice;
  _IRP *CurrentIrp;
  struct _IO_TIMER *Timer;
  unsigned int Flags;
  unsigned int Characteristics;
  _VPB *Vpb;
  void *DeviceExtension;
  unsigned int DeviceType;
  char StackSize;
  $3C7CE316C73826E54337670EE8BA8AB7 Queue;
  unsigned int AlignmentRequirement;
  _KDEVICE_QUEUE DeviceQueue;
  _KDPC Dpc;
  unsigned int ActiveThreadCount;
  void *SecurityDescriptor;
  _KEVENT DeviceLock;
  unsigned __int16 SectorSize;
  unsigned __int16 Spare1;
  _DEVOBJ_EXTENSION *DeviceObjectExtension;
  void *Reserved;
};

/* 189 */
struct __unaligned __declspec(align(1)) _HID_DESCRIPTOR_DESC_LIST
{
  unsigned __int8 bReportType;
  unsigned __int16 wReportLength;
};

/* 190 */
struct __unaligned __declspec(align(1)) _HID_DESCRIPTOR
{
  unsigned __int8 bLength;
  unsigned __int8 bDescriptorType;
  unsigned __int16 bcdHID;
  unsigned __int8 bCountry;
  unsigned __int8 bNumDescriptors;
  _HID_DESCRIPTOR_DESC_LIST DescriptorList[1];
};

/* 192 */
struct __declspec(align(4)) IO_PACKAGE
{
  _LIST_ENTRY ListEntry;
  _IRP *Irp;
  _MDL *Mdl;
  int AsyncRead;
  unsigned __int8 Data[1];
};

/* 109 */
union $AA4A74729E9E0BB8F5BE959C141E2C91
{
  _IRP *MasterIrp;
  int IrpCount;
  void *SystemBuffer;
};

/* 80 */
union $250F5FE22B4503EFD7D48C86CC7F2167
{
  int Status;
  void *Pointer;
};

/* 81 */
struct _IO_STATUS_BLOCK
{
  $250F5FE22B4503EFD7D48C86CC7F2167 ___u0;
  unsigned int Information;
};

/* 110 */
union $69E1ABC2A576BAF91E0115FBA7473436
{
  void (__stdcall *UserApcRoutine)(void *, _IO_STATUS_BLOCK *, unsigned int);
  void *IssuingProcess;
};

/* 111 */
struct $CD0CA6A4C864BB90667B4036A34D9974
{
  $69E1ABC2A576BAF91E0115FBA7473436 ___u0;
  void *UserApcContext;
};

/* 37 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/* 38 */
union _LARGE_INTEGER
{
  $FAF74743FBE1C8632047CFB668F7028A __s0;
  $FAF74743FBE1C8632047CFB668F7028A u;
  __int64 QuadPart;
};

/* 112 */
union $36EC0781F34BF559213A6C18A8260A1E
{
  $CD0CA6A4C864BB90667B4036A34D9974 AsynchronousParameters;
  _LARGE_INTEGER AllocationSize;
};

/* 170 */
union $450198DEAC52F76DFF70C139FBFB03F2
{
  _KDEVICE_QUEUE_ENTRY DeviceQueueEntry;
  void *DriverContext[4];
};

/* 171 */
union $D322CB2FA51704EF39B3629FCB2F5558
{
  _IO_STACK_LOCATION *CurrentStackLocation;
  unsigned int PacketType;
};

/* 172 */
struct $B731BC15021BD473CAC8019FEDF0B2CA
{
  $450198DEAC52F76DFF70C139FBFB03F2 ___u0;
  struct _ETHREAD *Thread;
  char *AuxiliaryBuffer;
  _LIST_ENTRY ListEntry;
  $D322CB2FA51704EF39B3629FCB2F5558 ___u4;
  _FILE_OBJECT *OriginalFileObject;
};

/* 173 */
struct __declspec(align(2)) _KAPC
{
  unsigned __int8 Type;
  unsigned __int8 SpareByte0;
  unsigned __int8 Size;
  unsigned __int8 SpareByte1;
  unsigned int SpareLong0;
  struct _KTHREAD *Thread;
  _LIST_ENTRY ApcListEntry;
  void *Reserved[3];
  void *NormalContext;
  void *SystemArgument1;
  void *SystemArgument2;
  char ApcStateIndex;
  char ApcMode;
  unsigned __int8 Inserted;
};

/* 174 */
union $401DF74DC656AB1903B06DDFCA191637
{
  $B731BC15021BD473CAC8019FEDF0B2CA Overlay;
  _KAPC Apc;
  void *CompletionKey;
};

/* 108 */
struct _IRP
{
  __int16 Type;
  unsigned __int16 Size;
  _MDL *MdlAddress;
  unsigned int Flags;
  $AA4A74729E9E0BB8F5BE959C141E2C91 AssociatedIrp;
  _LIST_ENTRY ThreadListEntry;
  _IO_STATUS_BLOCK IoStatus;
  char RequestorMode;
  unsigned __int8 PendingReturned;
  char StackCount;
  char CurrentLocation;
  unsigned __int8 Cancel;
  unsigned __int8 CancelIrql;
  char ApcEnvironment;
  unsigned __int8 AllocationFlags;
  _IO_STATUS_BLOCK *UserIosb;
  _KEVENT *UserEvent;
  $36EC0781F34BF559213A6C18A8260A1E Overlay;
  void (__stdcall *CancelRoutine)(_DEVICE_OBJECT *, _IRP *);
  void *UserBuffer;
  $401DF74DC656AB1903B06DDFCA191637 Tail;
};

/* 248 */
typedef unsigned __int16 wchar_t;

/* 77 */
struct _UNICODE_STRING
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  wchar_t *Buffer;
};

/* 76 */
struct _DRIVER_OBJECT
{
  __int16 Type;
  __int16 Size;
  _DEVICE_OBJECT *DeviceObject;
  unsigned int Flags;
  void *DriverStart;
  unsigned int DriverSize;
  void *DriverSection;
  _DRIVER_EXTENSION *DriverExtension;
  _UNICODE_STRING DriverName;
  _UNICODE_STRING *HardwareDatabase;
  _FAST_IO_DISPATCH *FastIoDispatch;
  int (__stdcall *DriverInit)(_DRIVER_OBJECT *, _UNICODE_STRING *);
  void (__stdcall *DriverStartIo)(_DEVICE_OBJECT *, _IRP *);
  void (__stdcall *DriverUnload)(_DRIVER_OBJECT *);
  int (__stdcall *MajorFunction[28])(_DEVICE_OBJECT *, _IRP *);
};

/* 138 */
struct _VPB
{
  __int16 Type;
  __int16 Size;
  unsigned __int16 Flags;
  unsigned __int16 VolumeLabelLength;
  _DEVICE_OBJECT *DeviceObject;
  _DEVICE_OBJECT *RealDevice;
  unsigned int SerialNumber;
  unsigned int ReferenceCount;
  wchar_t VolumeLabel[32];
};

/* 184 */
struct _DEVOBJ_EXTENSION
{
  __int16 Type;
  unsigned __int16 Size;
  _DEVICE_OBJECT *DeviceObject;
  unsigned int PowerFlags;
  struct _DEVICE_OBJECT_POWER_EXTENSION *Dope;
  unsigned int ExtensionFlags;
  void *DeviceNode;
  _DEVICE_OBJECT *AttachedTo;
  int StartIoCount;
  int StartIoKey;
  unsigned int StartIoFlags;
  _VPB *Vpb;
  void *DependencyNode;
  void *InterruptContext;
  void *VerifierContext;
};

/* 107 */
struct _MDL
{
  _MDL *Next;
  __int16 Size;
  __int16 MdlFlags;
  struct _EPROCESS *Process;
  void *MappedSystemVa;
  void *StartVa;
  unsigned int ByteCount;
  unsigned int ByteOffset;
};

/* 118 */
struct $A476682A0AAF6953579BAC2DB57D21B2
{
  _IO_SECURITY_CONTEXT *SecurityContext;
  unsigned int Options;
  unsigned __int16 FileAttributes;
  unsigned __int16 ShareAccess;
  unsigned int EaLength;
};

/* 120 */
struct $7B84ACCF8AE7E36B80220C180D26A609
{
  _IO_SECURITY_CONTEXT *SecurityContext;
  unsigned int Options;
  unsigned __int16 Reserved;
  unsigned __int16 ShareAccess;
  _NAMED_PIPE_CREATE_PARAMETERS *Parameters;
};

/* 122 */
struct $57852BD0E8DE1750EFC5E77E61C1C213
{
  _IO_SECURITY_CONTEXT *SecurityContext;
  unsigned int Options;
  unsigned __int16 Reserved;
  unsigned __int16 ShareAccess;
  _MAILSLOT_CREATE_PARAMETERS *Parameters;
};

/* 123 */
struct $2CF0ADD501ED40EA238CE672E9983A9B
{
  unsigned int Length;
  unsigned int Key;
  _LARGE_INTEGER ByteOffset;
};

/* 20 */
enum _FILE_INFORMATION_CLASS : __int32
{
  FileDirectoryInformation = 0x1,
  FileFullDirectoryInformation = 0x2,
  FileBothDirectoryInformation = 0x3,
  FileBasicInformation = 0x4,
  FileStandardInformation = 0x5,
  FileInternalInformation = 0x6,
  FileEaInformation = 0x7,
  FileAccessInformation = 0x8,
  FileNameInformation = 0x9,
  FileRenameInformation = 0xA,
  FileLinkInformation = 0xB,
  FileNamesInformation = 0xC,
  FileDispositionInformation = 0xD,
  FilePositionInformation = 0xE,
  FileFullEaInformation = 0xF,
  FileModeInformation = 0x10,
  FileAlignmentInformation = 0x11,
  FileAllInformation = 0x12,
  FileAllocationInformation = 0x13,
  FileEndOfFileInformation = 0x14,
  FileAlternateNameInformation = 0x15,
  FileStreamInformation = 0x16,
  FilePipeInformation = 0x17,
  FilePipeLocalInformation = 0x18,
  FilePipeRemoteInformation = 0x19,
  FileMailslotQueryInformation = 0x1A,
  FileMailslotSetInformation = 0x1B,
  FileCompressionInformation = 0x1C,
  FileObjectIdInformation = 0x1D,
  FileCompletionInformation = 0x1E,
  FileMoveClusterInformation = 0x1F,
  FileQuotaInformation = 0x20,
  FileReparsePointInformation = 0x21,
  FileNetworkOpenInformation = 0x22,
  FileAttributeTagInformation = 0x23,
  FileTrackingInformation = 0x24,
  FileIdBothDirectoryInformation = 0x25,
  FileIdFullDirectoryInformation = 0x26,
  FileValidDataLengthInformation = 0x27,
  FileShortNameInformation = 0x28,
  FileIoCompletionNotificationInformation = 0x29,
  FileIoStatusBlockRangeInformation = 0x2A,
  FileIoPriorityHintInformation = 0x2B,
  FileSfioReserveInformation = 0x2C,
  FileSfioVolumeInformation = 0x2D,
  FileHardLinkInformation = 0x2E,
  FileProcessIdsUsingFileInformation = 0x2F,
  FileNormalizedNameInformation = 0x30,
  FileNetworkPhysicalNameInformation = 0x31,
  FileIdGlobalTxDirectoryInformation = 0x32,
  FileIsRemoteDeviceInformation = 0x33,
  FileUnusedInformation = 0x34,
  FileNumaNodeInformation = 0x35,
  FileStandardLinkInformation = 0x36,
  FileRemoteProtocolInformation = 0x37,
  FileRenameInformationBypassAccessCheck = 0x38,
  FileLinkInformationBypassAccessCheck = 0x39,
  FileVolumeNameInformation = 0x3A,
  FileIdInformation = 0x3B,
  FileIdExtdDirectoryInformation = 0x3C,
  FileReplaceCompletionInformation = 0x3D,
  FileHardLinkFullIdInformation = 0x3E,
  FileIdExtdBothDirectoryInformation = 0x3F,
  FileMaximumInformation = 0x40,
};

/* 124 */
struct $16A6F5DDB0DC612A5E38FDDA4CC6F20D
{
  unsigned int Length;
  _UNICODE_STRING *FileName;
  _FILE_INFORMATION_CLASS FileInformationClass;
  unsigned int FileIndex;
};

/* 125 */
struct $50A7D1BFBD4B9BBEBCBBE3D92FEB6A61
{
  unsigned int Length;
  unsigned int CompletionFilter;
};

/* 126 */
struct $D16A19456C1B1AC9EC8F4ABE9B9AD00F
{
  unsigned int Length;
  _FILE_INFORMATION_CLASS FileInformationClass;
};

/* 127 */
struct $BBD6C80A82148A7CAD5B218A5A41C1D9
{
  unsigned __int8 ReplaceIfExists;
  unsigned __int8 AdvanceOnly;
};

/* 128 */
union $F45A85427F24DA7DE74216551F5FAA7E
{
  $BBD6C80A82148A7CAD5B218A5A41C1D9 __s0;
  unsigned int ClusterCount;
  void *DeleteHandle;
};

/* 129 */
struct $617AB6E68BF7161D7E01376DC36474BE
{
  unsigned int Length;
  _FILE_INFORMATION_CLASS FileInformationClass;
  _FILE_OBJECT *FileObject;
  $F45A85427F24DA7DE74216551F5FAA7E ___u3;
};

/* 130 */
struct $43049A1C9CD1076EE2F76BA56B9556D6
{
  unsigned int Length;
  void *EaList;
  unsigned int EaListLength;
  unsigned int EaIndex;
};

/* 131 */
struct $44CAF4394294FD1AA9144BF9A47D2B76
{
  unsigned int Length;
};

/* 21 */
enum _FSINFOCLASS : __int32
{
  FileFsVolumeInformation = 0x1,
  FileFsLabelInformation = 0x2,
  FileFsSizeInformation = 0x3,
  FileFsDeviceInformation = 0x4,
  FileFsAttributeInformation = 0x5,
  FileFsControlInformation = 0x6,
  FileFsFullSizeInformation = 0x7,
  FileFsObjectIdInformation = 0x8,
  FileFsDriverPathInformation = 0x9,
  FileFsVolumeFlagsInformation = 0xA,
  FileFsSectorSizeInformation = 0xB,
  FileFsDataCopyInformation = 0xC,
  FileFsMetadataSizeInformation = 0xD,
  FileFsMaximumInformation = 0xE,
};

/* 132 */
struct $3487BD3529099224838DA8FD247EF6A4
{
  unsigned int Length;
  _FSINFOCLASS FsInformationClass;
};

/* 133 */
struct $1452ECD7C6E5AB3C058EED8909EEC64B
{
  unsigned int OutputBufferLength;
  unsigned int InputBufferLength;
  unsigned int FsControlCode;
  void *Type3InputBuffer;
};

/* 134 */
struct $37A855F6110A488471994B1F725D33AB
{
  _LARGE_INTEGER *Length;
  unsigned int Key;
  _LARGE_INTEGER ByteOffset;
};

/* 135 */
struct $343716E60DEC8CEA3C236115305CA9A5
{
  unsigned int OutputBufferLength;
  unsigned int InputBufferLength;
  unsigned int IoControlCode;
  void *Type3InputBuffer;
};

/* 136 */
struct $79FAFD50642EF9FCAC6F48CCDD5826D7
{
  unsigned int SecurityInformation;
  unsigned int Length;
};

/* 137 */
struct $29E784017BF8D630C3CED492840B3F1E
{
  unsigned int SecurityInformation;
  void *SecurityDescriptor;
};

/* 139 */
struct $6CFE546ECC4A7D8BB192E69F81438C34
{
  _VPB *Vpb;
  _DEVICE_OBJECT *DeviceObject;
};

/* 140 */
struct $B2B4984C7002DD41520623255E2F9497
{
  struct _SCSI_REQUEST_BLOCK *Srb;
};

/* 141 */
struct $F26D5252B9CB0364A89F29DE5B8870AE
{
  unsigned int Length;
  void *StartSid;
  struct _FILE_GET_QUOTA_INFORMATION *SidList;
  unsigned int SidListLength;
};

/* 22 */
enum _DEVICE_RELATION_TYPE : __int32
{
  BusRelations = 0x0,
  EjectionRelations = 0x1,
  PowerRelations = 0x2,
  RemovalRelations = 0x3,
  TargetDeviceRelation = 0x4,
  SingleBusRelations = 0x5,
  TransportRelations = 0x6,
};

/* 142 */
struct $EE0790C36CAC2F21EC2CCB557DCBFB77
{
  _DEVICE_RELATION_TYPE Type;
};

/* 145 */
struct $401B93C41DDFFE73A60ECA83EE4FF13A
{
  const _GUID *InterfaceType;
  unsigned __int16 Size;
  unsigned __int16 Version;
  _INTERFACE *Interface;
  void *InterfaceSpecificData;
};

/* 147 */
struct $77A8209AC58F8C209F747B175E1F9FD9
{
  _DEVICE_CAPABILITIES *Capabilities;
};

/* 149 */
struct $7D1C844E4BE8AD8C239B108B63BD8F32
{
  _IO_RESOURCE_REQUIREMENTS_LIST *IoResourceRequirementList;
};

/* 150 */
struct $5E4425892CB91929A7D567B5DA0A3F92
{
  unsigned int WhichSpace;
  void *Buffer;
  unsigned int Offset;
  unsigned int Length;
};

/* 151 */
struct $B367FCCFB95D7087158A479FE9C2D0D7
{
  unsigned __int8 Lock;
};

/* 23 */
enum BUS_QUERY_ID_TYPE : __int32
{
  BusQueryDeviceID = 0x0,
  BusQueryHardwareIDs = 0x1,
  BusQueryCompatibleIDs = 0x2,
  BusQueryInstanceID = 0x3,
  BusQueryDeviceSerialNumber = 0x4,
  BusQueryContainerID = 0x5,
};

/* 152 */
struct $601B1113AB7FC7657820F270488AC98A
{
  BUS_QUERY_ID_TYPE IdType;
};

/* 24 */
enum DEVICE_TEXT_TYPE : __int32
{
  DeviceTextDescription = 0x0,
  DeviceTextLocationInformation = 0x1,
};

/* 153 */
struct $961933DABD945B589BC50818F8708506
{
  DEVICE_TEXT_TYPE DeviceTextType;
  unsigned int LocaleId;
};

/* 25 */
enum _DEVICE_USAGE_NOTIFICATION_TYPE : __int32
{
  DeviceUsageTypeUndefined = 0x0,
  DeviceUsageTypePaging = 0x1,
  DeviceUsageTypeHibernation = 0x2,
  DeviceUsageTypeDumpFile = 0x3,
  DeviceUsageTypeBoot = 0x4,
  DeviceUsageTypePostDisplay = 0x5,
};

/* 154 */
struct $72E834424C3F46653AFFD71E6E62F299
{
  unsigned __int8 InPath;
  unsigned __int8 Reserved[3];
  _DEVICE_USAGE_NOTIFICATION_TYPE Type;
};

/* 26 */
enum _SYSTEM_POWER_STATE : __int32
{
  PowerSystemUnspecified = 0x0,
  PowerSystemWorking = 0x1,
  PowerSystemSleeping1 = 0x2,
  PowerSystemSleeping2 = 0x3,
  PowerSystemSleeping3 = 0x4,
  PowerSystemHibernate = 0x5,
  PowerSystemShutdown = 0x6,
  PowerSystemMaximum = 0x7,
};

/* 155 */
struct $2B0B0D3E11633998EBABFB54C7CDAFEA
{
  _SYSTEM_POWER_STATE PowerState;
};

/* 157 */
struct $24D1EC83F8798647B293E2034C1AF26A
{
  _POWER_SEQUENCE *PowerSequence;
};

/* 158 */
struct $76514DB155979F88E47E6F460A9859AB
{
  unsigned __int32 Reserved1 : 8;
  unsigned __int32 TargetSystemState : 4;
  unsigned __int32 EffectiveSystemState : 4;
  unsigned __int32 CurrentSystemState : 4;
  unsigned __int32 IgnoreHibernationPath : 1;
  unsigned __int32 PseudoTransition : 1;
  unsigned __int32 Reserved2 : 10;
};

/* 159 */
union $A3143996A8991BAF52111FB066E09E35
{
  $76514DB155979F88E47E6F460A9859AB __s0;
  unsigned int ContextAsUlong;
};

/* 160 */
struct _SYSTEM_POWER_STATE_CONTEXT
{
  $A3143996A8991BAF52111FB066E09E35 ___u0;
};

/* 162 */
union $D5ED6B3B1EAC8A62F8E1C11875D24DAC
{
  unsigned int SystemContext;
  _SYSTEM_POWER_STATE_CONTEXT SystemPowerStateContext;
};

/* 27 */
enum _POWER_STATE_TYPE : __int32
{
  SystemPowerState = 0x0,
  DevicePowerState = 0x1,
};

/* 4 */
enum _DEVICE_POWER_STATE : __int32
{
  PowerDeviceUnspecified = 0x0,
  PowerDeviceD0 = 0x1,
  PowerDeviceD1 = 0x2,
  PowerDeviceD2 = 0x3,
  PowerDeviceD3 = 0x4,
  PowerDeviceMaximum = 0x5,
};

/* 161 */
union _POWER_STATE
{
  _SYSTEM_POWER_STATE SystemState;
  _DEVICE_POWER_STATE DeviceState;
};

/* 28 */
enum POWER_ACTION : __int32
{
  PowerActionNone = 0x0,
  PowerActionReserved = 0x1,
  PowerActionSleep = 0x2,
  PowerActionHibernate = 0x3,
  PowerActionShutdown = 0x4,
  PowerActionShutdownReset = 0x5,
  PowerActionShutdownOff = 0x6,
  PowerActionWarmEject = 0x7,
  PowerActionDisplayOff = 0x8,
};

/* 163 */
struct $D0BE11DD3277EF1DA7EB3BEC27659A1F
{
  $D5ED6B3B1EAC8A62F8E1C11875D24DAC ___u0;
  _POWER_STATE_TYPE Type;
  _POWER_STATE State;
  POWER_ACTION ShutdownType;
};

/* 165 */
struct $89287817551FEC566BDF793EBCFF438B
{
  _CM_RESOURCE_LIST *AllocatedResources;
  _CM_RESOURCE_LIST *AllocatedResourcesTranslated;
};

/* 166 */
struct $27D1A893733DBE62F2FCC36974CB79FA
{
  unsigned int ProviderId;
  void *DataPath;
  unsigned int BufferSize;
  void *Buffer;
};

/* 167 */
struct $228F32E73A128818A25FF1959272C294
{
  void *Argument1;
  void *Argument2;
  void *Argument3;
  void *Argument4;
};

/* 168 */
union $140154F0077D8156CAB9B63FCA665CCD
{
  $A476682A0AAF6953579BAC2DB57D21B2 Create;
  $7B84ACCF8AE7E36B80220C180D26A609 CreatePipe;
  $57852BD0E8DE1750EFC5E77E61C1C213 CreateMailslot;
  $2CF0ADD501ED40EA238CE672E9983A9B Read;
  $2CF0ADD501ED40EA238CE672E9983A9B Write;
  $16A6F5DDB0DC612A5E38FDDA4CC6F20D QueryDirectory;
  $50A7D1BFBD4B9BBEBCBBE3D92FEB6A61 NotifyDirectory;
  $D16A19456C1B1AC9EC8F4ABE9B9AD00F QueryFile;
  $617AB6E68BF7161D7E01376DC36474BE SetFile;
  $43049A1C9CD1076EE2F76BA56B9556D6 QueryEa;
  $44CAF4394294FD1AA9144BF9A47D2B76 SetEa;
  $3487BD3529099224838DA8FD247EF6A4 QueryVolume;
  $3487BD3529099224838DA8FD247EF6A4 SetVolume;
  $1452ECD7C6E5AB3C058EED8909EEC64B FileSystemControl;
  $37A855F6110A488471994B1F725D33AB LockControl;
  $343716E60DEC8CEA3C236115305CA9A5 DeviceIoControl;
  $79FAFD50642EF9FCAC6F48CCDD5826D7 QuerySecurity;
  $29E784017BF8D630C3CED492840B3F1E SetSecurity;
  $6CFE546ECC4A7D8BB192E69F81438C34 MountVolume;
  $6CFE546ECC4A7D8BB192E69F81438C34 VerifyVolume;
  $B2B4984C7002DD41520623255E2F9497 Scsi;
  $F26D5252B9CB0364A89F29DE5B8870AE QueryQuota;
  $44CAF4394294FD1AA9144BF9A47D2B76 SetQuota;
  $EE0790C36CAC2F21EC2CCB557DCBFB77 QueryDeviceRelations;
  $401B93C41DDFFE73A60ECA83EE4FF13A QueryInterface;
  $77A8209AC58F8C209F747B175E1F9FD9 DeviceCapabilities;
  $7D1C844E4BE8AD8C239B108B63BD8F32 FilterResourceRequirements;
  $5E4425892CB91929A7D567B5DA0A3F92 ReadWriteConfig;
  $B367FCCFB95D7087158A479FE9C2D0D7 SetLock;
  $601B1113AB7FC7657820F270488AC98A QueryId;
  $961933DABD945B589BC50818F8708506 QueryDeviceText;
  $72E834424C3F46653AFFD71E6E62F299 UsageNotification;
  $2B0B0D3E11633998EBABFB54C7CDAFEA WaitWake;
  $24D1EC83F8798647B293E2034C1AF26A PowerSequence;
  $D0BE11DD3277EF1DA7EB3BEC27659A1F Power;
  $89287817551FEC566BDF793EBCFF438B StartDevice;
  $27D1A893733DBE62F2FCC36974CB79FA WMI;
  $228F32E73A128818A25FF1959272C294 Others;
};

/* 169 */
struct __unaligned __declspec(align(4)) _IO_STACK_LOCATION
{
  unsigned __int8 MajorFunction;
  unsigned __int8 MinorFunction;
  unsigned __int8 Flags;
  unsigned __int8 Control;
  $140154F0077D8156CAB9B63FCA665CCD Parameters;
  _DEVICE_OBJECT *DeviceObject;
  _FILE_OBJECT *FileObject;
  int (__stdcall *CompletionRoutine)(_DEVICE_OBJECT *, _IRP *, void *);
  void *Context;
};

/* 79 */
struct _FILE_OBJECT
{
  __int16 Type;
  __int16 Size;
  _DEVICE_OBJECT *DeviceObject;
  _VPB *Vpb;
  void *FsContext;
  void *FsContext2;
  _SECTION_OBJECT_POINTERS *SectionObjectPointer;
  void *PrivateCacheMap;
  int FinalStatus;
  _FILE_OBJECT *RelatedFileObject;
  unsigned __int8 LockOperation;
  unsigned __int8 DeletePending;
  unsigned __int8 ReadAccess;
  unsigned __int8 WriteAccess;
  unsigned __int8 DeleteAccess;
  unsigned __int8 SharedRead;
  unsigned __int8 SharedWrite;
  unsigned __int8 SharedDelete;
  unsigned int Flags;
  _UNICODE_STRING FileName;
  _LARGE_INTEGER CurrentByteOffset;
  unsigned int Waiters;
  unsigned int Busy;
  void *LastLock;
  _KEVENT Lock;
  _KEVENT Event;
  _IO_COMPLETION_CONTEXT *CompletionContext;
  unsigned int IrpListLock;
  _LIST_ENTRY IrpList;
  void *FileObjectExtension;
};

/* 78 */
struct _DRIVER_EXTENSION
{
  _DRIVER_OBJECT *DriverObject;
  int (__stdcall *AddDevice)(_DRIVER_OBJECT *, _DEVICE_OBJECT *);
  unsigned int Count;
  _UNICODE_STRING ServiceKeyName;
};

/* 175 */
struct _FAST_IO_DISPATCH
{
  unsigned int SizeOfFastIoDispatch;
  unsigned __int8 (__stdcall *FastIoCheckIfPossible)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned __int8, unsigned int, unsigned __int8, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoRead)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned __int8, unsigned int, void *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoWrite)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned __int8, unsigned int, void *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoQueryBasicInfo)(_FILE_OBJECT *, unsigned __int8, _FILE_BASIC_INFORMATION *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoQueryStandardInfo)(_FILE_OBJECT *, unsigned __int8, _FILE_STANDARD_INFORMATION *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoLock)(_FILE_OBJECT *, _LARGE_INTEGER *, _LARGE_INTEGER *, struct _EPROCESS *, unsigned int, unsigned __int8, unsigned __int8, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoUnlockSingle)(_FILE_OBJECT *, _LARGE_INTEGER *, _LARGE_INTEGER *, struct _EPROCESS *, unsigned int, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoUnlockAll)(_FILE_OBJECT *, struct _EPROCESS *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoUnlockAllByKey)(_FILE_OBJECT *, void *, unsigned int, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoDeviceControl)(_FILE_OBJECT *, unsigned __int8, void *, unsigned int, void *, unsigned int, unsigned int, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  void (__stdcall *AcquireFileForNtCreateSection)(_FILE_OBJECT *);
  void (__stdcall *ReleaseFileForNtCreateSection)(_FILE_OBJECT *);
  void (__stdcall *FastIoDetachDevice)(_DEVICE_OBJECT *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoQueryNetworkOpenInfo)(_FILE_OBJECT *, unsigned __int8, _FILE_NETWORK_OPEN_INFORMATION *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  int (__stdcall *AcquireForModWrite)(_FILE_OBJECT *, _LARGE_INTEGER *, _ERESOURCE **, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *MdlRead)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned int, _MDL **, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *MdlReadComplete)(_FILE_OBJECT *, _MDL *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *PrepareMdlWrite)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned int, _MDL **, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *MdlWriteComplete)(_FILE_OBJECT *, _LARGE_INTEGER *, _MDL *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoReadCompressed)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned int, void *, _MDL **, _IO_STATUS_BLOCK *, struct _COMPRESSED_DATA_INFO *, unsigned int, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoWriteCompressed)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned int, void *, _MDL **, _IO_STATUS_BLOCK *, struct _COMPRESSED_DATA_INFO *, unsigned int, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *MdlReadCompleteCompressed)(_FILE_OBJECT *, _MDL *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *MdlWriteCompleteCompressed)(_FILE_OBJECT *, _LARGE_INTEGER *, _MDL *, _DEVICE_OBJECT *);
  unsigned __int8 (__stdcall *FastIoQueryOpen)(_IRP *, _FILE_NETWORK_OPEN_INFORMATION *, _DEVICE_OBJECT *);
  int (__stdcall *ReleaseForModWrite)(_FILE_OBJECT *, _ERESOURCE *, _DEVICE_OBJECT *);
  int (__stdcall *AcquireForCcFlush)(_FILE_OBJECT *, _DEVICE_OBJECT *);
  int (__stdcall *ReleaseForCcFlush)(_FILE_OBJECT *, _DEVICE_OBJECT *);
};

/* 117 */
struct _IO_SECURITY_CONTEXT
{
  _SECURITY_QUALITY_OF_SERVICE *SecurityQos;
  _ACCESS_STATE *AccessState;
  unsigned int DesiredAccess;
  unsigned int FullCreateOptions;
};

/* 119 */
struct __declspec(align(8)) _NAMED_PIPE_CREATE_PARAMETERS
{
  unsigned int NamedPipeType;
  unsigned int ReadMode;
  unsigned int CompletionMode;
  unsigned int MaximumInstances;
  unsigned int InboundQuota;
  unsigned int OutboundQuota;
  _LARGE_INTEGER DefaultTimeout;
  unsigned __int8 TimeoutSpecified;
};

/* 121 */
struct __declspec(align(8)) _MAILSLOT_CREATE_PARAMETERS
{
  unsigned int MailslotQuota;
  unsigned int MaximumMessageSize;
  _LARGE_INTEGER ReadTimeout;
  unsigned __int8 TimeoutSpecified;
};

/* 143 */
const struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 144 */
struct _INTERFACE
{
  unsigned __int16 Size;
  unsigned __int16 Version;
  void *Context;
  void (__stdcall *InterfaceReference)(void *);
  void (__stdcall *InterfaceDereference)(void *);
};

/* 146 */
struct _DEVICE_CAPABILITIES
{
  unsigned __int16 Size;
  unsigned __int16 Version;
  unsigned __int32 DeviceD1 : 1;
  unsigned __int32 DeviceD2 : 1;
  unsigned __int32 LockSupported : 1;
  unsigned __int32 EjectSupported : 1;
  unsigned __int32 Removable : 1;
  unsigned __int32 DockDevice : 1;
  unsigned __int32 UniqueID : 1;
  unsigned __int32 SilentInstall : 1;
  unsigned __int32 RawDeviceOK : 1;
  unsigned __int32 SurpriseRemovalOK : 1;
  unsigned __int32 WakeFromD0 : 1;
  unsigned __int32 WakeFromD1 : 1;
  unsigned __int32 WakeFromD2 : 1;
  unsigned __int32 WakeFromD3 : 1;
  unsigned __int32 HardwareDisabled : 1;
  unsigned __int32 NonDynamic : 1;
  unsigned __int32 WarmEjectSupported : 1;
  unsigned __int32 NoDisplayInUI : 1;
  unsigned __int32 Reserved1 : 1;
  unsigned __int32 WakeFromInterrupt : 1;
  unsigned __int32 Reserved : 12;
  unsigned int Address;
  unsigned int UINumber;
  _DEVICE_POWER_STATE DeviceState[7];
  _SYSTEM_POWER_STATE SystemWake;
  _DEVICE_POWER_STATE DeviceWake;
  unsigned int D1Latency;
  unsigned int D2Latency;
  unsigned int D3Latency;
};

/* 18 */
enum _INTERFACE_TYPE : __int32
{
  InterfaceTypeUndefined = 0xFFFFFFFF,
  Internal = 0x0,
  Isa = 0x1,
  Eisa = 0x2,
  MicroChannel = 0x3,
  TurboChannel = 0x4,
  PCIBus = 0x5,
  VMEBus = 0x6,
  NuBus = 0x7,
  PCMCIABus = 0x8,
  CBus = 0x9,
  MPIBus = 0xA,
  MPSABus = 0xB,
  ProcessorInternal = 0xC,
  InternalPowerBus = 0xD,
  PNPISABus = 0xE,
  PNPBus = 0xF,
  Vmcs = 0x10,
  ACPIBus = 0x11,
  MaximumInterfaceType = 0x12,
};

/* 60 */
struct $E4D4F8AC242D77660A11D29042A4C82B
{
  unsigned int Length;
  unsigned int Alignment;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
};

/* 16 */
enum _IRQ_DEVICE_POLICY : __int32
{
  IrqPolicyMachineDefault = 0x0,
  IrqPolicyAllCloseProcessors = 0x1,
  IrqPolicyOneCloseProcessor = 0x2,
  IrqPolicyAllProcessorsInMachine = 0x3,
  IrqPolicySpecifiedProcessors = 0x4,
  IrqPolicySpreadMessagesAcrossAllProcessors = 0x5,
  IrqPolicyAllProcessorsInMachineWhenSteered = 0x6,
};

/* 17 */
enum _IRQ_PRIORITY : __int32
{
  IrqPriorityUndefined = 0x0,
  IrqPriorityLow = 0x1,
  IrqPriorityNormal = 0x2,
  IrqPriorityHigh = 0x3,
};

/* 61 */
struct $FBD16EAA812284CAEAA3A95548F99D68
{
  unsigned int MinimumVector;
  unsigned int MaximumVector;
  _IRQ_DEVICE_POLICY AffinityPolicy;
  _IRQ_PRIORITY PriorityPolicy;
  unsigned int TargetedProcessors;
};

/* 62 */
struct $290D34FD7868E94AFEC0383C08CB9B28
{
  unsigned int MinimumChannel;
  unsigned int MaximumChannel;
};

/* 63 */
struct $66D8BAE383F9288207BB026A64AFF51A
{
  unsigned int RequestLine;
  unsigned int Reserved;
  unsigned int Channel;
  unsigned int TransferWidth;
};

/* 46 */
struct $B14DB811EDFC1214B110A98B000FF49B
{
  unsigned int Data[3];
};

/* 64 */
struct $CF7D779FCF8501AF42168A39ACA3AE76
{
  unsigned int Length;
  unsigned int MinBusNumber;
  unsigned int MaxBusNumber;
  unsigned int Reserved;
};

/* 65 */
struct $5D61DD2957AFDEE7ED67BD2EDF2BEA99
{
  unsigned int Priority;
  unsigned int Reserved1;
  unsigned int Reserved2;
};

/* 66 */
struct $BD172637F55A854AA402DF80CB35CEA0
{
  unsigned int Length40;
  unsigned int Alignment40;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
};

/* 67 */
struct $AF4CE285C3BF56E2882590E5030597A2
{
  unsigned int Length48;
  unsigned int Alignment48;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
};

/* 68 */
struct $04B447CCB8A6DE5D73D3C09BE38003E9
{
  unsigned int Length64;
  unsigned int Alignment64;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
};

/* 52 */
struct $EDAC022CDA01C704ED739E663C6F28A2
{
  unsigned __int8 Class;
  unsigned __int8 Type;
  unsigned __int8 Reserved1;
  unsigned __int8 Reserved2;
  unsigned int IdLowPart;
  unsigned int IdHighPart;
};

/* 69 */
union $4351694EE7EF52C3E547E748C093CD4E
{
  $E4D4F8AC242D77660A11D29042A4C82B Port;
  $E4D4F8AC242D77660A11D29042A4C82B Memory;
  $FBD16EAA812284CAEAA3A95548F99D68 Interrupt;
  $290D34FD7868E94AFEC0383C08CB9B28 Dma;
  $66D8BAE383F9288207BB026A64AFF51A DmaV3;
  $E4D4F8AC242D77660A11D29042A4C82B Generic;
  $B14DB811EDFC1214B110A98B000FF49B DevicePrivate;
  $CF7D779FCF8501AF42168A39ACA3AE76 BusNumber;
  $5D61DD2957AFDEE7ED67BD2EDF2BEA99 ConfigData;
  $BD172637F55A854AA402DF80CB35CEA0 Memory40;
  $AF4CE285C3BF56E2882590E5030597A2 Memory48;
  $04B447CCB8A6DE5D73D3C09BE38003E9 Memory64;
  $EDAC022CDA01C704ED739E663C6F28A2 Connection;
};

/* 70 */
struct _IO_RESOURCE_DESCRIPTOR
{
  unsigned __int8 Option;
  unsigned __int8 Type;
  unsigned __int8 ShareDisposition;
  unsigned __int8 Spare1;
  unsigned __int16 Flags;
  unsigned __int16 Spare2;
  $4351694EE7EF52C3E547E748C093CD4E u;
};

/* 73 */
struct _IO_RESOURCE_LIST
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned int Count;
  _IO_RESOURCE_DESCRIPTOR Descriptors[1];
};

/* 148 */
struct _IO_RESOURCE_REQUIREMENTS_LIST
{
  unsigned int ListSize;
  _INTERFACE_TYPE InterfaceType;
  unsigned int BusNumber;
  unsigned int SlotNumber;
  unsigned int Reserved[3];
  unsigned int AlternativeLists;
  _IO_RESOURCE_LIST List[1];
};

/* 156 */
struct _POWER_SEQUENCE
{
  unsigned int SequenceD1;
  unsigned int SequenceD2;
  unsigned int SequenceD3;
};

/* 39 */
struct __unaligned __declspec(align(4)) $F7E485562EF3D662DE5D8FBE81B6105E
{
  _LARGE_INTEGER Start;
  unsigned int Length;
};

/* 40 */
struct $B56176FCA237C2B0A687F85299143576
{
  unsigned int Level;
  unsigned int Vector;
  unsigned int Affinity;
};

/* 41 */
struct $7AC00411D044B43A85AFD80B1CBC99F4
{
  unsigned __int16 Reserved;
  unsigned __int16 MessageCount;
  unsigned int Vector;
  unsigned int Affinity;
};

/* 42 */
union $31F3DFDD8A5C6303DFE876C317302762
{
  $7AC00411D044B43A85AFD80B1CBC99F4 Raw;
  $B56176FCA237C2B0A687F85299143576 Translated;
};

/* 43 */
struct $54F5AAB5148C1BDAA628EA2ED145277E
{
  $31F3DFDD8A5C6303DFE876C317302762 ___u0;
};

/* 44 */
struct $72748C417E05990EBECC6BB8D043D8B0
{
  unsigned int Channel;
  unsigned int Port;
  unsigned int Reserved1;
};

/* 45 */
struct $CC0360DD0852F9AAB36A2B2BBC2DF141
{
  unsigned int Channel;
  unsigned int RequestLine;
  unsigned __int8 TransferWidth;
  unsigned __int8 Reserved1;
  unsigned __int8 Reserved2;
  unsigned __int8 Reserved3;
};

/* 47 */
struct $6C467299E1DD150E8FDAFB428553E9E9
{
  unsigned int Start;
  unsigned int Length;
  unsigned int Reserved;
};

/* 48 */
struct $D735038633D506DCA1748B01FF7747C2
{
  unsigned int DataSize;
  unsigned int Reserved1;
  unsigned int Reserved2;
};

/* 49 */
struct __unaligned __declspec(align(4)) $E3EBDB8B22E537679CBA067A2411954B
{
  _LARGE_INTEGER Start;
  unsigned int Length40;
};

/* 50 */
struct __unaligned __declspec(align(4)) $E1ADDB6D1E2B1E6B3A76382ACA9EE1EE
{
  _LARGE_INTEGER Start;
  unsigned int Length48;
};

/* 51 */
struct __unaligned __declspec(align(4)) $6C341C5926AAF1E221CA8D30BB6D49B3
{
  _LARGE_INTEGER Start;
  unsigned int Length64;
};

/* 53 */
union $A4BCA2CF16793060FD0B57003FE6C847
{
  $F7E485562EF3D662DE5D8FBE81B6105E Generic;
  $F7E485562EF3D662DE5D8FBE81B6105E Port;
  $B56176FCA237C2B0A687F85299143576 Interrupt;
  $54F5AAB5148C1BDAA628EA2ED145277E MessageInterrupt;
  $F7E485562EF3D662DE5D8FBE81B6105E Memory;
  $72748C417E05990EBECC6BB8D043D8B0 Dma;
  $CC0360DD0852F9AAB36A2B2BBC2DF141 DmaV3;
  $B14DB811EDFC1214B110A98B000FF49B DevicePrivate;
  $6C467299E1DD150E8FDAFB428553E9E9 BusNumber;
  $D735038633D506DCA1748B01FF7747C2 DeviceSpecificData;
  $E3EBDB8B22E537679CBA067A2411954B Memory40;
  $E1ADDB6D1E2B1E6B3A76382ACA9EE1EE Memory48;
  $6C341C5926AAF1E221CA8D30BB6D49B3 Memory64;
  $EDAC022CDA01C704ED739E663C6F28A2 Connection;
};

/* 54 */
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR
{
  unsigned __int8 Type;
  unsigned __int8 ShareDisposition;
  unsigned __int16 Flags;
  $A4BCA2CF16793060FD0B57003FE6C847 u;
};

/* 56 */
struct _CM_PARTIAL_RESOURCE_LIST
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned int Count;
  _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];
};

/* 72 */
struct _CM_FULL_RESOURCE_DESCRIPTOR
{
  _INTERFACE_TYPE InterfaceType;
  unsigned int BusNumber;
  _CM_PARTIAL_RESOURCE_LIST PartialResourceList;
};

/* 164 */
struct _CM_RESOURCE_LIST
{
  unsigned int Count;
  _CM_FULL_RESOURCE_DESCRIPTOR List[1];
};

/* 185 */
struct _SECTION_OBJECT_POINTERS
{
  void *DataSectionObject;
  void *SharedCacheMap;
  void *ImageSectionObject;
};

/* 186 */
struct _IO_COMPLETION_CONTEXT
{
  void *Port;
  void *Key;
};

/* 82 */
struct __declspec(align(8)) _FILE_BASIC_INFORMATION
{
  _LARGE_INTEGER CreationTime;
  _LARGE_INTEGER LastAccessTime;
  _LARGE_INTEGER LastWriteTime;
  _LARGE_INTEGER ChangeTime;
  unsigned int FileAttributes;
};

/* 83 */
struct __declspec(align(4)) _FILE_STANDARD_INFORMATION
{
  _LARGE_INTEGER AllocationSize;
  _LARGE_INTEGER EndOfFile;
  unsigned int NumberOfLinks;
  unsigned __int8 DeletePending;
  unsigned __int8 Directory;
};

/* 84 */
struct __declspec(align(8)) _FILE_NETWORK_OPEN_INFORMATION
{
  _LARGE_INTEGER CreationTime;
  _LARGE_INTEGER LastAccessTime;
  _LARGE_INTEGER LastWriteTime;
  _LARGE_INTEGER ChangeTime;
  _LARGE_INTEGER AllocationSize;
  _LARGE_INTEGER EndOfFile;
  unsigned int FileAttributes;
};

/* 103 */
struct $9959C6898638794B7A02F04E7F980F81
{
  unsigned __int8 ReservedLowFlags;
  unsigned __int8 WaiterPriority;
};

/* 104 */
union $AB7AFDD63DD3E6489645DB990FB86200
{
  unsigned __int16 Flag;
  $9959C6898638794B7A02F04E7F980F81 __s1;
};

/* 90 */
struct _KWAIT_CHAIN
{
  _SINGLE_LIST_ENTRY Head;
};

/* 86 */
struct $E71B718CD8428E7C8AA4A0868051E710
{
  unsigned __int32 IoPriorityBoosted : 1;
  unsigned __int32 OwnerReferenced : 1;
  unsigned __int32 IoQoSPriorityBoosted : 1;
  unsigned __int32 OwnerCount : 29;
};

/* 87 */
union $6FEDD1C72AEBC574BBF4A2390F36F208
{
  $E71B718CD8428E7C8AA4A0868051E710 __s0;
  unsigned int TableSize;
};

/* 88 */
struct _OWNER_ENTRY
{
  unsigned int OwnerThread;
  $6FEDD1C72AEBC574BBF4A2390F36F208 ___u1;
};

/* 105 */
union $B8D4EB9E6E3D1A926634FE9A5064A2BB
{
  void *Address;
  unsigned int CreatorBackTraceIndex;
};

/* 106 */
struct _ERESOURCE
{
  _LIST_ENTRY SystemResourcesList;
  _OWNER_ENTRY *OwnerTable;
  __int16 ActiveCount;
  $AB7AFDD63DD3E6489645DB990FB86200 ___u3;
  _KWAIT_CHAIN SharedWaiters;
  _KEVENT *ExclusiveWaiters;
  _OWNER_ENTRY OwnerEntry;
  unsigned int ActiveEntries;
  unsigned int ContentionCount;
  unsigned int NumberOfSharedWaiters;
  unsigned int NumberOfExclusiveWaiters;
  $B8D4EB9E6E3D1A926634FE9A5064A2BB ___u11;
  unsigned int SpinLock;
};

/* 15 */
enum _SECURITY_IMPERSONATION_LEVEL : __int32
{
  SecurityAnonymous = 0x0,
  SecurityIdentification = 0x1,
  SecurityImpersonation = 0x2,
  SecurityDelegation = 0x3,
};

/* 114 */
struct __declspec(align(4)) _SECURITY_QUALITY_OF_SERVICE
{
  unsigned int Length;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  unsigned __int8 ContextTrackingMode;
  unsigned __int8 EffectiveOnly;
};

/* 57 */
struct _LUID
{
  unsigned int LowPart;
  int HighPart;
};

/* 55 */
struct _SECURITY_SUBJECT_CONTEXT
{
  void *ClientToken;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  void *PrimaryToken;
  void *ProcessAuditId;
};

/* 58 */
struct _LUID_AND_ATTRIBUTES
{
  _LUID Luid;
  unsigned int Attributes;
};

/* 71 */
struct _INITIAL_PRIVILEGE_SET
{
  unsigned int PrivilegeCount;
  unsigned int Control;
  _LUID_AND_ATTRIBUTES Privilege[3];
};

/* 59 */
struct _PRIVILEGE_SET
{
  unsigned int PrivilegeCount;
  unsigned int Control;
  _LUID_AND_ATTRIBUTES Privilege[1];
};

/* 115 */
union $E7A41607B34D9B73869ADBAE9557F72F
{
  _INITIAL_PRIVILEGE_SET InitialPrivilegeSet;
  _PRIVILEGE_SET PrivilegeSet;
};

/* 116 */
struct _ACCESS_STATE
{
  _LUID OperationID;
  unsigned __int8 SecurityEvaluated;
  unsigned __int8 GenerateAudit;
  unsigned __int8 GenerateOnClose;
  unsigned __int8 PrivilegesAllocated;
  unsigned int Flags;
  unsigned int RemainingDesiredAccess;
  unsigned int PreviouslyGrantedAccess;
  unsigned int OriginalDesiredAccess;
  _SECURITY_SUBJECT_CONTEXT SubjectSecurityContext;
  void *SecurityDescriptor;
  void *AuxData;
  $E7A41607B34D9B73869ADBAE9557F72F Privileges;
  unsigned __int8 AuditPrivileges;
  _UNICODE_STRING ObjectName;
  _UNICODE_STRING ObjectTypeName;
};

/* 301 */
typedef SYNTHHID_PROTOCOL_RESPONSE *PSYNTHHID_PROTOCOL_RESPONSE;

/* 351 */
typedef SYNTHHID_MESSAGE *PSYNTHHID_MESSAGE;

/* 434 */
typedef SYNTHHID_DEVICE_INFO *PSYNTHHID_DEVICE_INFO;

