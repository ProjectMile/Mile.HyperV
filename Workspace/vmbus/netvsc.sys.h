/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'netvsc.sys'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct _MDL;
struct _SCATTER_GATHER_LIST;
struct WDFDEVICE__;
struct _NET_BUFFER_LIST;
struct _NET_BUFFER;
struct _NET_BUFFER_SHARED_MEMORY;
struct _NET_BUFFER_LIST_CONTEXT;
struct _RM_RNDIS_SUBALLOCATION_CONTEXT;
struct VMBCHANNEL__;
struct _NVSC_PDBM_DOMAIN;
struct _NVSC_SUPPLEMENTAL_SEND_BUFFER_SECTION;
struct VMBPACKETCOMPLETION__;
struct _NVSC_MICROPORT_CONTEXT;
struct _NVSP_MESSAGE;
struct _NVSC_V1_SEND_BUFFER_SECTION;
struct VMBPACKET__;

/* 127 */
enum _NVSP_MESSAGE_TYPE : __int32
{
  NvspMessageTypeNone = 0x0,
  NvspMessageTypeInit = 0x1,
  NvspMessageTypeInitComplete = 0x2,
  NvspVersionMessageStart = 0x64,
  NvspMessage1TypeSendNdisVersion = 0x64,
  NvspMessage1TypeSendReceiveBuffer = 0x65,
  NvspMessage1TypeSendReceiveBufferComplete = 0x66,
  NvspMessage1TypeRevokeReceiveBuffer = 0x67,
  NvspMessage1TypeSendSendBuffer = 0x68,
  NvspMessage1TypeSendSendBufferComplete = 0x69,
  NvspMessage1TypeRevokeSendBuffer = 0x6A,
  NvspMessage1TypeSendRNDISPacket = 0x6B,
  NvspMessage1TypeSendRNDISPacketComplete = 0x6C,
  NvspMessage1Max = 0x6C,
  NvspMessage2TypeSendChimneyDelegatedBuffer = 0x6D,
  NvspMessage2TypeSendChimneyDelegatedBufferComplete = 0x6E,
  NvspMessage2TypeRevokeChimneyDelegatedBuffer = 0x6F,
  NvspMessage2TypeResumeChimneyRXIndication = 0x70,
  NvspMessage2TypeTerminateChimney = 0x71,
  NvspMessage2TypeTerminateChimneyComplete = 0x72,
  NvspMessage2TypeIndicateChimneyEvent = 0x73,
  NvspMessage2TypeSendChimneyPacket = 0x74,
  NvspMessage2TypeSendChimneyPacketComplete = 0x75,
  NvspMessage2TypePostChimneyRecvRequest = 0x76,
  NvspMessage2TypePostChimneyRecvRequestComplete = 0x77,
  NvspMessage2TypeAllocateReceiveBufferDeprecated = 0x78,
  NvspMessage2TypeAllocateReceiveBufferCompleteDeprecated = 0x79,
  NvspMessage2TypeFreeReceiveBufferDeprecated = 0x7A,
  NvspMessage2SendVmqRndisPacketDeprecated = 0x7B,
  NvspMessage2SendVmqRndisPacketCompleteDeprecated = 0x7C,
  NvspMessage2TypeSendNdisConfig = 0x7D,
  NvspMessage2TypeAllocateChimneyHandle = 0x7E,
  NvspMessage2TypeAllocateChimneyHandleComplete = 0x7F,
  NvspMessage2Max = 0x7F,
  NvspMessage4TypeSendVFAssociation = 0x80,
  NvspMessage4TypeSwitchDataPath = 0x81,
  NvspMessage4TypeUplinkConnectStateDeprecated = 0x82,
  NvspMessage4Max = 0x82,
  NvspMessage5TypeOidQueryEx = 0x83,
  NvspMessage5TypeOidQueryExComplete = 0x84,
  NvspMessage5TypeSubChannel = 0x85,
  NvspMessage5TypeSendIndirectionTable = 0x86,
  NvspMessage5Max = 0x86,
  NvspMessage6TypePdApi = 0x87,
  NvspMessage6TypePdPostBatch = 0x88,
  NvspMessage6Max = 0x88,
};

/* 135 */
enum _NVSP_STATUS : __int32
{
  NvspStatusNone = 0x0,
  NvspStatusSuccess = 0x1,
  NvspStatusFailure = 0x2,
  NvspStatusDeprecated1 = 0x3,
  NvspStatusDeprecated2 = 0x4,
  NvspStatusInvalidRndisPacket = 0x5,
  NvspStatusBusy = 0x6,
  NvspStatusProtocolVersionUnsupported = 0x7,
  NvspStatusMax = 0x8,
};

/* 139 */
enum _NVSP_VM_DATA_PATH : __int32
{
  NvspDataPathSynthetic = 0x0,
  NvspDataPathVF = 0x1,
  NvspDataPathMax = 0x2,
};

/* 141 */
enum _NVSP_SUBCHANNEL_OPERATION : __int32
{
  NvspSubchannelNone = 0x0,
  NvspSubchannelAllocate = 0x1,
  NvspSubchannelMax = 0x2,
};

/* 159 */
enum _NVSP_6_MESSAGE_PD_API_OPERATION : __int32
{
  PdApiOpConfiguration = 0x1,
  PdApiOpSwitchDatapath = 0x2,
  PdApiOpOpenProvider = 0x3,
  PdApiOpCloseProvider = 0x4,
  PdApiOpCreateQueue = 0x5,
  PdApiOpFlushQueue = 0x6,
  PdApiOpFreeQueue = 0x7,
  PdApiOpAllocateCommonBuffer = 0x8,
  PdApiOpFreeCommonBuffer = 0x9,
  PdApiOpMax = 0xA,
};

/* 1123 */
struct _NVSP_5_MESSAGE_SUBCHANNEL_COMPLETE
{
  unsigned int Status;
  unsigned int NumSubChannels;
};

/* 440 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/* 441 */
union _LARGE_INTEGER
{
  $FAF74743FBE1C8632047CFB668F7028A __s0;
  $FAF74743FBE1C8632047CFB668F7028A u;
  __int64 QuadPart;
};

/* 1124 */
struct __unaligned __declspec(align(2)) $4E94E714A9B9DF3F9E0F93BCC18DEF15
{
  _LARGE_INTEGER MmioPhysicalAddress;
  unsigned int MmioLength;
  unsigned __int16 NumPdQueues;
};

/* 1125 */
struct $B21F95D14CC3D89EE9A4ED4F57DBE03E
{
  unsigned __int8 HostDatapathIsPacketDirect;
  unsigned __int8 GuestPacketDirectIsEnabled;
};

/* 1126 */
struct $5286B83CAFE213B0267A47343FCAD1D0
{
  unsigned int ProviderId;
  unsigned int Flags;
};

/* 1127 */
struct $5CA0B5C894970227AF5DE136354B11D0
{
  unsigned int ProviderId;
};

/* 805 */
struct _GROUP_AFFINITY
{
  unsigned int Mask;
  unsigned __int16 Group;
  unsigned __int16 Reserved[3];
};

/* 1128 */
struct __unaligned __declspec(align(2)) $31B44F349DB68DE9B54F624DC978E14B
{
  unsigned int ProviderId;
  unsigned __int16 QueueId;
  unsigned __int16 QueueSize;
  unsigned __int8 IsReceiveQueue;
  unsigned __int8 IsRssQueue;
  unsigned int ReceiveDataLength;
  _GROUP_AFFINITY Affinity;
};

/* 1129 */
struct __unaligned __declspec(align(2)) $5ED50EDB94755908BFA24A77C0ACCC05
{
  unsigned int ProviderId;
  unsigned __int16 QueueId;
};

/* 1130 */
struct __unaligned __declspec(align(2)) $F8C46456523F000DF9C79A6FD21C7088
{
  unsigned int Length;
  unsigned int PreferredNode;
  unsigned __int16 RegionId;
};

/* 1131 */
struct __unaligned __declspec(align(1)) $BAD43BDCDB438AD8BECEB5099262FFF9
{
  unsigned int Length;
  unsigned __int64 PhysicalAddress;
  unsigned int PreferredNode;
  unsigned __int16 RegionId;
  unsigned __int8 CacheType;
};

/* 1132 */
union __unaligned __declspec(align(2)) $58FA96DD7ED98065804E8DE6B9EABC0A
{
  $4E94E714A9B9DF3F9E0F93BCC18DEF15 Configuration;
  $B21F95D14CC3D89EE9A4ED4F57DBE03E SwitchDatapath;
  $5286B83CAFE213B0267A47343FCAD1D0 OpenProvider;
  $5CA0B5C894970227AF5DE136354B11D0 CloseProvider;
  $31B44F349DB68DE9B54F624DC978E14B CreateQueue;
  $5ED50EDB94755908BFA24A77C0ACCC05 DeleteQueue;
  $5ED50EDB94755908BFA24A77C0ACCC05 FlushQueue;
  $F8C46456523F000DF9C79A6FD21C7088 AllocateCommonBuffer;
  $BAD43BDCDB438AD8BECEB5099262FFF9 FreeCommonBuffer;
};

/* 1133 */
struct __unaligned __declspec(align(2)) _NVSP_6_MESSAGE_PD_API_REQUEST
{
  unsigned int Operation;
  $58FA96DD7ED98065804E8DE6B9EABC0A ___u1;
};

/* 1134 */
struct _NVSP_MESSAGE_INIT_COMPLETE
{
  unsigned int Deprecated;
  unsigned int MaximumMdlChainLength;
  unsigned int Status;
};

/* 1135 */
struct __unaligned __declspec(align(2)) _NVSP_1_MESSAGE_SEND_SEND_BUFFER
{
  unsigned int GpadlHandle;
  unsigned __int16 Id;
};

/* 1136 */
struct $235C9288D1D7DD59DDB35ED88B2D6378
{
  unsigned __int64 VMQ : 1;
  unsigned __int64 Chimney : 1;
  unsigned __int64 SRIOV : 1;
  unsigned __int64 Ieee8021q : 1;
  unsigned __int64 CorrelationId : 1;
  unsigned __int64 Teaming : 1;
  unsigned __int64 VirtualSubnetId : 1;
};

/* 1137 */
union $642761A34E73DFB54A7562104DE30DE0
{
  unsigned __int64 AsUINT64;
  $235C9288D1D7DD59DDB35ED88B2D6378 __s1;
};

/* 1138 */
struct _NVSP_2_NETVSC_CAPABILITIES
{
  $642761A34E73DFB54A7562104DE30DE0 ___u0;
};

/* 1139 */
struct _NVSP_2_MESSAGE_SEND_NDIS_CONFIG
{
  unsigned int MTU;
  unsigned int Reserved;
  _NVSP_2_NETVSC_CAPABILITIES Capabilities;
};

/* 1140 */
struct _NVSP_5_MESSAGE_SEND_INDIRECTION_TABLE
{
  unsigned int TableEntryCount;
  unsigned int TableOffset;
};

/* 1141 */
struct __unaligned __declspec(align(2)) _NVSP_1_MESSAGE_SEND_RECEIVE_BUFFER
{
  unsigned int GpadlHandle;
  unsigned __int16 Id;
};

/* 1142 */
struct __unaligned __declspec(align(1)) $EBF94CA92A8EEA122D42968D2D5F0996
{
  unsigned __int16 NumPdQueues;
  unsigned __int8 NumReceiveRssPDQueues;
  unsigned __int8 IsSupportedByVSP;
  unsigned __int8 IsEnabledByVSP;
};

/* 1143 */
struct $530D84FA0D10FD01A62B9FBEFF6288D3
{
  unsigned int ProviderId;
  unsigned __int16 QueueId;
  unsigned __int16 QueueSize;
  unsigned int ReceiveDataLength;
  _GROUP_AFFINITY Affinity;
};

/* 1144 */
struct __unaligned __declspec(align(1)) $DD2B6E54BE491321603C19FDBF0B34A3
{
  unsigned __int64 PhysicalAddress;
  unsigned int Length;
  unsigned int PreferredNode;
  unsigned __int16 RegionId;
  unsigned __int8 CacheType;
};

/* 1145 */
union $69AF82A83480889FA8D53166B37BFA66
{
  $EBF94CA92A8EEA122D42968D2D5F0996 Configuration;
  $5CA0B5C894970227AF5DE136354B11D0 OpenProvider;
  $530D84FA0D10FD01A62B9FBEFF6288D3 CreateQueue;
  $DD2B6E54BE491321603C19FDBF0B34A3 AllocateCommonBuffer;
};

/* 1146 */
struct _NVSP_6_MESSAGE_PD_API_COMPLETE
{
  unsigned int Operation;
  unsigned int Status;
  $69AF82A83480889FA8D53166B37BFA66 ___u2;
};

/* 1147 */
struct _NVSP_1_MESSAGE_SEND_RNDIS_PACKET_COMPLETE
{
  unsigned int Status;
};

/* 1148 */
struct _NVSP_1_MESSAGE_SEND_NDIS_VERSION
{
  unsigned int NdisMajorVersion;
  unsigned int NdisMinorVersion;
};

/* 1149 */
struct _NVSP_1_RECEIVE_BUFFER_SECTION
{
  unsigned int Offset;
  unsigned int SubAllocationSize;
  unsigned int NumSubAllocations;
  unsigned int EndOffset;
};

/* 1150 */
struct _NVSP_1_MESSAGE_SEND_RECEIVE_BUFFER_COMPLETE
{
  unsigned int Status;
  unsigned int NumSections;
  _NVSP_1_RECEIVE_BUFFER_SECTION Sections[1];
};

/* 1151 */
struct _NVSP_1_MESSAGE_REVOKE_RECEIVE_BUFFER
{
  unsigned __int16 Id;
};

/* 1152 */
struct _NVSP_1_MESSAGE_SEND_SEND_BUFFER_COMPLETE
{
  unsigned int Status;
  unsigned int SectionSize;
};

/* 1153 */
struct _NVSP_1_MESSAGE_REVOKE_SEND_BUFFER
{
  unsigned __int16 Id;
};

/* 1154 */
struct _NVSP_1_MESSAGE_SEND_RNDIS_PACKET
{
  unsigned int ChannelType;
  unsigned int SendBufferSectionIndex;
  unsigned int SendBufferSectionSize;
};

/* 1155 */
union _NVSP_MESSAGE_1_UBER
{
  _NVSP_1_MESSAGE_SEND_NDIS_VERSION SendNdisVersion;
  _NVSP_1_MESSAGE_SEND_RECEIVE_BUFFER SendReceiveBuffer;
  _NVSP_1_MESSAGE_SEND_RECEIVE_BUFFER_COMPLETE SendReceiveBufferComplete;
  _NVSP_1_MESSAGE_REVOKE_RECEIVE_BUFFER RevokeReceiveBuffer;
  _NVSP_1_MESSAGE_SEND_SEND_BUFFER SendSendBuffer;
  _NVSP_1_MESSAGE_SEND_SEND_BUFFER_COMPLETE SendSendBufferComplete;
  _NVSP_1_MESSAGE_REVOKE_SEND_BUFFER RevokeSendBuffer;
  _NVSP_1_MESSAGE_SEND_RNDIS_PACKET SendRNDISPacket;
  _NVSP_1_MESSAGE_SEND_RNDIS_PACKET_COMPLETE SendRNDISPacketComplete;
};

/* 1156 */
struct _NVSP_4_MESSAGE_SEND_VF_ASSOCIATION
{
  unsigned int VFAllocated;
  unsigned int SerialNumber;
};

/* 1157 */
struct _NVSP_4_MESSAGE_SWITCH_DATA_PATH
{
  _NVSP_VM_DATA_PATH ActiveDataPath;
};

/* 1158 */
union _NVSP_MESSAGE_4_UBER
{
  _NVSP_4_MESSAGE_SEND_VF_ASSOCIATION VFAssociation;
  _NVSP_4_MESSAGE_SWITCH_DATA_PATH SwitchDataPath;
};

/* 1159 */
struct $0BFF303F6F080CBC27BC21E861E5D33E
{
  unsigned __int16 MinorProtocolVersion;
  unsigned __int16 MajorProtocolVersion;
};

/* 1160 */
union $CF979FC8A768923B7021DD6525709B5D
{
  $0BFF303F6F080CBC27BC21E861E5D33E __s0;
  unsigned int ProtocolVersion;
};

/* 1161 */
struct _NVSP_MESSAGE_INIT
{
  $CF979FC8A768923B7021DD6525709B5D ___u0;
  unsigned int ProtocolVersion2;
};

/* 1163 */
union _NVSP_MESSAGE_6_UBER
{
  _NVSP_6_MESSAGE_PD_API_REQUEST PdApiRequest;
  _NVSP_6_MESSAGE_PD_API_COMPLETE PdApiComplete;
};

/* 1164 */
struct _NVSP_5_MESSAGE_SUBCHANNEL_REQUEST
{
  _NVSP_SUBCHANNEL_OPERATION Operation;
  unsigned int NumSubChannels;
};

/* 893 */
struct _NDIS_OBJECT_HEADER
{
  unsigned __int8 Type;
  unsigned __int8 Revision;
  unsigned __int16 Size;
};

/* 1165 */
struct _NVSP_5_MESSAGE_OID_QUERY_EX
{
  _NDIS_OBJECT_HEADER Header;
  unsigned int Oid;
};

/* 1166 */
union $A085B242C3ACA8B254DD2D2037F3F384
{
  unsigned int BytesWritten;
  unsigned int BytesNeeded;
};

/* 1167 */
struct _NVSP_5_MESSAGE_OID_QUERY_EX_COMPLETE
{
  int Status;
  $A085B242C3ACA8B254DD2D2037F3F384 ___u1;
};

/* 1168 */
union _NVSP_MESSAGE_5_UBER
{
  _NVSP_5_MESSAGE_OID_QUERY_EX OidQueryEx;
  _NVSP_5_MESSAGE_OID_QUERY_EX_COMPLETE OidQueryExComplete;
  _NVSP_5_MESSAGE_SUBCHANNEL_REQUEST SubChannelRequest;
  _NVSP_5_MESSAGE_SUBCHANNEL_COMPLETE SubChannelRequestComplete;
  _NVSP_5_MESSAGE_SEND_INDIRECTION_TABLE SendTable;
};

/* 1169 */
union _NVSP_MESSAGE_INIT_UBER
{
  _NVSP_MESSAGE_INIT Init;
  _NVSP_MESSAGE_INIT_COMPLETE InitComplete;
};

/* 1172 */
union _NVSP_MESSAGE_2_UBER
{
  _NVSP_2_MESSAGE_SEND_NDIS_CONFIG SendNdisConfig;
};

/* 1176 */
struct _NVSP_MESSAGE_HEADER
{
  unsigned int MessageType;
};

/* 1177 */
struct _NVSP_6_PD_BUFFER
{
  unsigned int RegionOffset;
  unsigned __int16 RegionId;
  unsigned __int16 IsPartial : 1;
  unsigned __int16 ReservedMbz : 15;
};

/* 1178 */
struct _NVSP_6_MESSAGE_PD_BATCH_MESSAGE
{
  _NVSP_MESSAGE_HEADER Header;
  unsigned __int16 Count;
  unsigned __int16 GuestToHost : 1;
  unsigned __int16 IsReceive : 1;
  unsigned __int16 ReservedMbz : 14;
  _NVSP_6_PD_BUFFER PdBuffer[];
};

/* 1182 */
struct _NVSC_VMBUS_CHANNEL_INFO
{
  VMBCHANNEL__ *VmbChannel;
  _NVSC_MICROPORT_CONTEXT *MicroportContext;
  unsigned __int16 ChannelIndex;
  unsigned int PacketSize;
  unsigned __int8 IsReady;
  unsigned int ProcessorIndex;
  unsigned int PdQueueId;
};

/* 1183 */
struct _NVSC_RSS_INFO
{
  struct _NDIS_RW_LOCK_EX *RWLock;
  unsigned int HashType;
  unsigned int HashFunction;
  unsigned __int8 IsRssReady;
  unsigned int *QueueTable;
  unsigned __int16 QueueTableCount;
  unsigned int SendIndirectionTable[16];
};

/* 137 */
enum _NVSC_STATE : __int32
{
  NvscStateNone = 0x1,
  NvscStateWaitingForOpen = 0x2,
  NvscStateInitializing = 0x3,
  NvscStateOperational = 0x4,
  NvscStateMax = 0x5,
  NvscStateInvalid = 0xFFFFFFFF,
};

/* 471 */
struct $08481D05807C14C022C64127DBCB0DC5
{
  unsigned __int8 Type;
  unsigned __int8 Signalling;
  unsigned __int8 Size;
  unsigned __int8 Reserved1;
};

/* 472 */
struct $BDD1DEEA9085FB2031C94E38C028AF9F
{
  unsigned __int8 TimerType;
  unsigned __int8 TimerControlFlags;
  unsigned __int8 Hand;
  unsigned __int8 TimerMiscFlags;
};

/* 473 */
struct $1A64267CB6701B751C40AA7938D55A2C
{
  unsigned __int8 Timer2Type;
  unsigned __int8 Absolute : 1;
  unsigned __int8 Wake : 1;
  unsigned __int8 EncodedTolerableDelay : 6;
  unsigned __int8 Timer2Reserved1;
  unsigned __int8 Index : 1;
  unsigned __int8 Processor : 5;
  unsigned __int8 Inserted : 1;
  unsigned __int8 Expired : 1;
};

/* 474 */
struct $DC5C26BDF4D684F12F3A5D4531D3B949
{
  unsigned __int8 QueueType;
  unsigned __int8 Timer2Flags;
  unsigned __int8 QueueSize;
  unsigned __int8 Timer2Reserved2;
};

/* 475 */
struct $82359CCE575330AAB08AF0894BC28AE0
{
  unsigned __int8 ThreadType;
  unsigned __int8 Timer2Inserted : 1;
  unsigned __int8 Timer2Expiring : 1;
  unsigned __int8 Timer2CancelPending : 1;
  unsigned __int8 Timer2SetPending : 1;
  unsigned __int8 Timer2Running : 1;
  unsigned __int8 Timer2Disabled : 1;
  unsigned __int8 Timer2ReservedFlags : 2;
  unsigned __int8 ThreadControlFlags;
  unsigned __int8 QueueReserved;
};

/* 476 */
struct $9300EC2846D44244344338BB8331DF4E
{
  unsigned __int8 MutantType;
  unsigned __int8 QueueControlFlags;
  unsigned __int8 CycleProfiling : 1;
  unsigned __int8 CounterProfiling : 1;
  unsigned __int8 GroupScheduling : 1;
  unsigned __int8 AffinitySet : 1;
  unsigned __int8 Tagged : 1;
  unsigned __int8 EnergyProfiling : 1;
  unsigned __int8 Instrumented : 1;
  unsigned __int8 ThreadReservedControlFlags : 1;
  unsigned __int8 DebugActive;
};

/* 477 */
struct $311232CAD4ECFA502922D62D223D90C0
{
  _BYTE gap0;
  unsigned __int8 Abandoned : 1;
  unsigned __int8 DisableIncrement : 1;
  unsigned __int8 QueueReservedControlFlags : 6;
  unsigned __int8 DpcActive;
  unsigned __int8 MutantReserved;
};

/* 478 */
struct $6287A180EBF0351F83293B36E60E22FF
{
  _BYTE gap0;
  unsigned __int8 ThreadReserved;
};

/* 479 */
struct $4B94A638C9572C40F7312179A2B431F6
{
  _BYTE gap0;
  unsigned __int8 MutantSize;
};

/* 480 */
union $8F645015FE61CF6A2ACBB71C18B5AF94
{
  volatile int Lock;
  int LockNV;
  $08481D05807C14C022C64127DBCB0DC5 __s2;
  $BDD1DEEA9085FB2031C94E38C028AF9F __s3;
  $1A64267CB6701B751C40AA7938D55A2C __s4;
  $DC5C26BDF4D684F12F3A5D4531D3B949 __s5;
  $82359CCE575330AAB08AF0894BC28AE0 __s6;
  $9300EC2846D44244344338BB8331DF4E __s7;
  $311232CAD4ECFA502922D62D223D90C0 __s8;
  $6287A180EBF0351F83293B36E60E22FF __s9;
  $4B94A638C9572C40F7312179A2B431F6 __s10;
};

/* 470 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/* 481 */
struct _DISPATCHER_HEADER
{
  $8F645015FE61CF6A2ACBB71C18B5AF94 ___u0;
  int SignalState;
  _LIST_ENTRY WaitListHead;
};

/* 482 */
struct _KEVENT
{
  _DISPATCHER_HEADER Header;
};

/* 492 */
struct _SINGLE_LIST_ENTRY
{
  _SINGLE_LIST_ENTRY *Next;
};

/* 727 */
struct $A599625B7CDE08746C6A6D801F590169
{
  _SINGLE_LIST_ENTRY Next;
  unsigned __int16 Depth;
  unsigned __int16 CpuId;
};

/* 728 */
union _SLIST_HEADER
{
  unsigned __int64 Alignment;
  $A599625B7CDE08746C6A6D801F590169 __s1;
};

/* 1188 */
struct __declspec(align(8)) _NVSC_V1_CONTEXT
{
  unsigned int ReceiveBufferSize;
  void *ReceiveBuffer;
  unsigned int ReceiveBufferGpadlHandle;
  unsigned int NumReceiveBufferSections;
  _NVSP_1_RECEIVE_BUFFER_SECTION *ReceiveBufferSections;
  _RM_RNDIS_SUBALLOCATION_CONTEXT **ReceiveBufferSectionArray;
  unsigned int SendBufferSize;
  void *SendBuffer;
  unsigned int SendBufferGpadlHandle;
  unsigned int SendBufferSectionSize;
  _NVSC_V1_SEND_BUFFER_SECTION *SendBufferSections;
  _SLIST_HEADER SendBufferSectionsListHead;
  unsigned __int8 SendBufferCompleteSuccessful;
  unsigned __int8 Halting;
  VMBPACKET__ *ReceiveBuffersDeletePacket;
  VMBPACKET__ *SendBuffersDeletePacket;
};

/* 1189 */
struct _NVSC_V2_CONTEXT
{
  void *ReceiveNblPool;
};

/* 901 */
struct __declspec(align(8)) _NDIS_PD_CONFIG
{
  _NDIS_OBJECT_HEADER Header;
  unsigned int Flags;
  unsigned __int8 Enabled;
  unsigned int CapabilitiesOffset;
  unsigned int CapabilitiesSize;
};

/* 902 */
struct __declspec(align(8)) _NDIS_PD_CAPABILITIES
{
  _NDIS_OBJECT_HEADER Header;
  unsigned int Flags;
  unsigned int MaximumTxPartialBufferCount;
  unsigned int MaximumRxPartialBufferCount;
  unsigned __int8 RxFilterContextWidth;
  unsigned int CapabilityFlags;
  unsigned int MaxNumberOfRxQueues;
  unsigned int MaxNumberOfTxQueues;
  unsigned int MaxNumberOfRxQueuesForDefaultVport;
  unsigned int MaxNumberOfTxQueuesForDefaultVport;
  unsigned int MaxNumberOfRxQueuesPerNonDefaultVport;
  unsigned int MaxNumberOfTxQueuesPerNonDefaultVport;
  unsigned int ExactMatchProfileArrayOffset;
  unsigned int ExactMatchProfileArrayNumElements;
  unsigned int ExactMatchProfileArrayElementSize;
  unsigned int WildcardMatchProfileArrayOffset;
  unsigned int WildcardMatchProfileArrayNumElements;
  unsigned int WildcardMatchProfileArrayElementSize;
  unsigned int MinimumModerationInterval;
  unsigned int MaximumModerationInterval;
  unsigned int ModerationIntervalGranularity;
  unsigned int MaxRxQueueSize;
  unsigned int MaxTxQueueSize;
};

/* 1162 */
struct _NVSC_PD_CONFIG
{
  _NDIS_PD_CONFIG Configuration;
  _NDIS_PD_CAPABILITIES Capabilities;
};

/* 1190 */
struct __declspec(align(8)) _NVSC_PD_ADAPTER_CONTEXT
{
  void *MiniportAdapterHandle;
  _NVSC_PD_CONFIG Cfg;
  _NVSC_PDBM_DOMAIN *Domain;
  unsigned int DomainId;
  unsigned __int8 IsVmAdminEnabled;
  unsigned __int8 IsSupportedByVSP;
  unsigned __int8 IsEnabledByVSP;
  unsigned __int8 IsInitialized;
  volatile char IsPacketDirectEnabled;
  struct _NDIS_RW_LOCK_EX *ProviderListLock;
  _LIST_ENTRY ProviderList;
  unsigned int NumReceiveRssPDQueues;
  unsigned int NumPdQueues;
  _NVSC_VMBUS_CHANNEL_INFO *PdSubChannels;
  _LARGE_INTEGER MmioPhysicalAddress;
  unsigned int MmioLength;
  volatile __int64 QueueIdBitmap;
  void *Queue[64];
  struct _NDIS_RW_LOCK_EX *GroupListLock;
  _LIST_ENTRY GroupList;
};

/* 1181 */
struct _NVSC_MICROPORT_CONTEXT
{
  void *NdisMiniportHandle;
  void *MiniportAdapterContext;
  WDFDEVICE__ *WdfMiniportDevice;
  _NVSC_VMBUS_CHANNEL_INFO PrimaryChannel;
  _NVSC_VMBUS_CHANNEL_INFO *SubChannels;
  unsigned int NumSubChannels;
  _NVSC_RSS_INFO RssInfo;
  unsigned int *RssProcessorIndexs;
  unsigned int RssProcessorCount;
  _NVSC_STATE CurrentState;
  _KEVENT InitEvent;
  _KEVENT PnpSurpriseRemoveEvent;
  _KEVENT KmclInternalErrorEvent;
  unsigned int RequestedProtocolVersion;
  unsigned int ProtocolVersion;
  unsigned int NumIncomingMessageHandlers;
  unsigned int MinimumMessageSize;
  void (__stdcall **IncomingMessageHandlers)(_NVSC_MICROPORT_CONTEXT *, _NVSP_MESSAGE *, unsigned int, VMBPACKETCOMPLETION__ *);
  unsigned int MaximumMdlChainLength;
  volatile unsigned int NumOutstandingReceivedPackets;
  unsigned int NumPagesInIncomingRingBuffer;
  unsigned int NumPagesInOutgoingRingBuffer;
  unsigned int InterruptLatency;
  unsigned int MaxRndisMessageSize;
  unsigned int MaxNumOutstandingPackets;
  _NVSC_V1_CONTEXT Version1Data;
  _NVSC_V2_CONTEXT Version2Data;
  unsigned int MaxDataSize;
  unsigned int SupplementalSendBufferSize;
  void *SupplementalSendBuffer;
  _NVSC_SUPPLEMENTAL_SEND_BUFFER_SECTION *SupplementalSendBufferSections;
  _SLIST_HEADER SupplementalSendBuffersListHead;
  unsigned __int8 RequireSendBuffer;
  _NVSC_PD_ADAPTER_CONTEXT PdContext;
};

/* 615 */
struct WDFDEVICE__
{
  int unused;
};

/* 1104 */
struct VMBCHANNEL__
{
  int unused;
};

/* 1184 */
union _NVSP_ALL_MESSAGES
{
  _NVSP_MESSAGE_INIT_UBER InitMessages;
  _NVSP_MESSAGE_1_UBER Version1Messages;
  _NVSP_MESSAGE_2_UBER Version2Messages;
  _NVSP_MESSAGE_4_UBER Version4Messages;
  _NVSP_MESSAGE_5_UBER Version5Messages;
  _NVSP_MESSAGE_6_UBER Version6Messages;
};

/* 1185 */
struct __unaligned __declspec(align(4)) _NVSP_MESSAGE
{
  _NVSP_MESSAGE_HEADER Header;
  _NVSP_ALL_MESSAGES Messages;
};

/* 1179 */
struct VMBPACKETCOMPLETION__
{
  int unused;
};

/* 1102 */
struct _RM_RNDIS_SUBALLOCATION_CONTEXT
{
  _MDL *Mdl;
  _NET_BUFFER_LIST *NetBufferList;
};

/* 1186 */
struct _NVSC_V1_SEND_BUFFER_SECTION
{
  _SINGLE_LIST_ENTRY SListEntry;
  void *Buffer;
  unsigned int Index;
};

/* 1187 */
struct VMBPACKET__
{
  int unused;
};

/* 1173 */
struct _NVSC_SUPPLEMENTAL_SEND_BUFFER_SECTION
{
  _SINGLE_LIST_ENTRY SListEntry;
  void *Buffer;
  _MDL *mdl;
};

/* 1170 */
struct _NVSC_PDBM_DOMAIN
{
  unsigned int Signature;
  unsigned int Id;
  _LIST_ENTRY DomainListEntry;
  void *MiniportAdapterContext;
  _LIST_ENTRY RegionList;
};

/* 498 */
struct _MDL
{
  _MDL *Next;
  __int16 Size;
  __int16 MdlFlags;
  struct _EPROCESS *Process;
  void *MappedSystemVa;
  void *StartVa;
  unsigned int ByteCount;
  unsigned int ByteOffset;
};

/* 887 */
struct $BD5759AA8011C0271A9ED90F6E9A9154
{
  _NET_BUFFER_LIST *Next;
  _NET_BUFFER *FirstNetBuffer;
};

/* 888 */
union _NET_BUFFER_LIST_HEADER
{
  $BD5759AA8011C0271A9ED90F6E9A9154 __s0;
  _SLIST_HEADER Link;
};

/* 890 */
union $D9E54647CB76507D8B6789EB223F7943
{
  $BD5759AA8011C0271A9ED90F6E9A9154 __s0;
  _SLIST_HEADER Link;
  _NET_BUFFER_LIST_HEADER NetBufferListHeader;
};

/* 891 */
union $C5ADD1FF3FF13D2C674FA6825D7C68A2
{
  int Status;
  unsigned int NdisReserved2;
};

/* 879 */
struct _NET_BUFFER_LIST
{
  $D9E54647CB76507D8B6789EB223F7943 ___u0;
  _NET_BUFFER_LIST_CONTEXT *Context;
  _NET_BUFFER_LIST *ParentNetBufferList;
  void *NdisPoolHandle;
  __declspec(align(8)) void *NdisReserved[2];
  void *ProtocolReserved[4];
  void *MiniportReserved[2];
  void *Scratch;
  void *SourceHandle;
  unsigned int NblFlags;
  int ChildRefCount;
  unsigned int Flags;
  $C5ADD1FF3FF13D2C674FA6825D7C68A2 ___u12;
  void *NetBufferListInfo[21];
};

/* 881 */
struct $BDC63944430D65BDF65D0425DB610F23
{
  _NET_BUFFER *Next;
  _MDL *CurrentMdl;
  unsigned int CurrentMdlOffset;
  unsigned int DataLength;
  _MDL *MdlChain;
  unsigned int DataOffset;
};

/* 882 */
struct $74083188D6CA37C4C5CC6CD1BB05D605
{
  _SLIST_HEADER Link;
  _BYTE gap8[4];
  unsigned int stDataLength;
};

/* 883 */
union _NET_BUFFER_HEADER
{
  $BDC63944430D65BDF65D0425DB610F23 __s0;
  $74083188D6CA37C4C5CC6CD1BB05D605 __s1;
};

/* 885 */
union $B197ACCDCC4484C7563D9C7A667DFEB1
{
  $BDC63944430D65BDF65D0425DB610F23 __s0;
  $74083188D6CA37C4C5CC6CD1BB05D605 __s1;
  _NET_BUFFER_HEADER NetBufferHeader;
};

/* 886 */
union $A519A699746C8798E1678032E1EC4876
{
  _NET_BUFFER_SHARED_MEMORY *SharedMemoryInfo;
  _SCATTER_GATHER_LIST *ScatterGatherList;
};

/* 880 */
struct __declspec(align(8)) _NET_BUFFER
{
  $B197ACCDCC4484C7563D9C7A667DFEB1 ___u0;
  unsigned __int16 ChecksumBias;
  unsigned __int16 Reserved;
  void *NdisPoolHandle;
  void *NdisReserved[2];
  void *ProtocolReserved[6];
  void *MiniportReserved[4];
  _LARGE_INTEGER DataPhysicalAddress;
  $A519A699746C8798E1678032E1EC4876 ___u8;
};

/* 889 */
struct _NET_BUFFER_LIST_CONTEXT
{
  _NET_BUFFER_LIST_CONTEXT *Next;
  unsigned __int16 Size;
  unsigned __int16 Offset;
  unsigned __int8 ContextData[];
};

/* 884 */
struct _NET_BUFFER_SHARED_MEMORY
{
  _NET_BUFFER_SHARED_MEMORY *NextSharedMemorySegment;
  unsigned int SharedMemoryFlags;
  void *SharedMemoryHandle;
  unsigned int SharedMemoryOffset;
  unsigned int SharedMemoryLength;
};

/* 593 */
struct _SCATTER_GATHER_ELEMENT
{
  _LARGE_INTEGER Address;
  unsigned int Length;
  unsigned int Reserved;
};

/* 594 */
struct _SCATTER_GATHER_LIST
{
  unsigned int NumberOfElements;
  unsigned int Reserved;
  _SCATTER_GATHER_ELEMENT Elements[];
};

/* 1197 */
struct NVSC_PROTOCOL_VERSION
{
  unsigned int ProtocolVersion;
  unsigned int NumIncomingMessageHandlers;
  unsigned int MinimumMessageSize;
  void (__stdcall **IncomingMessageHandlers)(_NVSC_MICROPORT_CONTEXT *, _NVSP_MESSAGE *, unsigned int, VMBPACKETCOMPLETION__ *);
};

/* 1202 */
struct $7F922323ADB25EB999A6CD37668EE709
{
  _KEVENT *Event;
  _NVSP_6_MESSAGE_PD_API_COMPLETE *CompletionInfo;
};

/* 1203 */
struct $C5CDF9D86B5DD0A4ACBBB31849839131
{
  void *PDQueue;
  _NVSP_6_MESSAGE_PD_BATCH_MESSAGE *Message;
};

/* 1335 */
struct _NVSP_SEND_INDIRECTION_TABLE_MESSAGE
{
  _NVSP_MESSAGE NvspMessage;
  unsigned int SendIndirectionTable[16];
};

/* 1836 */
struct _NVSP_TRANSFER_PAGE_RANGE
{
  unsigned __int64 TransferPageSetId;
  unsigned int ByteCount;
  unsigned int ByteOffset;
};

/* 2889 */
typedef _NVSP_MESSAGE_INIT *PNVSP_MESSAGE_INIT;

/* 2922 */
typedef _NVSP_1_MESSAGE_REVOKE_SEND_BUFFER *PNVSP_1_MESSAGE_REVOKE_SEND_BUFFER;

/* 3028 */
typedef _NVSP_4_MESSAGE_SWITCH_DATA_PATH *PNVSP_4_MESSAGE_SWITCH_DATA_PATH;

/* 3098 */
typedef _NVSP_TRANSFER_PAGE_RANGE *PNVSP_TRANSFER_PAGE_RANGE;

/* 3221 */
typedef _NVSP_1_MESSAGE_SEND_RECEIVE_BUFFER *PNVSP_1_MESSAGE_SEND_RECEIVE_BUFFER;

/* 3321 */
typedef _NVSP_MESSAGE_HEADER *PNVSP_MESSAGE_HEADER;

/* 3716 */
typedef _NVSP_5_MESSAGE_OID_QUERY_EX *PNVSP_5_MESSAGE_OID_QUERY_EX;

/* 3976 */
typedef _NVSP_5_MESSAGE_OID_QUERY_EX_COMPLETE *PNVSP_5_MESSAGE_OID_QUERY_EX_COMPLETE;

/* 3992 */
typedef _NVSP_1_MESSAGE_REVOKE_RECEIVE_BUFFER *PNVSP_1_MESSAGE_REVOKE_RECEIVE_BUFFER;

/* 4223 */
typedef _NVSP_MESSAGE_TYPE *PNVSP_MESSAGE_TYPE;

/* 4715 */
typedef _NVSP_MESSAGE_INIT_COMPLETE *PNVSP_MESSAGE_INIT_COMPLETE;

/* 4728 */
typedef _NVSP_1_RECEIVE_BUFFER_SECTION *PNVSP_1_RECEIVE_BUFFER_SECTION;

/* 4823 */
typedef _NVSP_1_MESSAGE_SEND_RECEIVE_BUFFER_COMPLETE *PNVSP_1_MESSAGE_SEND_RECEIVE_BUFFER_COMPLETE;

/* 4941 */
typedef _NVSP_4_MESSAGE_SEND_VF_ASSOCIATION *PNVSP_4_MESSAGE_SEND_VF_ASSOCIATION;

/* 5171 */
typedef _NVSP_6_MESSAGE_PD_API_REQUEST *PNVSP_6_MESSAGE_PD_API_REQUEST;

/* 5304 */
typedef _NVSP_1_MESSAGE_SEND_SEND_BUFFER_COMPLETE *PNVSP_1_MESSAGE_SEND_SEND_BUFFER_COMPLETE;

/* 5323 */
typedef _NVSP_2_MESSAGE_SEND_NDIS_CONFIG *PNVSP_2_MESSAGE_SEND_NDIS_CONFIG;

/* 5429 */
typedef _NVSP_5_MESSAGE_SUBCHANNEL_REQUEST *PNVSP_5_MESSAGE_SUBCHANNEL_REQUEST;

/* 5455 */
typedef void (__stdcall *PFN_HANDLE_INCOMING_MESSAGE)(_NVSC_MICROPORT_CONTEXT *, _NVSP_MESSAGE *, unsigned int, VMBPACKETCOMPLETION__ *);

/* 5839 */
typedef _NVSP_MESSAGE *PNVSP_MESSAGE;

/* 5899 */
typedef _NVSP_1_MESSAGE_SEND_RNDIS_PACKET_COMPLETE *PNVSP_1_MESSAGE_SEND_RNDIS_PACKET_COMPLETE;

/* 6223 */
typedef _NVSP_6_MESSAGE_PD_API_COMPLETE *PNVSP_6_MESSAGE_PD_API_COMPLETE;

/* 6243 */
typedef _NVSP_2_NETVSC_CAPABILITIES *PNVSP_2_NETVSC_CAPABILITIES;

/* 6273 */
typedef _NVSP_1_MESSAGE_SEND_RNDIS_PACKET *PNVSP_1_MESSAGE_SEND_RNDIS_PACKET;

/* 6307 */
typedef _NVSP_5_MESSAGE_SEND_INDIRECTION_TABLE *PNVSP_5_MESSAGE_SEND_INDIRECTION_TABLE;

/* 6403 */
typedef _NVSP_6_MESSAGE_PD_BATCH_MESSAGE *PNVSP_6_MESSAGE_PD_BATCH_MESSAGE;

/* 6441 */
typedef _NVSP_5_MESSAGE_SUBCHANNEL_COMPLETE *PNVSP_5_MESSAGE_SUBCHANNEL_COMPLETE;

/* 6514 */
typedef _NVSP_SUBCHANNEL_OPERATION *PNVSP_SUBCHANNEL_OPERATION;

/* 6556 */
typedef _NVSP_1_MESSAGE_SEND_SEND_BUFFER *PNVSP_1_MESSAGE_SEND_SEND_BUFFER;

/* 6576 */
typedef _NVSP_STATUS *PNVSP_STATUS;

/* 6687 */
typedef _NVSP_VM_DATA_PATH *PNVSP_VM_DATA_PATH;

/* 6720 */
typedef _NVSP_1_MESSAGE_SEND_NDIS_VERSION *PNVSP_1_MESSAGE_SEND_NDIS_VERSION;

/* 6792 */
typedef _NVSP_SEND_INDIRECTION_TABLE_MESSAGE *PNVSP_SEND_INDIRECTION_TABLE_MESSAGE;

